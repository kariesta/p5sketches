{"version":3,"sources":["utils.js","sketches/rays.js","ArtPages/drawings.js","sketches/simple.js","sketches/fan.js","sketches/heart.js","sketches/breathe.js","sketches/pyramid.js","sketches/techdiff.js","sketches/splat.js","sketches/spins.js","sketches/colorSqrs.js","sketches/sortyBoy.js","sketches/pinkfloyd.js","sketches/spirograph.js","sketches/sunny.js","sketches/twisty.js","sketches/moenster.js","ArtPages/SketchFrame.js","ArtPages/ArtPage.js","App.js","reportWebVitals.js","index.js"],"names":["calulateDimentions","window","w","innerWidth","h","innerHeight","ratio","frame","p5","bColor","fColor","padding","noStroke","fill","rect","stroke","noFill","rays","lim","innerheight","innerwidth","wWidth","wHeight","evenEdgeCoor","percent","angle","tan","setup","canvasParentRef","createCanvas","parent","angleMode","DEGREES","draw","background","ellipse","i","coor","line","arc","id","getId","nowId","toString","drawings","description","sketch","moves","rotation","length","Math","sqrt","pow","sin","cos","lastCord","distance","heartLeft","heartRight","points","tris","triCount","backing","rotatePoints","pointarray","rotated","rotatedPoints","rotatedBottomPoints","forEach","p","dist","asin","nyx","nyy","push","concat","offset","xOff","yOff","map","x","generatePoints","y","slice","strokeWeight","point","poinatos","triangle","mousePressed","mw","mh","rotneg","increase","j","triangleColor","lineCount","sideLength","color","unitDistance","xOffset","yOffset","triangleCornerX","triangleCornerY","mouseX","mouseY","width","height","pointInFrame","betweenfocals","sum","a","b","text","splat","numX","randomGaussian","numY","transparency","corners","widthSpace","heightSpace","blocked","findCorners","antX","antY","maxX","maxY","corns","sortButton","shuffleBottton","toSortIndex","toShuffleIndex","numOfStones","isSorting","isShuffled","stonePositions","stoneColors","StonePosition","this","StoneColor","c","nr","initArrays","sortingStep","smallest","filter","it","smallestIndex","indexOf","shufflingStep","randomIndex","floor","random","sortStones","console","log","shuffleStones","frameRate","colorMode","HSB","createButton","position","pos","col","midtX","midtY","colors","lightTriangel","offSet","horisontal","vert1","vert2","ratio1","ratio2","degree","orbitPos","radius","tinyXY","dotXY","tinyRad","backgroundColor","frameColor","waveColors","mouseWeightY","toCenter","sunW","sunH","wave","wavesize","HALF_PI","PI","lineart","movement","mX","mY","lastDot","startDot","endDot","dotDiff","locked","animate","inputD","inputC","dots","lines","circleR","numOfDots","Dot","Line","x1","y1","x2","y2","mouseInDots","inDot","d","resetDots","createInput","value","textSize","l","nextDot","mouseReleased","abs","SketchFrame","props","useParams","drawing","nextId","undefined","parseInt","className","href","children","ArtPage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c67f6f46.chunk.js","sourcesContent":["export const calulateDimentions = (window) => {\n    const { innerWidth: w, innerHeight: h } = window;\n    const ratio = 3/5;\n    if(w >= h){\n        return [h*ratio ,h*ratio];\n    } else {\n        return [w*ratio ,w*ratio];\n    }\n};\n\nexport const frame = (p5,bColor,fColor,padding,w,h) => {\n    p5.noStroke();\n    p5.fill(bColor);\n    p5.rect(0,0,padding,h);\n    p5.rect(0,0,w,padding);\n    p5.rect(0,h-padding,w,padding);\n    p5.rect(w-padding,0,padding,h);\n    p5.stroke(fColor);\n    p5.noFill();\n    p5.rect(padding,padding,w-(padding*2),h-(padding*2));\n};\n\nexport const pointInFrame = (width,height,padding,x,y) => {\n  let xInFrame = x>padding && x<(width-padding);\n  let yInFrame = y>padding && y<(height-padding);\n  return xInFrame && yInFrame;\n};\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\n/*function rays(){\n    let lim;\n    let innerheight;\n    let innerwidth;\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n    let wWidth = 400, wHeight = 400;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(innerwidth, wHeight).parent(canvasParentRef);\n\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        //p5.rect(0,0,innerwidth,innerheight/2);\n        //p5.noFill();\n\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(innerwidth/2,innerheight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(innerwidth/2,innerheight/2,100,100,180,0);\n    };\n\n    return <Sketch setup={setup} draw={draw}/>;\n}*/\n\nfunction rays() {\n    let maxLim = 200;\n\n    let lim;\n    let innerheight;\n    let innerwidth;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        p5.rect(0,0,wWidth,wHeight/2);\n        p5.noFill();\n\n        for(let i = 0; i<=lim; i++) {\n            p5.stroke(0);\n            let coor = evenEdgeCoor(p5,i / lim);\n            p5.stroke(0);\n            p5.line(innerwidth/2,innerheight/2,coor[0],coor[1]);\n            p5.stroke(255);\n            p5.line(innerwidth/2,innerheight/2,coor[0],innerheight-coor[1]);\n        }\n        if (lim<maxLim){\n            lim++;\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(wWidth/2,wHeight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(wWidth/2,wHeight/2,100,100,180,0);\n    };\n\n    const evenEdgeCoor = (p5,percent) => {\n        let angle = percent*180;\n        if (angle<45){\n            return[(wWidth-innerwidth)/2,(innerheight/2)*(p5.tan(angle))]\n        } else if (angle<90){\n            return[(innerwidth/2)*(p5.tan(90-angle)),(wHeight-innerheight)/2];\n        } else if (angle<(90+45)){\n            return[(innerwidth/2)+((innerwidth/2)*(p5.tan(135-angle))),(wHeight-innerheight)/2];\n            //x =0;\n        } else{\n            return[innerwidth+((wWidth-innerwidth)/2),((innerheight/2)*(p5.tan((180-angle))))];\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}\n\nexport default rays;\n","import simple from '../sketches/simple.js';\nimport rays from '../sketches/rays.js';\nimport fan from '../sketches/fan.js';\nimport heart from '../sketches/heart.js';\nimport breathe from '../sketches/breathe.js';\nimport pyramid from '../sketches/pyramid.js';\nimport techdiff from '../sketches/techdiff.js';\nimport splat from '../sketches/splat.js';\nimport spins from '../sketches/spins.js';\nimport colorSqrs from \"../sketches/colorSqrs\";\nimport sortyBoy from \"../sketches/sortyBoy\";\nimport pinkfloyd from \"../sketches/pinkfloyd\";\nimport spirograph from \"../sketches/spirograph\";\nimport sunny from \"../sketches/sunny\";\nimport twisty from \"../sketches/twisty\";\nimport moenster from \"../sketches/moenster\";\n\nlet id = 0;\nconst getId = () => {\n    let nowId = id.toString();\n    id++;\n    return nowId;\n};\n\nconst drawings = [\n    {\n        id: getId(),\n        description: 'en enkel animasjon',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'Sol i svart-hvit',\n        sketch: rays\n    },\n    {\n        id: getId(),\n        description: 'vifte',\n        sketch: fan\n    },\n    {\n        id: getId(),\n        description: 'hjerte',\n        sketch: heart\n    },\n    {\n        id: getId(),\n        description: 'pust',\n        sketch: breathe\n    },\n    {\n        id: getId(),\n        description: 'pyramide',\n        sketch: pyramid\n    },\n    {\n        id: getId(),\n        description: 'tekniske problemer',\n        sketch: techdiff\n    },\n    {\n        id: getId(),\n        description: 'splat',\n        sketch: splat\n    },\n    {\n        id: getId(),\n        description: 'spinny boi',\n        sketch: spins\n    },\n    {\n        id: getId(),\n        description: 'fargeruter',\n        sketch: colorSqrs\n    },\n    {\n        id: getId(),\n        description: 'Insert sortering',\n        sketch: sortyBoy\n    },\n    {\n        id: getId(),\n        description: 'pinkfloyd - the dark side of the moon',\n        sketch: pinkfloyd\n    },\n    {\n        id: getId(),\n        description: 'spirograph',\n        sketch: spirograph\n    },\n    {\n        id: getId(),\n        description: 'sol og strand',\n        sketch: sunny\n    },\n    {\n        id: getId(),\n        description: 'string-art',\n        sketch: twisty\n    },\n    {\n        //TODO transparante mønstre, et beveger seg horisontalt, ett diagonalt.\n        id: getId(),\n        description: 'mønstermonster',\n        sketch: moenster\n    }\n];\n\n//TODO ball som faller nedover, ymse figurer går oppover, ball triller av.\nexport default drawings;","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.fill(255, 130, 20);\n        p5.ellipse(100+moves, 100+moves, 100+moves);\n        p5.ellipse(300, 100, 100);\n        moves++;\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    let rotation = 5;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(240,100,100);\n        let w = 180;\n        let h = 100;\n        for (let i = 0; i<360;i+=5){\n            let length = Math.sqrt(Math.pow(w*p5.sin(i),2)+Math.pow(h*p5.cos(i),2));\n            let lastCord = (wHeight/2);\n            let distance = (length*p5.sin(i+rotation));\n            if(i<90){\n                lastCord += distance;\n            } else if(i<180){\n                lastCord -= distance;\n            } else if(i<270){\n                lastCord += distance;\n            } else {\n                lastCord -= distance;\n            }\n            p5.line((wWidth/2),(wHeight/2),(wWidth/2)+((length*p5.cos(i+rotation))),lastCord);\n        }\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n\n        rotation += 0.2;\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}\n","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function simple(){\n    const wWidth = 400, wHeight = 400;\n    let points = [];\n    let tris = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n    let heartLeft;\n    let heartRight;\n    let triCount = 2;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        generatePoints();\n\n        heartLeft = offset(rotatePoints(p5, points,45,0),14,0);\n        heartLeft = heartLeft.slice(25,40).concat(heartLeft.slice(0,9));\n        heartRight = offset(rotatePoints(p5, points,135,0),-14,0);\n        heartRight = heartRight.slice(12,34);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100);\n        heartLeft.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.stroke(250,100,100);\n        heartRight.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.line(heartRight[0][0],heartRight[0][1],heartRight[heartRight.length-1][0],heartRight[heartRight.length-1][1]);\n\n        //draw triangles\n        p5.noStroke();\n        if (tris.length>0){\n            tris.forEach((poinatos) => {\n                p5.fill(250,100,100);\n                p5.triangle(poinatos[0][0],poinatos[0][1],poinatos[1][0],poinatos[1][1],poinatos[2][0],poinatos[2][1]);\n            });\n        }\n\n        rotation = (rotation%360)+5;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n    };\n\n    const rotatePoints = (p5,pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            //line(width/2,height/2,nyx,nyy);//points[k][0],points[k][1]);\n            //stroke(255);\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    const offset = (pointarray,xOff,yOff) => {\n        return pointarray.map(x => [x[0]+xOff,x[1]+yOff]);\n    };\n\n    const mousePressed = () => {\n        //add triangle\n        if (triCount<heartRight.length-1){\n            tris.push([heartRight[0],heartRight[heartRight.length-1],heartRight[triCount++]]);\n            tris.push([heartLeft[0],heartLeft[heartLeft.length-1],heartLeft[triCount++]]);\n        } else {\n            triCount = 1;\n            tris = [];\n        }\n    };\n\n    //alt for treigt, regn ut fra sentrum & vinkler.\n    const generatePoints = () => {\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n === 1){\n                    points.push([x,y]);\n                }\n            }\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\n\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function breathe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const mw = wWidth/2, mh = wHeight/2;\n    let rotation = 5;\n    let rotneg = false;\n    let offset=100-45;\n    let increase = 2*(rotation%90/90);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.stroke(150,50,50);\n        p5.line(mw,mh,mw+(50*p5.sin(rotation)),mh+(50*p5.cos(rotation)));\n        p5.line(mw,mh,mw+(100*p5.cos(rotation)),mh+(100*p5.sin(rotation)));\n        \n        p5.stroke(50);\n        for (let j = 0;j<20;j++){\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw-(50*p5.sin((180/20)*j)));\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw+(50*p5.sin((180/20)*j)));\n        }\n\n        if (rotneg){\n            offset -= increase;\n        } else {\n            offset += increase;\n        }\n\n        if (rotation%90 === 0){\n            rotneg = !rotneg;\n        }\n        rotation = (rotation%360)+1;\n        increase = 2*(rotation%90/90);\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame, pointInFrame} from \"../utils\";\n\n//TODO utvide med vertikale trekanter istede for horisontale streker.\nexport default function pyramid(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const padding = 40;\n    let lineCount = 9; //linenumber\n    let sideLength = 280;\n    let bColor,triangleColor;\n    //let topp;let left;let right;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        bColor = p5.color(200,230,222);\n        triangleColor = p5.color(100,130,122);\n    };\n\n    const draw = p5 => {\n        p5.background(bColor);\n\n        p5.strokeWeight(1);\n        p5.stroke(0,0,0,80);\n        p5.fill(triangleColor);\n        //offset of coorinates\n        let unitDistance = (sideLength/lineCount);\n        let xOffset = unitDistance*0.5;\n        let yOffset = xOffset*Math.sqrt(3);\n        let triangleCornerX = (wWidth-sideLength)/2;\n        let triangleCornerY = (wHeight-(sideLength-20))/2;\n\n        //3 arrays of coordinates, one for each side.\n        //draw the lines from line coordinates to x\n        for (let i = 0; i < lineCount; i++) {\n            p5.line(triangleCornerX+(unitDistance*i),triangleCornerY,p5.mouseX,p5.mouseY); //top\n            p5.line(triangleCornerX+(xOffset*i),triangleCornerY+(yOffset*i),p5.mouseX,p5.mouseY); //left\n            p5.line(triangleCornerX+sideLength-(xOffset*i),triangleCornerY+(yOffset*i),p5.mouseX,p5.mouseY); //right\n        }\n        //Final frame\n        frame(p5,bColor,triangleColor,padding,wWidth,wHeight);\n    };\n\n    const mousePressed = (p5) => {\n        if(pointInFrame(wWidth,wHeight,padding,p5.mouseX,p5.mouseY)){\n            lineCount++;\n        } else {\n            lineCount = 1;\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let points = [];\n    let rotation = 5;\n    let ellipseaddon = 80;\n    let betweenfocals;\n    let length;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        betweenfocals = Math.sqrt(Math.pow(wWidth/2,2)+Math.pow(wHeight/2,2));\n        length = (wWidth/2)+ellipseaddon;\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        //rotating lines\n        p5.line(wWidth/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        p5.line(wWidth*3/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        let i = 1;\n        let sum = 0;\n        let a = 0;\n        let b = 0;\n        while(sum<length){\n            //for(i = 1; i<100; i++){\n            //a = Math.sqrt(Math.pow(i*cos(rotation),2)+Math.pow(i*sin(rotation),2));\n            a = Math.sqrt(Math.pow(i*p5.cos(rotation),2)+Math.pow(i*p5.sin(rotation),2));\n            b = Math.sqrt(Math.pow((i+betweenfocals)*p5.cos(rotation),2)+Math.pow((i+betweenfocals)*p5.sin(rotation),2));\n            sum = a+b;\n            i++;\n            p5.line(10,10*i,i*p5.cos(rotation),10*i);\n            p5.line(10,5+(10*i),i*p5.sin(rotation),5+10*i);\n        }\n\n        p5.text(sum,10,40);\n        p5.text(length,10,50);\n        let x = (wWidth/4)+(a*p5.cos(rotation+45));\n        let y = (wHeight*3/4)+(b*p5.sin(rotation+45));\n        p5.stroke(50,150,50);\n        p5.line(wWidth/4,wHeight/2,x,y);\n        p5.stroke(150,50,50);\n        p5.line(wWidth*3/4,wHeight/2,x,y);\n        p5.line(wWidth/4,wHeight/2,p5.mouseX,p5.mouseY);\n        p5.line(wWidth*3/4,wHeight/2,p5.mouseX,p5.mouseY);\n        points.push([(wWidth/4)-(a*p5.sin(rotation+45)),(wHeight*3/4)+b*p5.cos(rotation+45)]);\n\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        points.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(50*p5.sin(rotation)),(wHeight/2)+(50*p5.cos(rotation)));\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(100*p5.cos(rotation)),(wHeight/2)+(100*p5.sin(rotation)));\n        for (let j = 0;j<20;j++){\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)-(25*p5.sin((180/20)*j)));\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)+(25*p5.sin((180/20)*j)));\n\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)-50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)+50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n        }\n\n        rotation = (rotation%360)+1;\n    };\n\n    function backing(p5) {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(10);\n        p5.strokeWeight(10);\n        p5.point(wWidth/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.point(wWidth*3/4,wHeight/2);  //point(width/4,height*3/4);\n        p5.strokeWeight(1);\n        p5.stroke(150,50,50);\n    }\n\n    return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function splat(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let splat = [];\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(135,206,235,50);\n        for (let i = 1; i < splat.length; i++) {    //drawing all circles\n            p5.ellipse(splat[i][0], splat[i][1], splat[i][2], splat[i][3]);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        for (let i= 1; i < 20; i++){    //making 20 circles\n            let numX = p5.randomGaussian(0,1);\n            let numY = p5.randomGaussian(0,1);   //20 gaussian spread numbers\n            let meanX = p5.mouseX;\n            let meanY = p5.mouseY;//not actually needed in this code atm, but for future ideas\n            let standardDeviation = 50;\n            let x = standardDeviation * numX + meanX;\n            let y = standardDeviation * numY + meanY;\n            splat.push([x, y, 10/numX, 10/numX]); //only numX because numX with numY makes very long ellipses,could be fun though, try it yourself.\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function splat(){\n    const wWidth = 400, wHeight = 400;\n    const transparency = 200;\n    let points = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n===1){\n                    //points.push([(width/2)+((x-(width/2))*cos(rotation)),(height/2)+((y-(height/2))*sin(rotation))]);\n                    points.push([x,y]);\n                }\n            }\n        }\n    };\n\n    const draw = p5 => {\n        backing(p5);\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100,transparency);\n        let spin = rotatePoints(p5,points,rotation);\n        spin.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.stroke(250,100,100,transparency);\n        let spinoff = rotatePoints(p5,points,-rotation);\n\n        spinoff.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        rotation = (rotation%360)+1;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.stroke(240,110,110,transparency);\n        p5.strokeWeight(10);\n        p5.point(wWidth*2/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.strokeWeight(1);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        p5.stroke(150,50,50,transparency);\n    };\n\n    const rotatePoints = (p5, pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function colorSqrs(){\n    const wWidth = 400, wHeight = 400;\n    let corners;\n    let widthSpace;\n    let heightSpace;\n    let numX = 13;\n    let numY = 13;\n    let blocked = [];\n\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        //regn ut coordinater, width,height\n        corners = findCorners(numX,numY,wWidth-10,wHeight-10);\n        corners = corners.map (x => [x[0]+10,x[1]+10]);\n        blocked = [false*corners.length];\n        widthSpace = corners[1][0]-corners[0][0];\n        heightSpace = corners[numX][1]-corners[0][1];\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(255);\n        for(let x = 0; x<numX; x++){\n            for(let y = 0; y<numY; y++){\n                //avgjør farge\n                if (blocked[(x*numX)+y]){\n                    p5.fill(255);\n                } else {\n                    p5.fill(x*255/numX,y*255/numY,p5.cos(((x*numX)+y)/corners.length)*255);\n                }\n\n                //tegn rute.\n                p5.rect(corners[(x*numX)+y][0],corners[(x*numX)+y][1],widthSpace-10,heightSpace-10);\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        //finner hvilken rute vi er i nå.\n        if (p5.mouseX < wWidth && p5.mouseX > 0 && p5.mouseY < wHeight && p5.mouseY > 0){\n            let i = 0;\n            while (corners[i][1] < p5.mouseY && i<corners.length-1){\n                i++;\n            }\n            if (i !== corners.length-1){\n                i--;\n            }\n            while (corners[i][0] > p5.mouseX &&  i>0){\n                i--;\n            }\n            //endre farge\n            blocked[i] = !blocked[i];\n        }\n    };\n\n    const findCorners = (antX, antY, maxX,maxY) => {\n        let x = maxX/antX;\n        let y = maxY/antY;\n        let corns = [];\n        for(let j = 0; j+y<=maxY;j+=y){\n            for(let i = 0; i+x<=maxX;i+=x){\n                corns.push([i,j]);\n            }\n        }\n        return corns;\n    };\n\n    return <Sketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function splat(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let sortButton, shuffleBottton, toSortIndex = 0, toShuffleIndex = 0;\n    let numOfStones = 12, circleRadius = 100, stoneRadius = 20;\n    let isSorting = false, isShuffled = false;\n    let stonePositions = [],stoneColors = [];\n    class StonePosition {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class StoneColor {\n        constructor(i,c) {\n            this.nr = i;\n            this.color = c;\n        }\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.frameRate(4);\n        p5.colorMode(p5.HSB, wHeight, wHeight, wHeight);\n        initArrays(p5);\n\n        //sort knapp\n        sortButton = p5.createButton('insertion sort');\n        sortButton.position(130, 125);\n        sortButton.mousePressed(sortStones);\n\n        //shuffleknapp\n        shuffleBottton = p5.createButton('shuffle');\n        shuffleBottton.position(230, 125);\n        shuffleBottton.mousePressed(shuffleStones);\n    };\n\n    const draw = p5 => {\n        p5.background(80);\n        p5.noStroke();\n        p5.fill(255);\n\n        for (let i = 0; i<numOfStones; i++){\n            let pos = stonePositions[i];\n            let col = stoneColors[i];\n            p5.fill(col.color);\n            p5.ellipse(pos.x,pos.y,stoneRadius,stoneRadius);\n            p5.text(col.nr,pos.x-10,pos.y-10);\n        }\n        if(isShuffled){\n            shufflingStep();\n        }\n        if(isSorting){\n            sortingStep();\n        }\n    };\n\n    const initArrays = (p5) => {\n        for (let i = 0; i<numOfStones; i++){\n            stoneColors.push(new StoneColor(i, p5.color(i*(360/numOfStones),wHeight,wHeight)));\n            let x = (wWidth/2)+p5.cos((i/numOfStones)*360)*circleRadius;\n            let y = (wHeight/2)+p5.sin((i/numOfStones)*360)*circleRadius;\n            stonePositions.push(new StonePosition(x,y));\n        }\n    };\n\n    const sortingStep = () => {\n        let smallest = stoneColors.filter(it => it.nr === toSortIndex)[0];\n        let smallestIndex = stoneColors.indexOf(smallest);\n        [stoneColors[smallestIndex], stoneColors[toSortIndex]] = [stoneColors[toSortIndex], stoneColors[smallestIndex]];\n        toSortIndex+=1;\n        if (toSortIndex === numOfStones){\n          isSorting = false;\n        }\n    };\n\n    const shufflingStep = () => {\n        let randomIndex = Math.floor(Math.random() * toShuffleIndex);\n        // And swap it with the current element.\n        [stoneColors[randomIndex], stoneColors[toShuffleIndex]] = [stoneColors[toShuffleIndex], stoneColors[randomIndex]];\n        toShuffleIndex++;\n        if (toShuffleIndex === numOfStones){\n            isShuffled = false;\n        }\n    };\n\n    const sortStones = () => {\n        console.log(\"insertion sort\");\n        isSorting = true;\n        isShuffled = false;\n        toSortIndex = 0;\n    };\n\n    const shuffleStones = () => {\n        console.log(\"shuffle\");\n        isShuffled = true;\n        isSorting = false;\n        toShuffleIndex = 0;\n    };\n\n  return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function colorSqrs(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let midtX = 0;\n    let midtY = 0;\n    let colors = [];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        midtX = wWidth/2;\n        midtY = wHeight/3;\n        colors = [\n            p5.color(255,110,100),\n            p5.color(240,200,10),\n            p5.color(255,255,100),\n            p5.color(100,255,100),\n            p5.color(50,50,250),\n            p5.color(50,10,255),\n            p5.color(185,10,235)\n        ]\n    };\n\n    const draw = p5 => {\n        p5.background(0);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.line(p5.mouseX,p5.mouseY,midtX,midtY);\n        lightTriangel(p5);\n        p5.strokeWeight(3);\n        p5.stroke(255,255,255);\n        p5.fill(0);\n        p5.triangle(midtX,midtY*4/5,wWidth/3,midtY*2,wWidth*2/3,midtY*2);\n    };\n\n    const lightTriangel = (p5) => {\n        p5.strokeWeight(1);\n        let offSet = 30;\n        for (const col of colors) {\n            p5.fill(col);\n            p5.stroke(col);\n            let horisontal = (wWidth-p5.mouseX)-midtX;\n            let vert1 = (p5.mouseY-offSet)-midtY;\n            let vert2 = (p5.mouseY-offSet-7)-midtY;\n            let ratio1 = vert1/horisontal;\n            let ratio2 = vert2/horisontal;\n            p5.triangle(midtX,midtY,wWidth,midtY+(wWidth*ratio1),wWidth,midtY+(wWidth*ratio2));\n            offSet -= 7;\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function spirograph(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let degree = 0;\n    let points = [];\n    const bigRad = 150;\n    const tinyRad = 35;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //p5.frameRate(1);\n        //regn ut coordinater, width,height\n    };\n\n    //Ta noen kule farger da vell\n    // TODO tegn ringer\n    // liten ring beveger seg inni stor ring, omkretsen av liten ring og stor ring skal forholde seg likt.\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        degree=(degree+1)%360;\n\n        p5.fill(250);\n        p5.noStroke();\n        let tinyXY= orbitPos(p5, (bigRad-tinyRad)/2, degree);\n        p5.ellipse(wWidth/2+tinyXY[0],(wHeight/2)+tinyXY[1],tinyRad,tinyRad);\n        p5.noFill();\n        p5.stroke(0);\n        p5.strokeWeight(1);\n        p5.ellipse(wWidth/2,(wHeight/2),bigRad,bigRad);\n\n\n        //loop through list of dots.\n        let dotXY=orbitPos(p5,tinyRad/2,360-degree);\n        points.push([wWidth/2+tinyXY[0]+dotXY[0],(wHeight/2)+tinyXY[1]+dotXY[1]]);\n\n        for (let i = 0; i<points.length; i++){\n            p5.point(points[i][0],points[i][1]);\n        }\n\n        //regner ut ny posisjon for dot.\n        //tegner en liste av tidligere og den nye dotten\n    };\n\n    //degree range from 0 to 359.\n    const orbitPos = (p5,radius, degree) => {\n        return [radius*p5.sin(degree),radius*p5.cos(degree)];\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame} from \"../utils\";\n\nexport default function spirograph(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const paddingToFrame = 30;\n    let mouseWeight = 0.06; //lineart\n    let mouseWeightY = -0.11; //background\n    let toCenter = wWidth/2;\n    let sunW = (wWidth/2)+9, sunH = sunW-52;\n    let backgroundColor,frameColor,waveColors;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        backgroundColor = p5.color(250,245,245);\n        frameColor = p5.color(0);\n        waveColors = [p5.color(0,250,270),p5.color(0,225,245),p5.color(0,240,260)];\n    };\n\n    const draw = p5 => {\n        p5.background(backgroundColor);\n        p5.noStroke();\n        p5.fill(252,232,190);\n        p5.ellipse(sunW+(mouseWeightY*(p5.mouseX-toCenter)),sunH+(mouseWeightY*(p5.mouseY-toCenter)),70,70);\n        p5.noFill();\n        p5.strokeWeight(20);\n        let xOff = 0, yOff = 0;\n        p5.noFill();\n\n        wave(p5,waveColors[0],xOff+30+(mouseWeightY*(p5.mouseX-toCenter)),yOff+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[1],xOff+12+(mouseWeightY*(p5.mouseX-toCenter)),yOff+15+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[2],xOff-6+(mouseWeightY*(p5.mouseX-toCenter)),yOff+30+(mouseWeightY*(p5.mouseY-toCenter)),40);\n\n        //v lineart background v\n        lineart(p5,backgroundColor,mouseWeightY,xOff,yOff);\n\n        //v lineart v\n        lineart(p5,frameColor,mouseWeight,xOff,yOff);\n\n        //Final frame\n        frame(p5,backgroundColor,frameColor,paddingToFrame,wWidth,wHeight);\n    };\n\n    const wave = (p5,color,xOff,yOff,wavesize) => {\n        p5.stroke(color);\n        for (let i = 0; i < 11; i++) {\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*i),wavesize,wavesize,p5.HALF_PI, p5.PI);//wave*3\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*(i+1)),wavesize,wavesize,p5.HALF_PI+p5.PI,0);//wave*3\n        }\n    };\n\n    const lineart = (p5,color,movement,xOff,yOff) => {\n        p5.strokeWeight(4);\n        p5.noFill();\n        let mX = (movement*(p5.mouseX-toCenter));\n        let mY = (movement*(p5.mouseY-toCenter));\n        p5.stroke(color);\n        p5.arc(sunW+mX,sunH+mY,70,70, p5.PI+0.14,p5.HALF_PI-0.1);//wave*3\n        wave(p5,color,xOff+38+mX,yOff-9+mY,40);\n        wave(p5,color,xOff+21+mX,yOff+7+mY,40);\n        wave(p5,color,xOff+4+mX,yOff+23+mY,40);\n        wave(p5,color,xOff-13+mX,yOff+39+mY,40);\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils.js\";\n\nexport default function twisty(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let dots = [], lines = [];\n    let dotR = 20, circleR = 100, numOfDots = 12;\n    let lastDot,startDot,endDot,dotDiff,locked, animate;\n    let inputD, inputC;\n    class Dot {\n        constructor(i,x,y){\n            this.nr = i;\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class Line {\n        constructor(i,x1,y1,x2,y2){\n            this.nr = i;\n            this.x1 = x1;\n            this.x2 = x2;\n            this.y1 = y1;\n            this.y2 = y2;\n        }\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        resetDots(p5);\n        inputD = p5.createInput();\n        inputC = p5.createInput();\n        inputD.value(numOfDots);\n        inputC.value(circleR);\n        p5.fill(20);\n        p5.stroke(20);\n        p5.textSize(12);\n        p5.text(\"dots\",10, 65);\n        p5.text(\"radius\",10, 95);\n        inputD.position(100, 115);\n        inputC.position(100, 145);\n    };\n\n    const draw = p5 => {\n        if (inputD.value() !== numOfDots || inputC.value() !== circleR){\n            numOfDots = inputD.value();\n            circleR = inputC.value();\n            resetDots(p5);\n        }\n        p5.background(135,206,235);\n        p5.noStroke();\n        for (const d of dots){\n            //center  = height/2, cos((i/12)*360)*200 = x\n            p5.fill(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.ellipse(d.x,d.y,dotR,dotR);\n        }\n        for (const l of lines){\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(l.nr*4),200+(l.nr*2),200-(l.nr*10));\n            p5.line(l.x1,l.y1,l.x2,l.y2)\n        }\n        if (locked) {\n            let d = dots[startDot];\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.line(p5.mouseX,p5.mouseY,d.x,d.y);\n        }\n        if (animate){\n            let nextDot = (endDot+dotDiff)%numOfDots;\n            console.log(\"yo\"+nextDot+\",start:\"+startDot+\",end:\"+endDot);\n            lines.push(new Line(endDot,dots[endDot].x,dots[endDot].y,dots[nextDot].x,dots[nextDot].y));\n            endDot = (endDot+1)%numOfDots;\n            if (startDot === endDot){\n                animate = false;\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(mouseInDots(p5)){\n            locked = true;\n            startDot = lastDot;\n        }\n        lines = [];\n    };\n\n    const mouseReleased = (p5) => {\n        locked = false;\n        if(mouseInDots(p5)) {\n            endDot = lastDot;\n            animate = true;\n            dotDiff = Math.abs((startDot-endDot));//(endDot-startDot)%12;\n            console.log(endDot+\",\"+startDot+\",\"+dotDiff);\n        }\n    };\n\n    const mouseInDots = (p5) => {\n        let inDot = false;\n        for (const d of dots){\n            const myDist = p5.dist(d.x, d.y, p5.mouseX, p5.mouseY);\n            if( myDist<dotR){\n                inDot = true;\n                lastDot = d.nr;\n            }\n        }\n        return inDot;\n    };\n\n    const resetDots = (p5) => {\n        dots = [];\n        lines = [];\n        lastDot = 0;\n        startDot = 0;\n        endDot = 0;\n        dotDiff = 0;\n        locked = false;\n        animate = false;\n        for (let i = 0; i < numOfDots; i++) {\n            let x = (wWidth/2)+p5.cos((i/numOfDots)*360)*circleR;\n            let y = (wHeight/2)+p5.sin((i/numOfDots)*360)*circleR;\n            dots.push(new Dot(i,x,y));\n        }\n    };\n\n    return <Sketch setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased} />;\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        //background still\n\n        //pattern1 horisontal\n\n        //pattern2 diagonal\n    };\n\n    return <Sketch setup={setup} draw={draw} />;\n}\n\n","import React from 'react';\nimport drawings from './drawings.js';\nimport { useParams } from 'react-router';\n\nfunction SketchFrame(props) {\n    let { id }  = useParams();\n    let drawing = {description: \" \"};\n    let nextId = 0;\n    if (id === undefined || id < 0 || id >= drawings.length) {\n        drawing = drawings[0];\n        nextId = 1;\n        console.log(drawing);\n    } else {\n        drawing = drawings[parseInt(id)];\n        nextId = 1 + parseInt(id);\n        console.log(drawing);\n    }\n    if (nextId === drawings.length){\n        nextId = 0;\n    }\n    console.log(drawing);\n    return <div className={\"SketchFrame\"}>\n        <a href={\"/\"+(nextId)}><h2>Next</h2></a>\n        {props.children}\n        <div className={\"descriptionCard\"}>\n            <p>{drawing.description}</p>\n        </div>\n    </div>;\n}\n\nexport default SketchFrame;","import React from 'react';\nimport { useParams } from 'react-router';\nimport drawings from './drawings.js'\nimport SketchFrame from './SketchFrame';\n\nfunction ArtPage() {\n    let { id }  = useParams();\n    let drawing;\n    if (id === undefined || id < 1 || id >= drawings.length) {\n        drawing = drawings[0];\n    } else {\n        drawing = drawings[parseInt(id)];\n    }\n\n    return <div className={\"ArtPage\"}>\n        {\"Drawing number \" + id + \" is a \" + drawing.description}\n        <SketchFrame>\n            {drawing.sketch()}\n        </SketchFrame>\n    </div>;\n}\n\nexport default ArtPage;","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n} from \"react-router-dom\";\nimport ArtPage from './ArtPages/ArtPage';\nimport'./App.css';\n\n\nfunction App() {\n\n  return <BrowserRouter>\n    <Route exact path='/:id'>\n      <ArtPage/>\n    </Route>\n    <Route exact path='/'>\n      <ArtPage/>\n    </Route>\n  </BrowserRouter>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}