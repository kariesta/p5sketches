{"version":3,"sources":["ArtPages/SketchFrame.js","sketches/utils.js","sketches/simple.js","sketches/rays.js","sketches/fan.js","sketches/heart.js","sketches/breathe.js","sketches/pyramid.js","sketches/techdiff.js","sketches/splat.js","sketches/spins.js","sketches/colorSqrs.js","sketches/sortyBoy.js","sketches/pinkfloyd.js","sketches/spirograph.js","sketches/sunny.js","sketches/twisty.js","sketches/moenster.js","sketches/tumble.js","sketches/glitchy.js","sketches/threadEllipse.js","sketches/sinuswave.js","sketches/falling.js","sketches/findMe.js","sketches/vulfPeck.js","sketches/tallyHall.js","sketches/classixx.js","sketches/tree.js","sketches/jerryFolk.js","sketches/wavey.js","ArtPages/drawings.js","ArtPages/ArtPage.js","App.js","reportWebVitals.js","index.js"],"names":["SketchFrame","props","console","log","prevId","className","href","nextId","children","description","calulateDimentions","window","w","innerWidth","h","innerHeight","ratio","frame","p5","bColor","fColor","padding","noStroke","fill","rect","stroke","noFill","pointInFrame","width","height","x","y","drawLine","pointArray","prevP","undefined","forEach","p","line","SimpleSketch","Sketch","RaysSketch","FanSketch","HeartSketch","BreatheSketch","PyramidSketch","TechdiffSketch","SplatSketch","SpinsSketch","ColorSketch","SortyBoySketch","PinkfloydSketch","SpirographSketch","SunnySketch","TwistySketch","MoensterSketch","TumbleSketch","GlitchySketch","ThreadEllipseSketch","FallingSketch","FindMeSketch","VulfPeckSketch","ClassixxSketch","TreeSketch","JerryFolkSketch","WaveySketch","id","getId","nowId","toString","drawings","sketch","moves","wWidth","wHeight","setup","canvasParentRef","createCanvas","parent","draw","background","ellipse","lim","innerheight","innerwidth","evenEdgeCoor","percent","angle","tan","angleMode","DEGREES","i","coor","arc","rotation","length","Math","sqrt","pow","sin","cos","lastCord","distance","points","tris","heartLeft","heartRight","triCount","backing","rotatePoints","pointarray","rotated","rotatedPoints","rotatedBottomPoints","dist","asin","nyx","nyy","push","concat","offset","xOff","yOff","map","generatePoints","slice","strokeWeight","point","colours","color","poinatos","index","triangle","mousePressed","mouseX","mouseY","mw","mh","rotneg","increase","j","upperLeft","upperRight","lower","triangleModes","sideLength","heightLength","topp","bottom","left","mid","right","triangleMode","lineCount","triangleColor","centerPyramid","stepsLeft","copy","stepsRight","stepsTop","sub","div","nextLeftStart","nextRightStart","nextTopStart","add","aroundPyramid","mouseVector","createVector","stepsLower","nextLowerStart","twirlPyramid","stepsLowerToM","stepsRightToM","stepsLeftToM","stepsLowerToR","stepsUpperToR","stepsLeftToL","nextRightSideStart","nextLowerToMouseStart","nextUpperSideStart","nextRightToMouseStart","nextLeftSideStart","nextLeftToMouseStart","betweenfocals","sum","a","b","text","splat","numX","randomGaussian","numY","transparency","corners","widthSpace","heightSpace","blocked","findCorners","antX","antY","maxX","maxY","corns","sortButton","shuffleBottton","positionStyle","toSortIndex","toShuffleIndex","numOfStones","circleRadius","isSorting","isShuffled","StonePosition","this","StoneColor","c","nr","stonePositions","stoneColors","initArrays","sortingStep","smallest","filter","it","smallestIndex","indexOf","shufflingStep","randomIndex","floor","random","sortStones","shuffleStones","frameRate","colorMode","HSB","getBoundingClientRect","buttonBaseX","buttonBaseY","createButton","position","pos","col","midtX","midtY","colors","lightTriangel","offSet","horisontal","vert1","vert2","ratio1","ratio2","inputTiny","inputShort","centerV","bigV","smallV","shortV","bigCirc","smallCirc","smallSpeed","degree","spiroP1","spiroP2","legacy","bigRad","tinyRad","shortRad","totalRad","resetVectors","radiusVector","PI","parseInt","degrees","radius","spiro","centralV","spinV","speed","thesePoints","thisColor","current","rotate","drawLegacy","transparent","pointRow","createInput","size","value","orbitCenter","backgroundColor","frameColor","waveColors","mouseWeightY","toCenter","sunW","sunH","wave","wavesize","HALF_PI","lineart","movement","mX","mY","lastDot","startDot","endDot","dotDiff","locked","animate","inputD","inputC","dots","lines","circleR","numOfDots","Dot","Line","x1","y1","x2","y2","mouseInDots","inDot","d","resetDots","textSize","l","nextDot","mouseReleased","abs","triangleHeight","triangleSides","back","randomSeed","down","top","bot","ts2","squares","RADIANS","cFrom","cTo","stubs","randomStart","tumbleWeed","weed","scale","lerpColor","beginShape","vertex","endShape","CLOSE","stub","translate","textStyle","BOLD","c1","c2","mouseV","rel","center","inputDegrees","degreeInc","xedge","yedge","xpoints","ypoints","tanPoints","circling","xline","yline","drawPoints","direction","xcoor","ycoor","tanEnd","tanStart","tanStrength","mult","force","ellipseX","ellipseY","v1","v2","quad","startColor","endColor","upperV","lowerV","detailMode","lowSpring","start","end","mediumSpring","lowText","textAlign","CENTER","steps","inc","colorInc","mediumText","highSpring","upperFocal","lowerFocal","curve","setAlpha","highText","tile","tiles","squareSide","newTile","newtile","createGraphics","TOP","BOTTOM","tileCovering","tileRotations","image","pop","INVERT","imageMode","shorterSides","turn","mouseIsPressed","grayGreen","beigeGreen","lightGreen","leafGreen","darkGreen","allLines","activepoints","newActives","lerpStep","ellipseColor","foreground","grassHeight","grassColor","noiseVal","noise","calculateNext","p2","li","yMid","yEnd","centerH","mouseDim","runner1","runner2","unit","pickColors","seed","head","leftLowerArm","leftUpperArm","shoulder","rightUpperArm","rightLowerArm","rightUpperLeg","leftLeg","rightLowerLeg","paper","strokeJoin","ROUND","upperBody","graphic","drawRunner","runny","drawRunner2","oneWave","bezier","strengt","ArtPage","useParams","drawing","useEffect","document","title","sketchy","drawId","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f82b426.chunk.js","sourcesContent":["import React from 'react';\n\n//TODO use link instead?\nfunction SketchFrame(props) {\n    console.log(props.prevId);\n    return <div className={\"SketchFrame\"}>\n        <div className={\"SketchNav\"}>\n            <a href={\".#/\"+(props.prevId)}><h2>Prev</h2></a>\n            <a href={\".#/\"+(props.nextId)}><h2>Next</h2></a>\n        </div>\n        <div className={\"SketchWall\"}>\n            {props.children}\n            <div className={\"descriptionCard\"}>\n                <p>{props.description}</p>\n            </div>\n        </div>\n    </div>;\n}\n/*        <a href={\".#/\"+(props.nextId)} onClick={forceUpdate}><h2>Next</h2></a>\n*/\n\nexport default SketchFrame;","export const calulateDimentions = (window) => {\n    const { innerWidth: w, innerHeight: h } = window;\n    const ratio = 3/5;\n    if(w >= h){\n        return [h*ratio ,h*ratio];\n    } else {\n        return [w*ratio ,w*ratio];\n    }\n};\n\nexport const frame = (p5,bColor,fColor,padding,w,h) => {\n    p5.noStroke();\n    p5.fill(bColor);\n    p5.rect(0,0,padding,h);\n    p5.rect(0,0,w,padding);\n    p5.rect(0,h-padding,w,padding);\n    p5.rect(w-padding,0,padding,h);\n    p5.stroke(fColor);\n    p5.noFill();\n    p5.rect(padding,padding,w-(padding*2),h-(padding*2));\n};\n\nexport const pointInFrame = (width,height,padding,x,y) => {\n  let xInFrame = x>padding && x<(width-padding);\n  let yInFrame = y>padding && y<(height-padding);\n  return xInFrame && yInFrame;\n};\n\nexport const drawLine = (p5,pointArray) => {\n    let prevP = pointArray[0];\n    if (prevP[0] === undefined){\n        pointArray.forEach(p => {\n            p5.line(prevP.x,prevP.y,p.x,p.y);\n            prevP = p;\n        });\n    } else {\n        pointArray.forEach(p => {\n            p5.line(prevP[0],prevP[1],p[0],p[1]);\n            prevP = p;\n        });\n    }\n};","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function simple(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.noStroke();\n        p5.fill(255, 217, 2, 170);\n        p5.ellipse(100+moves, 100+moves, 100+moves);\n        p5.ellipse(300, 120, 100);\n        moves++;\n        if(moves>wWidth*1.5){\n            moves = -99;\n        }\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//todo dustribute lines closer in corner, or by noise?\nexport default function rays() {\n    let maxLim = 200;\n\n    let lim;\n    let innerheight;\n    let innerwidth;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        p5.rect(0,0,wWidth,wHeight/2);\n        p5.noFill();\n\n        for(let i = 0; i<=lim; i++) {\n            p5.stroke(0);\n            let coor = evenEdgeCoor(p5,i / lim);\n            p5.stroke(0);\n            p5.line(innerwidth/2,innerheight/2,coor[0],coor[1]);\n            p5.stroke(255);\n            p5.line(innerwidth/2,innerheight/2,coor[0],innerheight-coor[1]);\n        }\n        if (lim<maxLim){\n            lim++;\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(wWidth/2,wHeight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(wWidth/2,wHeight/2,100,100,180,0);\n    };\n\n    const evenEdgeCoor = (p5,percent) => {\n        let angle = percent*180;\n        if (angle<45){\n            return[(wWidth-innerwidth)/2,(innerheight/2)*(p5.tan(angle))]\n        } else if (angle<90){\n            return[(innerwidth/2)*(p5.tan(90-angle)),(wHeight-innerheight)/2];\n        } else if (angle<(90+45)){\n            return[(innerwidth/2)+((innerwidth/2)*(p5.tan(135-angle))),(wHeight-innerheight)/2];\n            //x =0;\n        } else{\n            return[innerwidth+((wWidth-innerwidth)/2),((innerheight/2)*(p5.tan((180-angle))))];\n        }\n    };\n\n    return <RaysSketch setup={setup} draw={draw} />;\n}\n\nclass RaysSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function simple(){\n    let rotation = 5;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(240,100,100);\n        let w = 180;\n        let h = 100;\n        for (let i = 0; i<360;i+=5){\n            let length = Math.sqrt(Math.pow(w*p5.sin(i),2)+Math.pow(h*p5.cos(i),2));\n            let lastCord = (wHeight/2);\n            let distance = (length*p5.sin(i+rotation));\n            if(i<90){\n                lastCord += distance;\n            } else if(i<180){\n                lastCord -= distance;\n            } else if(i<270){\n                lastCord += distance;\n            } else {\n                lastCord -= distance;\n            }\n            p5.line((wWidth/2),(wHeight/2),(wWidth/2)+((length*p5.cos(i+rotation))),lastCord);\n        }\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n\n        rotation += 0.2;\n    };\n\n    return <FanSketch setup={setup} draw={draw} />;\n}\n\nclass FanSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {pointInFrame} from \"./utils\";\n\nexport default function heart(){\n    const wWidth = 400, wHeight = 400;\n    let points = [];\n    let tris = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n    let heartLeft = [[0,0]*12];\n    let heartRight = [[0,0]*12];\n    let triCount = 2;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        generatePoints();\n\n        heartLeft = offset(rotatePoints(p5, points,45,0),14,0);\n        heartLeft = heartLeft.slice(25,40).concat(heartLeft.slice(0,9));\n        heartRight = offset(rotatePoints(p5, points,135,0),-14,0);\n        heartRight = heartRight.slice(12,34);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100);\n        heartLeft.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.stroke(250,100,100);\n        heartRight.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.line(heartRight[0][0],heartRight[0][1],heartRight[heartRight.length-1][0],heartRight[heartRight.length-1][1]);\n\n        //draw triangles\n        p5.noStroke();\n        let colours = [p5.color(250,100,100),p5.color(200,100,100)];\n        p5.fill(colours[0]);\n        if (tris.length>0){\n            tris.forEach((poinatos,index) => {\n                if (index%3 === 0){\n                    p5.fill(colours[index%2])\n                }\n                p5.triangle(poinatos[0][0],poinatos[0][1],poinatos[1][0],poinatos[1][1],poinatos[2][0],poinatos[2][1]);\n            });\n        }\n\n        rotation = (rotation%360)+5;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n    };\n\n    const rotatePoints = (p5,pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            //line(width/2,height/2,nyx,nyy);//points[k][0],points[k][1]);\n            //stroke(255);\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    const offset = (pointarray,xOff,yOff) => {\n        return pointarray.map(x => [x[0]+xOff,x[1]+yOff]);\n    };\n\n    const mousePressed = (p5) => {\n        if(!pointInFrame(wWidth,wHeight,0,p5.mouseX,p5.mouseY)){\n           return\n        }\n        //add triangle\n        if (triCount<heartRight.length-1){\n            tris.push([heartRight[0],heartRight[heartRight.length-1],heartRight[triCount++]]);\n            tris.push([heartLeft[0],heartLeft[heartLeft.length-1],heartLeft[triCount++]]);\n        } else {\n            triCount = 1;\n            tris = [];\n        }\n    };\n\n    //alt for treigt, regn ut fra sentrum & vinkler.\n    const generatePoints = () => {\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n === 1){\n                    points.push([x,y]);\n                }\n            }\n        }\n    };\n\n    return <HeartSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass HeartSketch extends Sketch {}\n\n\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function breathe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const mw = wWidth/2, mh = wHeight/2;\n    let rotation = 5;\n    let rotneg = false;\n    let offset=100-45;\n    let increase = 2*(rotation%90/90);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.stroke(150,50,50);\n        p5.line(mw,mh,mw+(50*p5.sin(rotation)),mh+(50*p5.cos(rotation)));\n        p5.line(mw,mh,mw+(100*p5.cos(rotation)),mh+(100*p5.sin(rotation)));\n        \n        p5.stroke(50);\n        for (let j = 0;j<20;j++){\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw-(50*p5.sin((180/20)*j)));\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw+(50*p5.sin((180/20)*j)));\n        }\n\n        if (rotneg){\n            offset -= increase;\n        } else {\n            offset += increase;\n        }\n\n        if (rotation%90 === 0){\n            rotneg = !rotneg;\n        }\n        rotation = (rotation%360)+1;\n        increase = 2*(rotation%90/90);\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n    };\n\n    return <BreatheSketch setup={setup} draw={draw} />;\n}\n\nclass BreatheSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame, pointInFrame} from \"./utils\";\n\nexport default function pyramid(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const padding = wWidth*0.1;\n    const triangleModes = {CENTER:'center',TWIRL:'twirl',AROUND: 'around'};\n    const sideLength = wWidth*0.7, heightLength= sideLength*0.866;\n    const topp = (wHeight-heightLength)/2, bottom = topp+heightLength;\n    const left = (wWidth-sideLength)/2, mid = left+(sideLength/2), right = left+sideLength;\n    let upperLeft,upperRight,lower;\n    let triangleMode = triangleModes.CENTER;\n    let lineCount = 9;\n    let bColor = 250 ,triangleColor = 0;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        bColor = p5.color(200,230,222);\n        triangleColor = p5.color(100,130,122,150);\n        upperLeft = p5.createVector(left,topp);\n        upperRight = p5.createVector(right,topp);\n        lower =  p5.createVector(mid,bottom);\n    };\n\n    const draw = p5 => {\n        p5.background(bColor);\n\n        p5.strokeWeight(1);\n        p5.stroke(0,0,0,80);\n        p5.fill(triangleColor);\n\n        switch (triangleMode) {\n            case triangleModes.CENTER:\n                centerPyramid(p5);\n                break;\n            case triangleModes.AROUND:\n                aroundPyramid(p5);\n                break;\n            case triangleModes.TWIRL:\n                twirlPyramid(p5);\n                break;\n            default:\n                centerPyramid(p5);\n        }\n        //Final frame\n        frame(p5,bColor,triangleColor,padding,wWidth,wHeight);\n    };\n\n    const centerPyramid = (p5) => {\n        let stepsLeft = lower.copy(), stepsRight =upperRight.copy(), stepsTop =upperLeft.copy();\n        stepsLeft.sub(upperLeft).div(lineCount);\n        stepsRight.sub(lower).div(lineCount);\n        stepsTop.sub(upperRight).div(lineCount);\n        let nextLeftStart = upperLeft.copy(),nextRightStart = lower.copy(), nextTopStart = upperRight.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.line(nextLeftStart.x,nextLeftStart.y,p5.mouseX,p5.mouseY);\n            nextLeftStart = nextLeftStart.add(stepsLeft);\n            p5.line(nextRightStart.x,nextRightStart.y,p5.mouseX,p5.mouseY);\n            nextRightStart = nextRightStart.add(stepsRight);\n            p5.line(nextTopStart.x,nextTopStart.y,p5.mouseX,p5.mouseY);\n            nextTopStart = nextTopStart.add(stepsTop);\n        }\n    };\n\n    const aroundPyramid = (p5) => {\n        let mouseVector = p5.createVector(p5.mouseX,p5.mouseY);\n        let stepsLower = mouseVector.copy(), stepsRight =mouseVector.copy(), stepsLeft =mouseVector.copy();\n\n        stepsLeft.sub(upperLeft).div(lineCount);\n        stepsRight.sub(upperRight).div(lineCount);\n        stepsLower.sub(lower).div(lineCount);\n        let nextLeftStart = upperLeft.copy(),nextRightStart = upperRight.copy(), nextLowerStart = lower.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.triangle(nextRightStart.x,nextRightStart.y,nextLeftStart.x,nextLeftStart.y,nextLowerStart.x,nextLowerStart.y);\n            nextLeftStart = nextLeftStart.add(stepsLeft);\n            nextRightStart = nextRightStart.add(stepsRight);\n            nextLowerStart = nextLowerStart.add(stepsLower);\n        }\n    };\n\n    const twirlPyramid = (p5) => {\n        let mouseVector = p5.createVector(p5.mouseX,p5.mouseY);\n        let stepsLowerToM = lower.copy(), stepsRightToM = upperRight.copy(), stepsLeftToM =upperLeft.copy();\n        let stepsLowerToR = lower.copy(), stepsUpperToR = upperRight.copy(), stepsLeftToL =upperLeft.copy();\n\n        stepsLowerToM.sub(mouseVector).div(lineCount);\n        stepsLowerToR.sub(upperRight).div(lineCount);\n\n        stepsRightToM.sub(mouseVector).div(lineCount);\n        stepsUpperToR.sub(upperLeft).div(lineCount);\n\n        stepsLeftToM.sub(mouseVector).div(lineCount);\n        stepsLeftToL.sub(lower).div(lineCount);\n\n        //første punkt er en prikk.\n        //andre punkt fra midten av bakken til midten av hjørnet til mousepoint.\n\n        let nextRightSideStart = lower.copy(), nextLowerToMouseStart = lower.copy();\n        let nextUpperSideStart = upperRight.copy(), nextRightToMouseStart = upperRight.copy();\n        let nextLeftSideStart = upperLeft.copy(), nextLeftToMouseStart = upperLeft.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.line(nextRightSideStart.x,nextRightSideStart.y,nextLowerToMouseStart.x,nextLowerToMouseStart.y);\n            nextRightSideStart.sub(stepsLowerToR);\n            nextLowerToMouseStart.sub(stepsLowerToM);\n\n            p5.line(nextUpperSideStart.x,nextUpperSideStart.y,nextRightToMouseStart.x,nextRightToMouseStart.y);\n            nextUpperSideStart.sub(stepsUpperToR);\n            nextRightToMouseStart.sub(stepsRightToM);\n\n            p5.line(nextLeftSideStart.x,nextLeftSideStart.y,nextLeftToMouseStart.x,nextLeftToMouseStart.y);\n            nextLeftSideStart.sub(stepsLeftToL);\n            nextLeftToMouseStart.sub(stepsLeftToM);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(pointInFrame(wWidth,wHeight,padding,p5.mouseX,p5.mouseY)){\n            lineCount++;\n        } else {\n            lineCount = 3;\n            switch (triangleMode) {\n                case triangleModes.CENTER:\n                    triangleMode = triangleModes.AROUND;\n                    break;\n                case triangleModes.AROUND:\n                    triangleMode = triangleModes.TWIRL;\n                    break;\n                case triangleModes.TWIRL:\n                    triangleMode = triangleModes.CENTER;\n                    break;\n                default:\n                    triangleMode = triangleModes.CENTER;\n            }\n        }\n    };\n\n    return <PyramidSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass PyramidSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function techdiff(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let points = [];\n    let rotation = 5;\n    let ellipseaddon = 80;\n    let betweenfocals;\n    let length;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        betweenfocals = Math.sqrt(Math.pow(wWidth/2,2)+Math.pow(wHeight/2,2));\n        length = (wWidth/2)+ellipseaddon;\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        //rotating lines\n        p5.line(wWidth/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        p5.line(wWidth*3/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        let i = 1;\n        let sum = 0;\n        let a = 0;\n        let b = 0;\n        while(sum<length){\n            //for(i = 1; i<100; i++){\n            //a = Math.sqrt(Math.pow(i*cos(rotation),2)+Math.pow(i*sin(rotation),2));\n            a = Math.sqrt(Math.pow(i*p5.cos(rotation),2)+Math.pow(i*p5.sin(rotation),2));\n            b = Math.sqrt(Math.pow((i+betweenfocals)*p5.cos(rotation),2)+Math.pow((i+betweenfocals)*p5.sin(rotation),2));\n            sum = a+b;\n            i++;\n            p5.line(10,10*i,i*p5.cos(rotation),10*i);\n            p5.line(10,5+(10*i),i*p5.sin(rotation),5+10*i);\n        }\n\n        p5.text(sum,10,40);\n        p5.text(length,10,50);\n        let x = (wWidth/4)+(a*p5.cos(rotation+45));\n        let y = (wHeight*3/4)+(b*p5.sin(rotation+45));\n        p5.stroke(50,150,50);\n        p5.line(wWidth/4,wHeight/2,x,y);\n        p5.stroke(150,50,50);\n        p5.line(wWidth*3/4,wHeight/2,x,y);\n        p5.line(wWidth/4,wHeight/2,p5.mouseX,p5.mouseY);\n        p5.line(wWidth*3/4,wHeight/2,p5.mouseX,p5.mouseY);\n        points.push([(wWidth/4)-(a*p5.sin(rotation+45)),(wHeight*3/4)+b*p5.cos(rotation+45)]);\n\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        points.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(50*p5.sin(rotation)),(wHeight/2)+(50*p5.cos(rotation)));\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(100*p5.cos(rotation)),(wHeight/2)+(100*p5.sin(rotation)));\n        for (let j = 0;j<20;j++){\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)-(25*p5.sin((180/20)*j)));\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)+(25*p5.sin((180/20)*j)));\n\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)-50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)+50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n        }\n\n        rotation = (rotation%360)+1;\n    };\n\n    function backing(p5) {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(10);\n        p5.strokeWeight(10);\n        p5.point(wWidth/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.point(wWidth*3/4,wHeight/2);  //point(width/4,height*3/4);\n        p5.strokeWeight(1);\n        p5.stroke(150,50,50);\n    }\n\n    return <TechdiffSketch setup={setup} draw={draw} />;\n}\n\nclass TechdiffSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function splat(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let splat = [];\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(135,206,235,50);\n        for (let i = 1; i < splat.length; i++) {    //drawing all circles\n            p5.ellipse(splat[i][0], splat[i][1], splat[i][2], splat[i][3]);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        for (let i= 1; i < 20; i++){    //making 20 circles\n            let numX = p5.randomGaussian(0,1);\n            let numY = p5.randomGaussian(0,1);   //20 gaussian spread numbers\n            let meanX = p5.mouseX;\n            let meanY = p5.mouseY;//not actually needed in this code atm, but for future ideas\n            let standardDeviation = 50;\n            let x = standardDeviation * numX + meanX;\n            let y = standardDeviation * numY + meanY;\n            splat.push([x, y, 10/numX, 10/numX]); //only numX because numX with numY makes very long ellipses,could be fun though, try it yourself.\n        }\n    };\n\n    return <SplatSketch  className={\"sketchy2\"}  setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass SplatSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function spins(){\n    const wWidth = 400, wHeight = 400;\n    const transparency = 200;\n    let points = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n\n\n    const setups = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n===1){\n                    //points.push([(width/2)+((x-(width/2))*cos(rotation)),(height/2)+((y-(height/2))*sin(rotation))]);\n                    points.push([x,y]);\n                }\n            }\n        }\n        //console.log(\"start window \" + canvasParentRef);\n        //console.log(\"start window \" + p5.canvas.parentElement.toString());\n        //console.log(\"   -> \" + p5.canvas.width + \",,,\" + p5.canvas.height);\n        //console.log(\"start spins \"+points.length);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100,transparency);\n        let spin = rotatePoints(p5,points,rotation);\n        spin.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        //console.log(\"spinnys \"+spin.length);\n        p5.stroke(250,100,100,transparency);\n        let spinoff = rotatePoints(p5,points,-rotation);\n\n        spinoff.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        rotation = (rotation%360)+1;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.stroke(240,110,110,transparency);\n        p5.strokeWeight(10);\n        p5.point(wWidth*2/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.strokeWeight(1);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        p5.stroke(150,50,50,transparency);\n    };\n\n    const rotatePoints = (p5, pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    return <SpinsSketch className={\"sketchy\"} setup={setups} draw={draw} />;\n}\n\nclass SpinsSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function colorSqrs(){\n    const wWidth = 400, wHeight = 400;\n    let corners = [[0,0]];\n    let widthSpace = 0;\n    let heightSpace = 0;\n    let numX = 13;\n    let numY = 13;\n    let blocked = [];\n\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        //regn ut coordinater, width,height\n        corners = findCorners(numX,numY,wWidth-10,wHeight-10);\n        corners = corners.map (x => [x[0]+10,x[1]+10]);\n        blocked = [false*corners.length];\n        widthSpace = corners[1][0]-corners[0][0];\n        heightSpace = corners[numX][1]-corners[0][1];\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(255);\n        if (corners.length>= numX) {\n            for(let x = 0; x<numX; x++){\n                for(let y = 0; y<numY; y++){\n                    //avgjør farge\n                    if (blocked[(x*numX)+y]){\n                        p5.fill(255);\n                    } else {\n                        p5.fill(x*255/numX,y*255/numY,p5.cos(((x*numX)+y)/corners.length)*255);\n                    }\n\n                    //tegn rute.\n                    p5.rect(corners[(x*numX)+y][0],corners[(x*numX)+y][1],widthSpace-10,heightSpace-10);\n                }\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        //finner hvilken rute vi er i nå.\n        if (p5.mouseX < wWidth && p5.mouseX > 0 && p5.mouseY < wHeight && p5.mouseY > 0){\n            let i = 0;\n            while (corners[i][1] < p5.mouseY && i<corners.length-1){\n                i++;\n            }\n            if (i !== corners.length-1){\n                i--;\n            }\n            while (corners[i][0] > p5.mouseX &&  i>0){\n                i--;\n            }\n            //endre farge\n            blocked[i] = !blocked[i];\n        }\n    };\n\n    const findCorners = (antX, antY, maxX,maxY) => {\n        let x = maxX/antX;\n        let y = maxY/antY;\n        let corns = [];\n        for(let j = 0; j+y<=maxY;j+=y){\n            for(let i = 0; i+x<=maxX;i+=x){\n                corns.push([i,j]);\n            }\n        }\n        return corns;\n    };\n\n    return <ColorSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass ColorSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function sortyBoy(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const positionStyle = 'fixed';\n    //it can be static, fixed, relative, sticky, initial or inherit\n    let sortButton, shuffleBottton, toSortIndex = 0, toShuffleIndex = 0;\n    let numOfStones = 12, circleRadius = wWidth*0.3, stoneRadius = 20;\n    let isSorting = false, isShuffled = false;\n    class StonePosition {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class StoneColor {\n        constructor(i,c) {\n            this.nr = i;\n            this.color = c;\n        }\n    }\n    let stonePositions = [new StonePosition(0,0)],stoneColors = [new StoneColor(0,0)];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.frameRate(4);\n        p5.colorMode(p5.HSB, wHeight, wHeight, wHeight);\n        initArrays(p5);\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n\n        //sort knapp\n        sortButton = p5.createButton('insertion sort');\n        sortButton.position(buttonBaseX+30, buttonBaseY+55, positionStyle);\n        sortButton.mousePressed(sortStones);\n\n        //shuffleknapp\n        shuffleBottton = p5.createButton('shuffle');\n        shuffleBottton.position(buttonBaseX+130, buttonBaseY+55, positionStyle);\n        shuffleBottton.mousePressed(shuffleStones);\n    };\n\n    const draw = p5 => {\n        p5.background(80);\n        p5.noStroke();\n        p5.fill(255);\n\n\n        for (let i = 0; i<stoneColors.length; i++){\n            let pos = stonePositions[i];\n            let col = stoneColors[i];\n            p5.fill(col.color);\n            p5.ellipse(pos.x,pos.y,stoneRadius,stoneRadius);\n            p5.text(col.nr,pos.x-10,pos.y-10);\n        }\n        if(isShuffled){\n            shufflingStep();\n        }\n        if(isSorting){\n            sortingStep();\n        }\n    };\n\n    const initArrays = (p5) => {\n        stoneColors = [];\n        stonePositions = [];\n        for (let i = 0; i<numOfStones; i++){\n            stoneColors.push(new StoneColor(i, p5.color(i*(360/numOfStones),wHeight,wHeight)));\n            let x = (wWidth/2)+p5.cos((i/numOfStones)*360)*circleRadius;\n            let y = (wHeight/2)+p5.sin((i/numOfStones)*360)*circleRadius;\n            stonePositions.push(new StonePosition(x,y));\n        }\n    };\n\n    const sortingStep = () => {\n        let smallest = stoneColors.filter(it => it.nr === toSortIndex)[0];\n        let smallestIndex = stoneColors.indexOf(smallest);\n        [stoneColors[smallestIndex], stoneColors[toSortIndex]] = [stoneColors[toSortIndex], stoneColors[smallestIndex]];\n        toSortIndex+=1;\n        if (toSortIndex === numOfStones){\n          isSorting = false;\n        }\n    };\n\n    const shufflingStep = () => {\n        let randomIndex = Math.floor(Math.random() * toShuffleIndex);\n        // And swap it with the current element.\n        [stoneColors[randomIndex], stoneColors[toShuffleIndex]] = [stoneColors[toShuffleIndex], stoneColors[randomIndex]];\n        toShuffleIndex++;\n        if (toShuffleIndex === numOfStones){\n            isShuffled = false;\n        }\n    };\n\n    const sortStones = () => {\n        //console.log(\"insertion sort\");\n        isSorting = true;\n        isShuffled = false;\n        toSortIndex = 0;\n    };\n\n    const shuffleStones = () => {\n        //console.log(\"shuffle\");\n        isShuffled = true;\n        isSorting = false;\n        toShuffleIndex = 0;\n    };\n\n  return <SortyBoySketch setup={setup} draw={draw} />;\n}\n\nclass SortyBoySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function pinkfloyd(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let midtX = 0;\n    let midtY = 0;\n    let colors = [];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        midtX = wWidth/2;\n        midtY = wHeight/3;\n        colors = [\n            p5.color(255,110,100),\n            p5.color(240,200,10),\n            p5.color(255,255,100),\n            p5.color(100,255,100),\n            p5.color(50,50,250),\n            p5.color(50,10,255),\n            p5.color(185,10,235)\n        ]\n    };\n\n    const draw = p5 => {\n        p5.background(0);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.line(p5.mouseX,p5.mouseY,midtX,midtY);\n        lightTriangel(p5);\n        p5.strokeWeight(3);\n        p5.stroke(255,255,255);\n        p5.fill(0);\n        p5.triangle(midtX,midtY*4/5,wWidth/3,midtY*2,wWidth*2/3,midtY*2);\n    };\n\n    const lightTriangel = (p5) => {\n        p5.strokeWeight(1);\n        let offSet = 30;\n        for (const col of colors) {\n            p5.fill(col);\n            p5.stroke(col);\n            let horisontal = (wWidth-p5.mouseX)-midtX;\n            let vert1 = (p5.mouseY-offSet)-midtY;\n            let vert2 = (p5.mouseY-offSet-7)-midtY;\n            let ratio1 = vert1/horisontal;\n            let ratio2 = vert2/horisontal;\n            p5.triangle(midtX,midtY,wWidth,midtY+(wWidth*ratio1),wWidth,midtY+(wWidth*ratio2));\n            offSet -= 7;\n        }\n    };\n\n    return <PinkfloydSketch setup={setup} draw={draw} />;\n}\n\nclass PinkfloydSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, drawLine} from \"./utils\";\n\n//TODO ved oppdatering legg tidligere linjer i en ny liste, som fader 33% ved hver nye liste i bakgrunnen.\nexport default function spirograph(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let degree = 0;\n    let points = [], spiroP1 = [], spiroP2 = [];\n    let legacy = [];\n    let bigRad = \"67\", tinyRad = 46, shortRad = 20;\n    let totalRad = bigRad+tinyRad;\n    let inputTiny, inputShort;\n    let centerV, bigV, smallV,shortV;\n    let bigCirc, smallCirc, smallSpeed;\n    let colors = [];\n\n    const resetVectors = (p5) => {\n        if (spiroP2.length > 0) {\n            legacy.push(spiroP2);\n        }\n\n        points = [];\n        spiroP1 = [];\n        spiroP2 = [];\n\n        smallV = radiusVector(p5,120,tinyRad);\n        shortV = radiusVector(p5,40,shortRad);\n\n        smallCirc = p5.PI*2*tinyRad;\n        bigCirc = p5.PI*2*totalRad;\n        totalRad = parseInt(bigRad)+parseInt(tinyRad);\n        smallSpeed = bigCirc/smallCirc;\n    };\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //p5.frameRate(1);\n        //regn ut coordinater, width,height\n\n        //input\n        inputTiny = p5.createInput(tinyRad);\n        inputShort = p5.createInput(shortRad);\n        inputTiny.size(30);\n        inputShort.size(30);\n\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n        inputTiny.position(buttonBaseX+20, buttonBaseY+65);\n        inputShort.position(buttonBaseX+20, buttonBaseY+95);\n\n        resetVectors(p5);\n        centerV = p5.createVector(wWidth/2,wHeight/2);\n        bigV = radiusVector(p5,degree,bigRad);\n\n        console.log(\" \"+smallCirc+\", \"+bigCirc+\", \"+smallSpeed);\n        console.log(\" \"+spiroP1+\", \"+smallV+\", \");\n        colors = [p5.color(139,157,235,0),p5.color(135,235,152),p5.color(94,164,107)]\n    };\n\n    const draw = p5 => {\n        if (inputTiny.value() !== tinyRad || inputShort.value() !== shortRad){\n            tinyRad = inputTiny.value();\n            shortRad = inputShort.value();\n            resetVectors(p5);\n        }\n\n        p5.background(135, 206, 235);\n        degree=(degree+1)%360;\n\n        p5.fill(250);\n        p5.noStroke();\n        p5.ellipse(wWidth/2,(wHeight/2),totalRad*2,totalRad*2);\n        p5.noFill();\n\n        let orbitCenter = spiro(p5,centerV,bigV,1,points,colors[0]);\n        p5.stroke(135, 206, 235);\n        p5.ellipse(orbitCenter.x,orbitCenter.y,tinyRad*2,tinyRad*2);\n        //let nextEnd =\n        spiro(p5,orbitCenter,shortV,-smallSpeed,spiroP2,colors[2]);\n        //let nextyEnd = spiro(p5,nextEnd,smallV,-smallSpeed,spiroP1,colors[1]);\n\n        drawLegacy(p5);\n\n        //regner ut ny posisjon for dot.\n        //tegner en liste av tidligere og den nye dotten\n    };\n\n    const radiusVector = (p5,degrees,radius) => {\n        return p5.createVector(p5.cos(degrees)*radius,p5.sin(degrees)*radius);\n    };\n\n    const spiro = (p5,centralV,spinV,speed,thesePoints,thisColor) => {\n        let current = centralV.copy();\n        spinV.rotate(speed);\n        current.add(spinV);\n        p5.stroke(135, 206, 235);\n        p5.line(centralV.x,centralV.y,current.x,current.y);\n        thesePoints.push([current.x,current.y]);\n        p5.stroke(thisColor);\n        drawLine(p5,thesePoints);\n        return current;\n    };\n\n    const drawLegacy = (p5) => {\n        let i = 3+legacy.length;\n        let transparent = 1/i;\n        legacy.forEach(pointRow =>\n        {\n            p5.stroke(139,157,235,255*transparent);\n            i--;\n            transparent += 1/i;\n            drawLine(p5,pointRow);\n\n        })\n    };\n\n    return <SpirographSketch setup={setup} draw={draw} />;\n}\n\nclass SpirographSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame} from \"./utils\";\n\nexport default function sunny(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const paddingToFrame = 30;\n    let mouseWeight = 0.06; //lineart\n    let mouseWeightY = -0.11; //background\n    let toCenter = wWidth/2;\n    let sunW = (wWidth/2)+9, sunH = sunW-52;\n    let backgroundColor,frameColor,waveColors;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        backgroundColor = p5.color(250,245,245);\n        frameColor = p5.color(0);\n        waveColors = [p5.color(0,250,270),p5.color(0,225,245),p5.color(0,240,260)];\n    };\n\n    const notInitialiced = () => {\n        return backgroundColor === undefined &&\n            frameColor === undefined &&\n            waveColors === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        p5.background(backgroundColor);\n        p5.noStroke();\n        p5.fill(252,232,190);\n        p5.ellipse(sunW+(mouseWeightY*(p5.mouseX-toCenter)),sunH+(mouseWeightY*(p5.mouseY-toCenter)),70,70);\n        p5.noFill();\n        p5.strokeWeight(20);\n        let xOff = 0, yOff = 0;\n\n        /*\n        let waveOffset = [[30,0],[12,15],[-6,30]];\n        for (let i = 0; i< waveColors.length;i++){\n            wave(p5,waveColors[i],xOff+waveOffset[i]+(mouseWeightY*(p5.mouseX-toCenter)),yOff+waveOffset[i]+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        }\n        */\n        wave(p5,waveColors[0],xOff+30+(mouseWeightY*(p5.mouseX-toCenter)),yOff+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[1],xOff+12+(mouseWeightY*(p5.mouseX-toCenter)),yOff+15+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[2],xOff-6+(mouseWeightY*(p5.mouseX-toCenter)),yOff+30+(mouseWeightY*(p5.mouseY-toCenter)),40);\n\n        //v lineart background v\n        lineart(p5,backgroundColor,mouseWeightY,xOff,yOff);\n\n        //v lineart v\n        lineart(p5,frameColor,mouseWeight,xOff,yOff);\n\n        //Final frame\n        frame(p5,backgroundColor,frameColor,paddingToFrame,wWidth,wHeight);\n    };\n\n    const wave = (p5,color,xOff,yOff,wavesize) => {\n        p5.stroke(color);\n        for (let i = 0; i < 11; i++) {\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*i),wavesize,wavesize,p5.HALF_PI, p5.PI);//wave*3\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*(i+1)),wavesize,wavesize,p5.HALF_PI+p5.PI,0);//wave*3\n        }\n    };\n\n    const lineart = (p5,color,movement,xOff,yOff) => {\n        p5.strokeWeight(4);\n        p5.noFill();\n        let mX = (movement*(p5.mouseX-toCenter));\n        let mY = (movement*(p5.mouseY-toCenter));\n        p5.stroke(color);\n        p5.arc(sunW+mX,sunH+mY,70,70, p5.PI+0.14,p5.HALF_PI-0.1);//wave*3\n        wave(p5,color,xOff+38+mX,yOff-9+mY,40);\n        wave(p5,color,xOff+21+mX,yOff+7+mY,40);\n        wave(p5,color,xOff+4+mX,yOff+23+mY,40);\n        wave(p5,color,xOff-13+mX,yOff+39+mY,40);\n    };\n\n    return <SunnySketch setup={setup} draw={draw} />;\n}\n\nclass SunnySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils.js\";\n\n//TODO correct lines for a to b and b to a.\nexport default function twisty(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let dots = [], lines = [];\n    let dotR = 20, circleR = 100, numOfDots = 12;\n    let lastDot,startDot,endDot,dotDiff,locked, animate;\n    let inputD, inputC;\n    class Dot {\n        constructor(i,x,y){\n            this.nr = i;\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class Line {\n        constructor(i,x1,y1,x2,y2){\n            this.nr = i;\n            this.x1 = x1;\n            this.x2 = x2;\n            this.y1 = y1;\n            this.y2 = y2;\n        }\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        resetDots(p5);\n\n        inputD = p5.createInput(numOfDots);\n        inputC = p5.createInput(circleR);\n        inputD.size(30);\n        inputC.size(30);\n        p5.fill(20);\n        p5.stroke(20);\n        p5.textSize(12);\n        p5.text(\"dots\",10, 65);\n        p5.text(\"radius\",10, 95);\n\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n        inputD.position(buttonBaseX+60, buttonBaseY+65);\n        inputC.position(buttonBaseX+60, buttonBaseY+95);\n    };\n\n    const notInitialiced = () => {\n        return lastDot === undefined && startDot === undefined && endDot === undefined && dotDiff === undefined &&\n            locked === undefined && animate === undefined && inputD === undefined && inputC === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        if (inputD.value() !== numOfDots || inputC.value() !== circleR){\n            numOfDots = inputD.value();\n            circleR = inputC.value();\n            resetDots(p5);\n        }\n        p5.background(135,206,235);\n        p5.noStroke();\n        for (const d of dots){\n            //center  = height/2, cos((i/12)*360)*200 = x\n            p5.fill(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.ellipse(d.x,d.y,dotR,dotR);\n        }\n        for (const l of lines){\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(l.nr*4),200+(l.nr*2),200-(l.nr*10));\n            p5.line(l.x1,l.y1,l.x2,l.y2)\n        }\n        if (locked) {\n            let d = dots[startDot];\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.line(p5.mouseX,p5.mouseY,d.x,d.y);\n        }\n        if (animate){\n            let nextDot = (endDot+dotDiff)%numOfDots;\n            ////console.log(\"yo\"+nextDot+\",start:\"+startDot+\",end:\"+endDot);\n            lines.push(new Line(endDot,dots[endDot].x,dots[endDot].y,dots[nextDot].x,dots[nextDot].y));\n            endDot = (endDot+1)%numOfDots;\n            if (startDot === endDot){\n                animate = false;\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(mouseInDots(p5)){\n            locked = true;\n            startDot = lastDot;\n        }\n        lines = [];\n    };\n\n    const mouseReleased = (p5) => {\n        locked = false;\n        if(mouseInDots(p5)) {\n            endDot = lastDot;\n            animate = true;\n            dotDiff = Math.abs((startDot-endDot));//(endDot-startDot)%12;\n            //console.log(endDot+\",\"+startDot+\",\"+dotDiff);\n        }\n    };\n\n    const mouseInDots = (p5) => {\n        let inDot = false;\n        for (const d of dots){\n            const myDist = p5.dist(d.x, d.y, p5.mouseX, p5.mouseY);\n            if( myDist<dotR){\n                inDot = true;\n                lastDot = d.nr;\n            }\n        }\n        return inDot;\n    };\n\n    const resetDots = (p5) => {\n        dots = [];\n        lines = [];\n        lastDot = 0;\n        startDot = 0;\n        endDot = 0;\n        dotDiff = 0;\n        locked = false;\n        animate = false;\n        for (let i = 0; i < numOfDots; i++) {\n            let x = (wWidth/2)+p5.cos((i/numOfDots)*360)*circleR;\n            let y = (wHeight/2)+p5.sin((i/numOfDots)*360)*circleR;\n            dots.push(new Dot(i,x,y));\n        }\n    };\n\n    return <TwistySketch setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased} />;\n}\n\nclass TwistySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO replace boxes and checks with\n//circles of variating fill and some strokes\n//moving fan-like\nexport default function moenster(){\n    let moves = 0;\n    const triangleSides = 50, triangleHeight = triangleSides*0.866;\n\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.RADIANS);\n    };\n\n    const draw = p5 => {\n        //background still\n        p5.background(255);\n        back(p5);\n\n        //pattern1 horisontal\n        lines(p5);\n\n        //pattern2 diagonal\n        squares(p5);\n\n        moves = (moves%40)+1;\n    };\n\n    const back = (p5) => {\n        p5.noStroke();\n        p5.randomSeed(100);\n        for (let down = 0; down<wHeight; down+=2*triangleHeight){\n            const top = down,  mid = top + triangleHeight, bot = mid + triangleHeight;\n            const ts = triangleSides, ts2 = triangleSides/2;\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,top,0,mid,ts2,mid);\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,bot,0,mid,ts2,mid);\n            for (let x = 0; x< wWidth; x+=ts){\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,top,x+ts,top,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,top,x+ts2*3,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,bot,x+ts,bot,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,bot,x+ts2*3,mid);\n            }\n        }\n    };\n\n    const lines = (p5) => {\n        p5.strokeWeight(10);\n        p5.stroke(250,200,250,200);\n        for (let x = -20; x< wWidth; x+=40){\n            p5.line(20+x+moves,0,x+moves,wHeight);\n        }\n        p5.strokeWeight(10);\n        p5.stroke(255,255,200,200);\n        for (let x = -30; x< wWidth; x+=40){\n            p5.line(0,30+x+moves,wWidth,x+moves);\n        }\n    };\n\n    const squares = (p5) => {\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(100,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(240,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(142,wHeight-25-(moves*9),30,30);\n\n    };\n\n    return <MoensterSketch setup={setup} draw={draw} />;\n}\n\nclass MoensterSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\n\n//TODO noise for smoothe kanter\nexport default function tumble(){\n    const wWidth = 400, wHeight = 400;\n    let moves = 30;\n    let stubs = [0,39,54,123,129,290,300,40];\n    let cFrom, cTo;\n    let randomStart=119;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        cFrom = p5.color(251,252,229,0.4*255);\n        cTo = p5.color(126,100,24,0.4*255);\n\n    };\n\n    const draw = p5 => {\n        p5.background(227,220,180);\n        p5.stroke(215,200,160);\n        p5.fill(215,200,160,180);\n        p5.rect(0,(wHeight-40)/2,wWidth,(wHeight+40)/2);\n        stubs.forEach(stub => {\n            p5.rect((stub+moves*0.7)%wWidth,(wHeight-50)/2,4,8);\n        });\n        p5.translate(moves,165);\n        p5.rotate(2*moves);\n        //0,0 er senter for rotasjon og forflytting\n        tumbleWeed(p5);\n\n        moves=(moves+1)%(wWidth+30);\n    };\n\n    const tumbleWeed = (p5) => {\n        if(moves===0){\n            randomStart++;\n        }\n        p5.randomSeed(randomStart);\n        //tegn tumbpleweedet her\n        p5.stroke(215,200,160);\n        p5.fill(250,240,230);\n        for (let i = 0.1;i<=1;i+=0.1){\n            weed(p5,i);\n        }\n    };\n\n    const weed = (p5,scale) => {\n        if(p5.random(0,1)>0.5){\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.stroke(c);\n            p5.noFill();\n        } else {\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.noStroke();\n            p5.fill(c);\n        }\n\n        p5.beginShape();\n        p5.vertex(p5.random(-40, 0)*scale, p5.random(-40, 0)*scale,);\n        p5.vertex(p5.random(-40, 5)*scale, p5.random(40,60)*scale);\n        p5.vertex(p5.random(50, 10)*scale, p5.random(40,60)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-40, 0)*scale);\n        p5.vertex(p5.random(50, 40)*scale, p5.random(-40, 0)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-20, 0)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-5, 0)*scale);\n        p5.endShape(p5.CLOSE);\n    };\n\n    return <TumbleSketch setup={setup} draw={draw} />;\n}\n\nclass TumbleSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function glitchy(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const text = 'Glitchy';\n    const offset = 4;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(10,10,10);\n        p5.noStroke();\n        p5.textSize(90);\n        p5.textStyle(p5.BOLD);\n        p5.fill(255, 26, 64, 250);\n        p5.text(text,(wWidth/6)-offset,wHeight/2);\n        p5.fill(26, 130, 255, 250);\n        p5.text(text,(wWidth/6)+offset,wHeight/2);\n        p5.fill(255);\n        p5.text(text,(wWidth/6),wHeight/2);\n        //TODO add lines of offset image\n        //maybe use https://www.npmjs.com/package/p5.glitch\n    };\n\n    return <GlitchySketch setup={setup} draw={draw} />;\n}\n\nclass GlitchySketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function threadEllipse(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const dist = (wWidth/3)*1.2;\n    let c1,c2;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        c1 = p5.createVector(wWidth/3,wHeight/2);\n        c2 = p5.createVector(wWidth*2/3,wHeight/2);\n        console.log(dist);\n    };\n\n    const draw = p5 => {\n        p5.background(231, 70, 69);\n        //p5.background(251, 119, 86);\n\n        //p5.stroke(250,205,96);\n        p5.stroke(251, 119, 86);\n        p5.strokeWeight(4);\n        p5.line(c1.x,c1.y,p5.mouseX,p5.mouseY);\n        p5.line(c2.x,c2.y,p5.mouseX,p5.mouseY);\n        p5.stroke(251, 119, 86, 200);\n        p5.line(wWidth/2,wHeight/2,p5.mouseX,p5.mouseY);\n\n        //define\n        let mouseV = p5.createVector(p5.mouseX,p5.mouseY);\n        let dist1 =  c1.dist(mouseV);\n        let dist2 =  c2.dist(mouseV);\n        let rel = dist1+dist2;\n        p5.text(rel,20,20);\n\n        //\n\n\n        p5.noStroke();\n        p5.fill(253, 250, 102);\n        p5.ellipse(c1.x,c1.y,10,10);\n        p5.ellipse(c2.x,c2.y,10,10);\n        p5.ellipse(p5.mouseX,p5.mouseY,10,10);\n\n        p5.noFill();\n        p5.stroke(253, 250, 102,50);\n        p5.ellipse(wWidth/2,wHeight/2,(wWidth/3)*1.4,wHeight*0.2)\n    };\n\n    return <ThreadEllipseSketch setup={setup} draw={draw} />;\n}\n\nclass ThreadEllipseSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, drawLine} from \"./utils\";\n\nexport default function sinuswave(){\n    let degrees = 0;\n    let degreeInc = 1;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const radius = wWidth/8;\n    let center;\n    const xedge = wWidth*2/3, yedge = wHeight/3;\n    let xpoints = [], ypoints = [], tanPoints = [];\n    let inputDegrees;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        //p5.frameRate(1);\n        center = p5.createVector(wWidth*5/6,wHeight/6);\n        inputDegrees = p5.createInput(degreeInc);\n        inputDegrees.size(30);\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n        inputDegrees.position(buttonBaseX+60, buttonBaseY+65);\n    };\n\n    const draw = p5 => {\n        p5.background(69, 77, 102);\n        if (inputDegrees.value() !== degreeInc && inputDegrees.value()!== ''){\n            degreeInc = inputDegrees.value();\n        }\n\n        let xcoor = center.y+radius*p5.cos(degrees);\n        let ycoor = center.x+radius*p5.sin(degrees);\n\n        xpoints.push(p5.createVector(xedge,xcoor));\n        ypoints.push(p5.createVector(ycoor,yedge));\n\n        circling(p5,xcoor,ycoor);\n        p5.stroke(218, 216, 115);\n        drawPoints(p5,xpoints,p5.createVector(-1,0));\n        drawPoints(p5,ypoints,p5.createVector(0,1));\n\n        let tanEnd = p5.createVector(xedge,yedge+radius);\n        let tanStart = p5.createVector(xedge-radius,yedge);\n        let tanStrength = tanEnd.copy().sub(tanStart).mult(p5.tan(degrees));\n        tanPoints.push(p5.createVector(tanStart.x+tanStrength.x,tanStart.y+tanStrength.y));\n        p5.stroke(218, 216, 115,100);\n        drawPoints(p5,tanPoints,p5.createVector(-1,1));\n\n        degrees = (degrees+parseInt(degreeInc))%360;\n    };\n\n    const circling = (p5,xline,yline) => {\n        p5.noStroke();\n        p5.fill(48, 153, 117);\n        p5.ellipse(center.x,center.y,radius*2,radius*2);\n        p5.stroke(88, 179, 104);\n        p5.line(center.x,center.y,yline,xline);\n\n        p5.strokeWeight(2);\n        p5.stroke(218, 216, 115);\n        p5.line(xedge,xline,yline,xline);\n        p5.line(yline,yedge,yline,xline);\n    };\n\n    const drawPoints = (p5, pointArray, direction) => {\n        //delete outside points\n        pointArray = pointArray.filter(point => {\n            return point.x < wWidth+5 &&\n                point.x > -5 &&\n                point.y < wHeight+5 &&\n                point.y > -5\n\n        });\n        //move points\n        pointArray.forEach(point => {\n            point.x += direction.x;\n            point.y += direction.y;\n            //p5.point(point.x,point.y);\n        });\n        //draw line between points\n        drawLine(p5,pointArray);\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function falling(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let moves = 0;\n    let distance, force;\n    let ellipseX, ellipseY;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        let v1 = p5.createVector(150,300);\n        let v2 = p5.createVector(300,400);\n        distance = v1.dist(v2);\n        force = v2.sub(v1).div(distance);\n        console.log(\" \"+wWidth+\", \"+wHeight);\n        console.log(force);\n        ellipseX = 200;\n        ellipseY = -10;\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.noStroke();\n        p5.fill(255, 217, 2, 170);\n        p5.ellipse(300, 120, 100);\n        moves++;\n        if(moves>wWidth*1.5){\n            moves = -10;\n            ellipseX = 200;\n            ellipseY = -10;\n        }\n        if(ellipseY>305 && ellipseY<390){\n            ellipseX += force.x;\n            ellipseY += force.y;\n        } else {\n            ellipseY += 1;\n        }\n        p5.ellipse(ellipseX, ellipseY, 50);\n\n\n        p5.quad(150,300,100,350,300,500,300,400);\n    };\n\n    return <FallingSketch setup={setup} draw={draw} />;\n}\n\nclass FallingSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO make colours change across spring\nexport default function findMe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let startColor, endColor, centerV, upperV, lowerV;\n    const radius = 300;\n    let detailMode = 0;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.colorMode(p5.HSB,100);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(5);\n        p5.stroke(255, 217, 2, 170);\n        p5.strokeWeight(5);\n        p5.noFill();\n        startColor = p5.color(2,100,100);\n        endColor = p5.color(20,100,100);\n        centerV = p5.createVector(-100,-10);\n        upperV = p5.createVector(0,-10);\n        lowerV = p5.createVector(-180,30);\n\n        switch (detailMode) {\n            case 0:\n                lowSpring(p5,centerV,95,10);\n                break;\n            case 1:\n                mediumSpring(p5,centerV,95,10, 12);\n                break;\n            default:\n                highSpring(p5,centerV,95,10, 12,upperV,lowerV);\n        }\n\n        startColor = p5.color(35,100,100);\n        endColor = p5.color(71,100,100);\n        centerV = p5.createVector(wWidth+100,-10);\n        upperV = p5.createVector(wWidth,-10);\n        lowerV = p5.createVector(wWidth+180,30);\n        switch (detailMode) {\n            case 0:\n                lowSpring(p5,centerV,-98,-2);\n                lowText(p5);\n                break;\n            case 1:\n                mediumSpring(p5,centerV,-98,-2, 15);\n                mediumText(p5);\n                break;\n            default:\n                highSpring(p5,centerV,-98,-2, 15,upperV,lowerV);\n                highText(p5);\n        }\n    };\n\n    const lowSpring = (p5,center,start,end) => {\n        mediumSpring(p5,center,start,end,300);\n    };\n\n    const lowText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.fill(255);\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"#### ##\",wWidth/2,wHeight*3/4);\n    };\n\n    const mediumSpring = (p5,center,start,end,steps) => {\n        //calc last lines\n        let inc = (end-start)/steps;\n        let colorInc = 1/steps;\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n            p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n        }\n    };\n\n    const mediumText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(2);\n        p5.fill(255);\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"Find me\",wWidth/2,wHeight*3/4);\n    };\n\n    const highSpring = (p5,center,start,end,steps,upperFocal,lowerFocal) => {\n        //calc last lines\n        let inc = (end-start)/steps;\n        let colorInc = 1/steps;\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n            //p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n            p5.curve(upperFocal.x,upperFocal.y,center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle),upperFocal.x,upperFocal.y);\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n        }\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            let c = p5.lerpColor(startColor,endColor, colorInc*i);\n            c.setAlpha(60);\n            //p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n            p5.stroke(c);\n            p5.curve(lowerFocal.x,lowerFocal.y,center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle),lowerFocal.x,lowerFocal.y);\n        }\n        //first draw bottom curves, then draw uppercurves.\n        //maybe use rotate? and push/pop\n    };\n\n    const highText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(1);\n        p5.noFill();\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"Find me\",wWidth/2,wHeight*3/4);\n    };\n\n    const mousePressed = () => {\n        detailMode = (detailMode+1)%3;\n    };\n\n    return <FindMeSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass FindMeSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO more pointy when moving from focal corner\nexport default function vulfPeck(){\n    let heights = 10, steps = 20;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const yStart = 10, yMid = wWidth*0.77, yEnd = wWidth-10;\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.stroke(255, 167, 2, 170);\n        let centerH = heights;\n        let mouseDim = 1+(p5.mouseY/wHeight);\n        for (let i = 1; i<steps;i++){\n            p5.line(yStart,wHeight-heights*i,yMid,wHeight-centerH);\n            p5.line(yMid,wHeight-centerH,yEnd,wHeight-heights*i);\n            centerH+=heights*(2-(1/i)*mouseDim);\n        }\n    };\n\n    return <VulfPeckSketch setup={setup} draw={draw} />;\n}\n\nclass VulfPeckSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function tallyHall(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const squareSide = wWidth/2;\n    const turns = 12;\n    let tile, tiles;\n    let degrees = 45;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.frameRate(30);\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        p5.imageMode(p5.CENTER);\n\n        tile = newTile(p5);\n        tiles = tileCovering(p5);\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.translate(wWidth/2, wHeight/2);\n        let shorterSides = p5.dist(squareSide,0,0,squareSide);\n        let rel = shorterSides/wWidth;\n        p5.image(tiles,0,0);\n        for (let turn = 0; turn < turns; turn++){\n            p5.rotate(degrees);\n            p5.image(tiles,0,0,shorterSides,shorterSides);\n            shorterSides*=rel;\n        }\n        if(!p5.mouseIsPressed){\n            degrees = (degrees+1)%360;\n        }\n    };\n\n    const newTile = (p5) => {\n        let newtile = p5.createGraphics(squareSide,squareSide);\n        newtile.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        newtile.background(255);\n        newtile.fill(0);\n        newtile.noStroke();\n        newtile.textSize(42);\n\n        newtile.triangle(0,0,0,squareSide,squareSide,squareSide);\n        newtile.textAlign(p5.CENTER, p5.TOP);\n        newtile.text('TALLY',squareSide*0.5,squareSide*0.05);\n        newtile.fill(255);\n        newtile.rotate(90);\n        newtile.textAlign(p5.CENTER, p5.BOTTOM);\n        newtile.text('HALL',squareSide*0.5,squareSide*-0.05);\n        return newtile;\n    };\n\n    const tileCovering = (p5) => {\n        let tileRotations = p5.createGraphics(wWidth,wHeight);\n        tileRotations.noStroke();\n        tileRotations.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        tileRotations.image(tile,0,0);\n        tileRotations.push();\n        tileRotations.rotate(90);\n        tileRotations.image(tile,0,-wHeight,squareSide,squareSide);\n        tileRotations.pop();\n        tileRotations.filter(p5.INVERT);\n        tileRotations.scale(1,-1);\n        tileRotations.image(tile,0,-wHeight);\n        tileRotations.rotate(90);\n        tileRotations.image(tile,-wWidth,-wHeight);\n        return tileRotations\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function classixx(){\n    //let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const unit = 20;\n    let runner1,runner2;\n    let colors;\n    let degrees = 0, offsetX = 3, offsetY = 10;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.imageMode(p5.CENTER);\n        p5.colorMode(p5.HSB,255);\n        colors = pickColors(p5,19);\n        runner1 = drawRunner(p5);\n        colors = pickColors(p5,36); //19,20\n        runner2 = drawRunner2(p5);\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.translate(wWidth/2, wHeight/2);\n        p5.rotate(45);\n        let xOff = offsetX*p5.sin(-degrees);\n        let yOff = offsetY*p5.cos(-degrees);\n        p5.image(runner1,xOff,yOff);\n        xOff = offsetX*p5.sin(-degrees+30);\n        yOff = offsetY*p5.cos(-degrees+30);\n        p5.image(runner2,unit+xOff,(unit*3)+yOff);\n\n        degrees = (degrees+3)%360;\n    };\n\n    const pickColors = (p5,seed) => {\n        p5.randomSeed(seed);\n        return {\n            head: p5.color(p5.random(0,255),255,255),\n            leftLowerArm: p5.color(p5.random(0,255),255,255),\n            leftUpperArm: p5.color(p5.random(0,255),255,255),\n            shoulder: p5.color(p5.random(0,255),255,255),\n            rightUpperArm: p5.color(p5.random(0,255),255,255),\n            rightLowerArm: p5.color(p5.random(0,255),255,255),\n            rightUpperLeg: p5.color(p5.random(0,255),255,255),\n            leftLeg: p5.color(p5.random(0,255),255,255),\n            rightLowerLeg: p5.color(p5.random(0,255),255,255),\n        }\n\n    };\n\n    const paper = (p5) => {\n        let paper = p5.createGraphics(unit*8,unit*11);\n        paper.angleMode(p5.DEGREES);\n        paper.background(0,0);\n        paper.stroke(250);\n        paper.strokeWeight(5);\n        paper.strokeJoin(p5.ROUND);\n        paper.fill(0);\n        paper.translate(2.5,2.5);\n        return paper\n    };\n\n    const upperBody = (graphic) => {\n        graphic.fill(colors.shoulder);\n        graphic.triangle(unit*4,0,                       //sholder\n            unit*4,unit*2,\n            unit*2,unit*2);\n        graphic.fill(colors.head);\n        graphic.ellipse(unit*5, unit*0.8, unit*1.5);         //head\n        graphic.fill(colors.rightUpperArm);\n        graphic.quad(unit*2,unit*2,                  //right UpperArm\n            unit*6,unit*2,\n            unit*6,unit*3,\n            unit,unit*3);\n        graphic.fill(colors.rightLowerArm);\n        graphic.rect(unit*6, unit*3, unit, -unit*2.5,0,0,unit,unit); //right lowerarm\n    };\n\n    const drawRunner = (p5) => {\n        let runny = paper(p5);\n\n        runny.fill(colors.leftLowerArm);\n        runny.rect(0, 0, unit, unit*2.5,0,0,unit,unit);//left lowerarm\n        runny.fill(colors.leftUpperArm);\n        runny.quad(unit,0,unit*4,0,unit*3,unit,unit,unit); //left upperarm\n        upperBody(runny);\n        runny.fill(colors.rightUpperLeg);\n        runny.rect(unit,unit*3,unit*4,unit,unit,0,0,unit);  //right upperLeg\n        runny.fill(colors.leftLeg);\n        runny.rect(unit, unit*4, unit, unit*6, 0,0,unit,unit);  //left leg\n        runny.fill(colors.rightLowerLeg);\n        runny.rect(unit*4, unit*4, unit, unit*2.5, 0,0,unit,unit);  //right lowerleg\n        return runny;\n    };\n\n    const drawRunner2 = (p5) => {\n        let runny = paper(p5);\n\n        runny.fill(colors.leftLeg);\n        runny.rect(unit*2,unit*3,unit*3.5,unit);  //left upperLeg\n        runny.fill(colors.leftUpperArm);\n        runny.rect(unit*4.5, unit*4, unit, unit*2.5, 0,0,unit,unit);  //left lowerleg\n        runny.push();\n        runny.translate(unit*2.5,-unit*1.5);//7runny.width/8);\n        runny.rotate(45);\n        runny.fill(colors.rightUpperLeg);\n        runny.rect(unit*2,unit*3,unit*3.5,unit);  //right upperLeg\n        runny.fill(colors.rightLowerLeg);\n        runny.rect(unit*4.5, unit*4, unit, unit*2.5, 0,0,unit,unit);  //right lowerleg\n        runny.pop();\n        runny.fill(colors.rightUpperArm);\n        upperBody(runny);\n\n        return runny;\n    };\n\n    return <ClassixxSketch setup={setup} draw={draw}/>;\n}\n\nclass ClassixxSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function tree(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const leaf = 4;\n    let moves = 0, starting = 20;\n    let allLines = [], activepoints= [], newActives = [];\n    let grayGreen,beigeGreen,lightGreen,leafGreen,darkGreen;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        grayGreen = p5.color(154, 167, 153);\n        beigeGreen = p5.color(172, 179, 135);\n        lightGreen = p5.color(192, 206, 149);\n        leafGreen =  p5.color(97, 113, 59);\n        darkGreen =  p5.color(70, 79, 41);\n\n        for(let i = 0; i<starting; i++) {\n            activepoints.push([p5.random(wWidth/3,wWidth*2/3),wHeight])\n        }\n        console.log(activepoints);\n    };\n\n    const draw = p5 => {\n        if(moves>=50){\n            foreground(p5,0.4,40);\n            return\n        }\n        background(p5);\n        foreground(p5,0.5,80);\n        //foreground(p5,0.5,50);\n\n        p5.strokeWeight(1);\n        p5.stroke(29, 33, 14);\n\n        //lines\n        allLines.forEach(li => {\n            p5.line(li[0],li[1],li[2],li[3])\n        });\n\n        //leaves\n        allLines.forEach(li => {\n            if (li[3] < wHeight / 2 && p5.random(0, 1) > 0.6) {\n                p5.stroke(leafGreen);\n                p5.strokeWeight(3);\n                let degree = p5.random(0, 360);\n                p5.line(li[2], li[3], li[2] + p5.sin(degree) * leaf, li[3] + p5.cos(degree) * leaf);\n                degree = p5.random(0, 360);\n                p5.line(li[2], li[3], li[2] + p5.sin(degree) * leaf, li[3] + p5.cos(degree) * leaf);\n            }\n        });\n\n        activepoints.forEach( p => {\n            //calculate branching\n            if(p5.random(0,1) === 0) {\n                calculateNext(p5,p);\n            }\n            //calculate next active point\n            calculateNext(p5,p);\n        });\n        activepoints = newActives;\n        newActives = [];\n        moves++;\n\n        foreground(p5,0.01,40);\n    };\n\n    const background = (p5) => {\n        p5.noStroke();\n\n        p5.background(154, 167, 153);\n\n        for(let i = 0;i<wHeight*0.6;i++){\n            let lerpStep = 1/(wHeight*0.3);\n            let ellipseColor = grayGreen;\n            if(i<wHeight*0.3){\n                ellipseColor = p5.lerpColor(grayGreen,beigeGreen,lerpStep*i);\n            } else {\n                ellipseColor = p5.lerpColor(beigeGreen,lightGreen,lerpStep*(i-(wHeight*0.3)));\n            }\n            p5.fill(ellipseColor);\n            p5.ellipse((wWidth/3),wHeight*0.1,(wWidth*1.8)-(i*3));\n\n            //p5.stroke(0);\n            //p5.strokeWeight(0.5);\n            //p5.line(0,wHeight/2,wWidth,wHeight/2);\n            //p5.line(wWidth/2,0,wWidth/2,wHeight);\n        }\n    };\n\n    const foreground = (p5,offset,grassHeight) => {\n        /*p5.background(91, 174, 222);\n        p5.background(192, 206, 149);\n        p5.background(172, 179, 135);\n        p5.background(154, 167, 153);*/\n        p5.noStroke();\n        let noiseScale=0.02;\n        let grassColor;\n        for (let x=0; x < wWidth; x++) {\n            let noiseVal = p5.noise((p5.mouseX+x)*noiseScale+offset, p5.mouseY*noiseScale);\n            console.log(noiseVal);\n            grassColor = p5.lerpColor(darkGreen,leafGreen,noiseVal);\n            p5.stroke(grassColor);\n            p5.line(x, wHeight-noiseVal*grassHeight, x, wHeight);\n        }\n        //p5.quad(wWidth/3,wHeight-20,wWidth*2/3,wHeight-20,wWidth*2/3,wHeight,wWidth/3,wHeight);\n    };\n\n    const calculateNext = (p5,p) => {\n        if(p[1]>wHeight/2){ //stamme\n            let p2;\n            if(p[0]>wWidth/2){\n                p2 = [p[0]+p5.random(-20,5),p[1]+p5.random(-20,0)];\n            } else {\n                p2 = [p[0]+p5.random(-5,20),p[1]+p5.random(-20,0)];\n            }\n            allLines.push([p[0],p[1],p2[0],p2[1]]);\n            newActives.push(p2);\n        } else { //korne\n            let p2 = [p[0]+p5.random(-30,+30),p[1]+p5.random(-30,20)];\n            allLines.push([p[0],p[1],p2[0],p2[1]]);\n            newActives.push(p2);\n        }\n    };\n\n    return <TreeSketch setup={setup} draw={draw} />;\n}\n\nclass TreeSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function jerryFolk(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.frameRate(7);\n        p5.angleMode(p5.DEGREES);\n        p5.textAlign(p5.CENTER,p5.CENTER);\n        p5.background(13, 247, 216);\n    };\n\n    const draw = p5 => {\n        p5.background(13, 247, 216,1);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.fill(255, 30, 211);\n        p5.textSize(50);\n        let l = wWidth/6;\n        /*let x = l*0.5+10*p5.sin((backMoves(moves))*2);\n        let y = (wHeight/2)+(wHeight*0.4)*p5.cos(moves);\n        p5.push();\n        p5.rotate(p5.cos(moves)*5);\n        p5.text(\"F\",x,y);\n        p5.pop();*/\n        let x = l*0.6;//+10*p5.sin((backMoves(moves))*2);\n        let y = (wHeight/2)+(wHeight*0.4)*p5.cos(moves);\n        p5.push();\n        p5.translate(0,p5.cos(moves)*5);\n        p5.rotate(p5.cos(moves)*5);\n        p5.text(\"F\",x,y);\n        p5.pop();\n\n        x = l*1.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"U\",x,y);\n        x = l*2.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"T\",x,y);\n        x = l*3.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"U\",x,y);\n        x = l*4.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"R\",x,y);\n        x = l*5.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"E\",x,y);\n\n        if(moves<360){\n            moves=(moves+5)%360;\n        }\n\n        /*if(!p5.mouseIsPressed){\n            moves=(moves+0.1)%360;\n        }*/\n    };\n\n    /*const backMoves = (degree) => {\n        if ((degree%360)>180) {\n            return 180-(degree%180)\n        } else {\n            return (degree%180)\n        }\n    }\n\n    const xRot = (p5,l,a) => {\n        return l+10*p5.sin(moves+a)\n    };\n\n    const yRot = (p5,a) => {\n        return (wHeight/2)+(wHeight/2)*p5.cos(moves+a)\n    };*/\n\n    return <JerryFolkSketch setup={setup} draw={draw} />;\n}\n\nclass JerryFolkSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function wavey(){\n    //let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    //todo click and drag bezier\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.stroke(255);\n        p5.fill(255, 217, 2, 50);\n\n        for(let i = 0; i<5;i++){\n            oneWave(p5,10+(i*8),10,80+(i*8),80);\n            oneWave(p5,13+(i*8),10,83+(i*8),80);\n        }\n        /* oneWave(p5,100,100,300,300);\n        oneWave(p5,100+5,100,300+5,300);\n        oneWave(p5,100+12,100,300+12,300);\n        */\n\n        //smallere versjon\n        oneWave(p5, 0, wHeight/2,wWidth/4,wHeight);\n        //small med like store vekter\n        let start = [wWidth,0], end = [wWidth*0.75,wHeight/2];\n        let strengt = wWidth/2;\n        p5.bezier(start[0],start[1],start[0]-strengt,start[1],\n            end[0]+strengt,end[1],end[0],end[1]);\n        //\n    };\n\n    const oneWave = (p5,x1,y1,x2,y2) => {\n        p5.stroke(255);\n        //p5.line(x2, y1, x1, y1);\n        //p5.line(x2, y2, x1, y2);\n        p5.stroke(0, 0, 0);\n        p5.bezier(x2, y1, x1, y1, x2, y2, x1, y2);\n    };\n\n    return <WaveySketch setup={setup} draw={draw} />;\n}\n\nclass WaveySketch extends Sketch {}\n\n","import simple from '../sketches/simple.js';\nimport rays from '../sketches/rays.js';\nimport fan from '../sketches/fan.js';\nimport heart from '../sketches/heart.js';\nimport breathe from '../sketches/breathe.js';\nimport pyramid from '../sketches/pyramid.js';\nimport techdiff from '../sketches/techdiff.js';\nimport splat from '../sketches/splat.js';\nimport spins from '../sketches/spins.js';\nimport colorSqrs from \"../sketches/colorSqrs\";\nimport sortyBoy from \"../sketches/sortyBoy\";\nimport pinkfloyd from \"../sketches/pinkfloyd\";\nimport spirograph from \"../sketches/spirograph\";\nimport sunny from \"../sketches/sunny\";\nimport twisty from \"../sketches/twisty\";\nimport moenster from \"../sketches/moenster\";\nimport tumble from \"../sketches/tumble\";\nimport glitchy from \"../sketches/glitchy\";\nimport threadEllipse from \"../sketches/threadEllipse\";\nimport sinuswave from \"../sketches/sinuswave\";\nimport falling from \"../sketches/falling\";\nimport findMe from \"../sketches/findMe\";\nimport vulfPeck from \"../sketches/vulfPeck\";\nimport tallyHall from \"../sketches/tallyHall\";\nimport classixx from \"../sketches/classixx\";\nimport tree from \"../sketches/tree\";\nimport jerryFolk from \"../sketches/jerryFolk\";\nimport wavey from \"../sketches/wavey\";\n\nlet id = 0;\nconst getId = () => {\n    let nowId = id.toString();\n    id++;\n    return nowId;\n};\n\n//TODO lag et filter med tags, interaktivt, inputfelt, enkelt, album, noise/random\nconst drawings = [\n    {\n        id: getId(),\n        description: 'en enkel animasjon',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'Sol i svart-hvit',\n        sketch: rays\n    },\n    {\n        id: getId(),\n        description: 'vifte',\n        sketch: fan\n    },\n    {\n        id: getId(),\n        description: 'hjerte',\n        sketch: heart\n    },\n    {\n        id: getId(),\n        description: 'pust',\n        sketch: breathe\n    },\n    {\n        id: getId(),\n        description: 'pyramide',\n        sketch: pyramid\n    },\n    {\n        id: getId(),\n        description: 'tekniske problemer',\n        sketch: techdiff\n    },\n    {\n        id: getId(),\n        description: 'splat',\n        sketch: splat\n    },\n    {\n        id: getId(),\n        description: 'spinny boi',\n        sketch: spins\n    },\n    {\n        id: getId(),\n        description: 'fargeruter',\n        sketch: colorSqrs\n    },\n    {\n        id: getId(),\n        description: 'Insert sortering',\n        sketch: sortyBoy\n    },\n    {\n        id: getId(),\n        description: 'Pinkfloyd - the dark side of the moon',\n        sketch: pinkfloyd\n    },\n    {\n        id: getId(),\n        description: 'spirograph',\n        sketch: spirograph\n    },\n    {\n        id: getId(),\n        description: 'sol og strand',\n        sketch: sunny\n    },\n    {\n        id: getId(),\n        description: 'string-art',\n        sketch: twisty\n    },\n    {\n        id: getId(),\n        description: 'mønstermonster',\n        sketch: moenster\n    },\n    {\n        id: getId(),\n        description: 'tumbleweed',\n        sketch: tumble\n    },\n    {\n        id: getId(),\n        description: 'glitchy',\n        sketch: glitchy\n    },\n    {\n        id: getId(),\n        description: 'thread-figures',\n        sketch: threadEllipse\n    },\n    {\n        id: getId(),\n        description: 'sinus-wave',\n        sketch: sinuswave\n    },\n    {\n        id: getId(),\n        description: 'falling',\n        sketch: falling\n    },\n    {\n        id: getId(),\n        description: 'Sigma - find me, but colour updates.',\n        sketch: findMe\n    },\n    {\n        id: getId(),\n        description: 'Tally hall - turn of the lights, but spinning',\n        sketch: tallyHall\n    },\n    {\n        id: getId(),\n        description: 'A tree',\n        sketch: tree\n    },\n    {\n        id: getId(),\n        description: 'Vulfpeck - thrill of the arts, but mouse reactive',\n        sketch: vulfPeck\n    },\n    {\n        id: getId(),\n        description: 'Classixx - all your waiting for, but arms and legs moving',\n        sketch: classixx\n    },\n    {\n        id: getId(),\n        description: 'TODO: wavey pattern',\n        sketch: wavey\n    },\n    {\n        id: getId(),\n        description: 'TODO: jerry folk - futura, but moving into place',\n        sketch: jerryFolk\n    },\n    /*{\n        id: getId(),\n        description: 'TODO: a rope, move up and down',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: blobs, either rows or floating around',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: mytype, but jumping off it',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: olaska loop line, but colors translating from orange/blue to pink/green',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: honningbarna opp de nye blanke, en prikk om gangen uten bakgrunn så tekst',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO:',\n        sketch: simple\n    },*/\n];\n\n//TODO add new favicon\n//TODO mimic this: desktop/mønster\n//TODO ball som faller nedover, ymse figurer går oppover, ball triller av.\n//TODO tegne elipse ved å ha en \"tråd\" mellom to punkter og nærmeste punktet mot musetasten. tegne punkter når en holder inne musa\n//TODO demonstrate that curved triangles roll as smooth as circles.\nexport default drawings;","import React, { useEffect } from 'react';\nimport SketchFrame from './SketchFrame';\nimport drawings from './drawings.js';\nimport { useParams } from 'react-router';\n\nfunction ArtPage() {\n    let { id }  = useParams();\n    //const []\n    let drawing = {description: \" \"};\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `You clicked ${id} times`;\n    });\n\n    let nextId = 0,prevId = drawings.length-1;\n    if (id === undefined || id < 0 || id >= drawings.length) {\n        id = 0;\n        drawing = drawings[0];\n        nextId = 1;\n    } else {\n        drawing = drawings[parseInt(id)];\n        nextId = 1 + parseInt(id);\n        if (id !== \"0\"){\n            prevId = parseInt(drawing.id)-1\n        }\n    }\n    if (nextId === drawings.length){\n        nextId = 0;\n    }\n    let sketchy = drawing.sketch();\n\n    return <div className={\"ArtPage\"}>\n        <SketchFrame nextId={nextId} prevId={prevId} description={drawing.description} drawId={drawing.id}>\n            {sketchy}\n        </SketchFrame>\n    </div>;\n}\n\nexport default ArtPage;","import React from 'react';\nimport {\n  HashRouter,\n  Route,\n} from \"react-router-dom\";\nimport ArtPage from './ArtPages/ArtPage';\nimport'./App.css';\n\n\nfunction App() {\n\n  return <HashRouter>\n    <Route exact path='/:id'>\n      <ArtPage />\n    </Route>\n    <Route exact path='/'>\n      <ArtPage/>\n    </Route>\n  </HashRouter>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}