{"version":3,"sources":["ArtPages/DescriptionCard.js","ArtPages/SketchFrame.js","sketches/utils.js","sketches/simple.js","sketches/rays.js","sketches/fan.js","sketches/heart.js","sketches/breathe.js","sketches/pyramid.js","sketches/techdiff.js","sketches/splat.js","sketches/spins.js","sketches/colorSqrs.js","sketches/sortyBoy.js","sketches/pinkfloyd.js","sketches/spirograph.js","sketches/sunny.js","sketches/twisty.js","sketches/moenster.js","sketches/tumble.js","sketches/glitchy.js","sketches/threadEllipse.js","sketches/sinuswave.js","sketches/falling.js","sketches/findMe.js","sketches/vulfPeck.js","sketches/tallyHall.js","sketches/classixx.js","sketches/tree.js","sketches/jerryFolk.js","sketches/wavey.js","sketches/water.js","sketches/unitCircle.js","ArtPages/drawings.js","ArtPages/ArtPage.js","ArtPages/FilterPage.js","App.js","reportWebVitals.js","index.js"],"names":["DescriptionCard","props","className","description","SketchFrame","href","prevId","nextId","children","calulateDimentions","window","w","innerWidth","h","innerHeight","ratio","frame","p5","bColor","fColor","padding","noStroke","fill","rect","stroke","noFill","pointInFrame","width","height","x","y","drawLine","pointArray","prevP","undefined","forEach","p","line","inputField","canvasParentRef","value","bx","by","size","field","createInput","getBoundingClientRect","buttonBaseX","buttonBaseY","position","SimpleSketch","Sketch","RaysSketch","FanSketch","HeartSketch","BreatheSketch","PyramidSketch","TechdiffSketch","SplatSketch","SpinsSketch","ColorSketch","SortyBoySketch","PinkfloydSketch","SpirographSketch","SunnySketch","TwistySketch","MoensterSketch","TumbleSketch","GlitchySketch","ThreadEllipseSketch","FallingSketch","FindMeSketch","VulfPeckSketch","ClassixxSketch","TreeSketch","JerryFolkSketch","WaveySketch","WaterSketch","id","getId","nowId","toString","categories","drawings","sketch","moves","wWidth","wHeight","setup","createCanvas","parent","draw","background","ellipse","lim","innerheight","innerwidth","evenEdgeCoor","percent","angle","tan","angleMode","DEGREES","i","coor","arc","rotation","length","Math","sqrt","pow","sin","cos","lastCord","distance","points","tris","heartLeft","heartRight","triCount","backing","rotatePoints","pointarray","rotated","rotatedPoints","rotatedBottomPoints","dist","asin","nyx","nyy","push","concat","offset","xOff","yOff","map","generatePoints","slice","strokeWeight","point","colours","color","poinatos","index","triangle","mousePressed","mouseX","mouseY","mw","mh","rotneg","increase","j","upperLeft","upperRight","lower","triangleModes","sideLength","heightLength","topp","bottom","left","mid","right","triangleMode","lineCount","triangleColor","centerPyramid","stepsLeft","copy","stepsRight","stepsTop","sub","div","nextLeftStart","nextRightStart","nextTopStart","add","aroundPyramid","mouseVector","createVector","stepsLower","nextLowerStart","twirlPyramid","stepsLowerToM","stepsRightToM","stepsLeftToM","stepsLowerToR","stepsUpperToR","stepsLeftToL","nextRightSideStart","nextLowerToMouseStart","nextUpperSideStart","nextRightToMouseStart","nextLeftSideStart","nextLeftToMouseStart","betweenfocals","sum","a","b","text","splat","numX","randomGaussian","numY","transparency","corners","widthSpace","heightSpace","blocked","findCorners","antX","antY","maxX","maxY","corns","sortButton","shuffleBottton","positionStyle","toSortIndex","toShuffleIndex","numOfStones","circleRadius","isSorting","isShuffled","StonePosition","this","StoneColor","c","nr","stonePositions","stoneColors","initArrays","sortingStep","smallest","filter","it","smallestIndex","indexOf","shufflingStep","randomIndex","floor","random","sortStones","shuffleStones","frameRate","colorMode","HSB","createButton","pos","col","midtX","midtY","colors","lightTriangel","offSet","horisontal","vert1","vert2","ratio1","ratio2","inputTiny","inputShort","centerV","bigV","shortV","bigCirc","smallCirc","smallSpeed","degree","spiroP2","legacy","tinyRad","shortRad","totalRad","resetVectors","radiusVector","PI","parseInt","degrees","radius","spiro","centralV","spinV","speed","thesePoints","thisColor","current","rotate","drawLegacy","transparent","pointRow","orbitCenter","backgroundColor","frameColor","waveColors","mouseWeightY","toCenter","sunW","sunH","wave","wavesize","HALF_PI","lineart","movement","mX","mY","lastDot","startDot","endDot","dotDiff","locked","animate","inputD","inputC","dots","lines","circleR","numOfDots","Dot","Line","x1","y1","x2","y2","mouseInDots","inDot","d","resetDots","textSize","l","nextDot","mouseReleased","abs","triangleHeight","triangleSides","back","randomSeed","down","top","bot","ts2","squares","RADIANS","cFrom","cTo","stubs","randomStart","tumbleWeed","weed","scale","lerpColor","beginShape","vertex","endShape","CLOSE","stub","translate","textStyle","BOLD","c1","c2","mouseV","rel","center","inputDegrees","degreeInc","xedge","yedge","xpoints","ypoints","tanPoints","circling","xline","yline","drawPoints","direction","xcoor","ycoor","tanEnd","tanStart","tanStrength","mult","force","ellipseX","ellipseY","v1","v2","console","log","quad","startColor","endColor","upperV","lowerV","detailMode","lowSpring","start","end","mediumSpring","lowText","textAlign","CENTER","steps","inc","colorInc","mediumText","highSpring","upperFocal","lowerFocal","curve","setAlpha","highText","tile","tiles","squareSide","newTile","newtile","createGraphics","TOP","BOTTOM","tileCovering","tileRotations","image","pop","INVERT","imageMode","shorterSides","turn","mouseIsPressed","grayGreen","beigeGreen","lightGreen","leafGreen","darkGreen","allLines","activepoints","newActives","lerpStep","ellipseColor","foreground","grassHeight","grassColor","noiseVal","noise","calculateNext","p2","li","yMid","yEnd","centerH","mouseDim","runner1","runner2","unit","pickColors","seed","head","leftLowerArm","leftUpperArm","shoulder","rightUpperArm","rightLowerArm","rightUpperLeg","leftLeg","rightLowerLeg","paper","strokeJoin","ROUND","upperBody","graphic","drawRunner","runny","drawRunner2","modes","patternMode","colorTheme","primary","secondary","number","check","romb","rombType","simpleRomb","sFigure","firstX","firstY","rombPattern","pattern","xJump","xs","ys","rombulus","r","g","para","angledRomb","xoff","yoff","bezierus","bezius","angledBezius","bezier","stepsX","stepsY","startWeight","endWeight","sChecks","sCheckFigure","sBezier","sBezFigure","bezierVertex","oneSWave","offsetty","oneStrip","outerCurve","innerCurve","bez","stripes","xSteps","displayF","xl","noiseDetail","calculations","xEnd","hyp","dir","acos","ArtPage","useParams","drawing","useEffect","document","title","sketchy","drawId","anyMatch","array1","array2","includes","allMatch","filterList","setting","tags","matching","activeTags","Object","keys","t","Filter","filterObject","setFilter","tag","htmlFor","type","name","onClick","e","filterCopy","target","checked","handleClick","FilterPage","defaultState","fromEntries","cat","useState","filterTags","setFilterTags","filteredDrawings","setDrawings","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02dbeeb4.chunk.js","sourcesContent":["import React from 'react';\n\n//TODO use link instead?\nfunction DescriptionCard(props) {\n    return (\n        <div className={\"descriptionCard\"}>\n            <p>{props.description}</p>\n        </div>);\n}\n\nexport default DescriptionCard;","import React from 'react';\nimport DescriptionCard from \"./DescriptionCard\";\n\n//TODO use link instead?\nfunction SketchFrame(props) {\n    //console.log(props.prevId);\n    return <div className={\"SketchFrame\"}>\n        <div className={\"SketchNav\"}>\n            <a href={\".#/post/\"+(props.prevId)}><h2>Prev</h2></a>\n            <a href={\".#/list\"}><h2>List</h2></a>\n            <a href={\".#/post/\"+(props.nextId)}><h2>Next</h2></a>\n        </div>\n        <div className={\"SketchWall\"}>\n            {props.children}\n            <DescriptionCard description={props.description}/>\n        </div>\n    </div>;\n}\n/*        <a href={\".#/\"+(props.nextId)} onClick={forceUpdate}><h2>Next</h2></a>\n*/\n\nexport default SketchFrame;","export const calulateDimentions = (window) => {\n    const { innerWidth: w, innerHeight: h } = window;\n    const ratio = 3/5;\n    if(w >= h){\n        return [h*ratio ,h*ratio];\n    } else {\n        return [w*ratio ,w*ratio];\n    }\n};\n\nexport const frame = (p5,bColor,fColor,padding,w,h) => {\n    p5.noStroke();\n    p5.fill(bColor);\n    p5.rect(0,0,padding,h);\n    p5.rect(0,0,w,padding);\n    p5.rect(0,h-padding,w,padding);\n    p5.rect(w-padding,0,padding,h);\n    p5.stroke(fColor);\n    p5.noFill();\n    p5.rect(padding,padding,w-(padding*2),h-(padding*2));\n};\n\nexport const pointInFrame = (width,height,padding,x,y) => {\n  let xInFrame = x>padding && x<(width-padding);\n  let yInFrame = y>padding && y<(height-padding);\n  return xInFrame && yInFrame;\n};\n\nexport const drawLine = (p5,pointArray) => {\n    let prevP = pointArray[0];\n    if (prevP[0] === undefined){\n        pointArray.forEach(p => {\n            p5.line(prevP.x,prevP.y,p.x,p.y);\n            prevP = p;\n        });\n    } else {\n        pointArray.forEach(p => {\n            p5.line(prevP[0],prevP[1],p[0],p[1]);\n            prevP = p;\n        });\n    }\n};\n\nexport const inputField = (p5,canvasParentRef,value,bx,by,size) => {\n    let field = p5.createInput(value);\n    field.size(size);\n    const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n    field.position(buttonBaseX+bx, buttonBaseY+by);\n    return field;\n};","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function simple(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.noStroke();\n        p5.fill(255, 217, 2, 170);\n        p5.ellipse(100+moves, 100+moves, 100+moves);\n        p5.ellipse(300, 120, 100);\n        moves++;\n        if(moves>wWidth*1.5){\n            moves = -99;\n        }\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//todo dustribute lines closer in corner, or by noise?\nexport default function rays() {\n    let maxLim = 200;\n\n    let lim;\n    let innerheight;\n    let innerwidth;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        p5.rect(0,0,wWidth,wHeight/2);\n        p5.noFill();\n\n        for(let i = 0; i<=lim; i++) {\n            p5.stroke(0);\n            let coor = evenEdgeCoor(p5,i / lim);\n            p5.stroke(0);\n            p5.line(innerwidth/2,innerheight/2,coor[0],coor[1]);\n            p5.stroke(255);\n            p5.line(innerwidth/2,innerheight/2,coor[0],innerheight-coor[1]);\n        }\n        if (lim<maxLim){\n            lim++;\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(wWidth/2,wHeight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(wWidth/2,wHeight/2,100,100,180,0);\n    };\n\n    const evenEdgeCoor = (p5,percent) => {\n        let angle = percent*180;\n        if (angle<45){\n            return[(wWidth-innerwidth)/2,(innerheight/2)*(p5.tan(angle))]\n        } else if (angle<90){\n            return[(innerwidth/2)*(p5.tan(90-angle)),(wHeight-innerheight)/2];\n        } else if (angle<(90+45)){\n            return[(innerwidth/2)+((innerwidth/2)*(p5.tan(135-angle))),(wHeight-innerheight)/2];\n            //x =0;\n        } else{\n            return[innerwidth+((wWidth-innerwidth)/2),((innerheight/2)*(p5.tan((180-angle))))];\n        }\n    };\n\n    return <RaysSketch setup={setup} draw={draw} />;\n}\n\nclass RaysSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function simple(){\n    let rotation = 5;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(240,100,100);\n        let w = 180;\n        let h = 100;\n        for (let i = 0; i<360;i+=5){\n            let length = Math.sqrt(Math.pow(w*p5.sin(i),2)+Math.pow(h*p5.cos(i),2));\n            let lastCord = (wHeight/2);\n            let distance = (length*p5.sin(i+rotation));\n            if(i<90){\n                lastCord += distance;\n            } else if(i<180){\n                lastCord -= distance;\n            } else if(i<270){\n                lastCord += distance;\n            } else {\n                lastCord -= distance;\n            }\n            p5.line((wWidth/2),(wHeight/2),(wWidth/2)+((length*p5.cos(i+rotation))),lastCord);\n        }\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n\n        rotation += 0.2;\n    };\n\n    return <FanSketch setup={setup} draw={draw} />;\n}\n\nclass FanSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {pointInFrame} from \"./utils\";\n\nexport default function heart(){\n    const wWidth = 400, wHeight = 400;\n    let points = [];\n    let tris = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n    let heartLeft = [[0,0]*12];\n    let heartRight = [[0,0]*12];\n    let triCount = 2;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        generatePoints();\n\n        heartLeft = offset(rotatePoints(p5, points,45,0),14,0);\n        heartLeft = heartLeft.slice(25,40).concat(heartLeft.slice(0,9));\n        heartRight = offset(rotatePoints(p5, points,135,0),-14,0);\n        heartRight = heartRight.slice(12,34);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100);\n        heartLeft.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.stroke(250,100,100);\n        heartRight.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.line(heartRight[0][0],heartRight[0][1],heartRight[heartRight.length-1][0],heartRight[heartRight.length-1][1]);\n\n        //draw triangles\n        p5.noStroke();\n        let colours = [p5.color(250,100,100),p5.color(200,100,100)];\n        p5.fill(colours[0]);\n        if (tris.length>0){\n            tris.forEach((poinatos,index) => {\n                if (index%3 === 0){\n                    p5.fill(colours[index%2])\n                }\n                p5.triangle(poinatos[0][0],poinatos[0][1],poinatos[1][0],poinatos[1][1],poinatos[2][0],poinatos[2][1]);\n            });\n        }\n\n        rotation = (rotation%360)+5;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n    };\n\n    const rotatePoints = (p5,pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            //line(width/2,height/2,nyx,nyy);//points[k][0],points[k][1]);\n            //stroke(255);\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    const offset = (pointarray,xOff,yOff) => {\n        return pointarray.map(x => [x[0]+xOff,x[1]+yOff]);\n    };\n\n    const mousePressed = (p5) => {\n        if(!pointInFrame(wWidth,wHeight,0,p5.mouseX,p5.mouseY)){\n           return\n        }\n        //add triangle\n        if (triCount<heartRight.length-1){\n            tris.push([heartRight[0],heartRight[heartRight.length-1],heartRight[triCount++]]);\n            tris.push([heartLeft[0],heartLeft[heartLeft.length-1],heartLeft[triCount++]]);\n        } else {\n            triCount = 1;\n            tris = [];\n        }\n    };\n\n    //alt for treigt, regn ut fra sentrum & vinkler.\n    const generatePoints = () => {\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n === 1){\n                    points.push([x,y]);\n                }\n            }\n        }\n    };\n\n    return <HeartSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass HeartSketch extends Sketch {}\n\n\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function breathe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const mw = wWidth/2, mh = wHeight/2;\n    let rotation = 5;\n    let rotneg = false;\n    let offset=100-45;\n    let increase = 2*(rotation%90/90);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.stroke(150,50,50);\n        p5.line(mw,mh,mw+(50*p5.sin(rotation)),mh+(50*p5.cos(rotation)));\n        p5.line(mw,mh,mw+(100*p5.cos(rotation)),mh+(100*p5.sin(rotation)));\n        \n        p5.stroke(50);\n        for (let j = 0;j<20;j++){\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw-(50*p5.sin((180/20)*j)));\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw+(50*p5.sin((180/20)*j)));\n        }\n\n        if (rotneg){\n            offset -= increase;\n        } else {\n            offset += increase;\n        }\n\n        if (rotation%90 === 0){\n            rotneg = !rotneg;\n        }\n        rotation = (rotation%360)+1;\n        increase = 2*(rotation%90/90);\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n    };\n\n    return <BreatheSketch setup={setup} draw={draw} />;\n}\n\nclass BreatheSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame, pointInFrame} from \"./utils\";\n\nexport default function pyramid(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const padding = wWidth*0.1;\n    const triangleModes = {CENTER:'center',TWIRL:'twirl',AROUND: 'around'};\n    const sideLength = wWidth*0.7, heightLength= sideLength*0.866;\n    const topp = (wHeight-heightLength)/2, bottom = topp+heightLength;\n    const left = (wWidth-sideLength)/2, mid = left+(sideLength/2), right = left+sideLength;\n    let upperLeft,upperRight,lower;\n    let triangleMode = triangleModes.CENTER;\n    let lineCount = 9;\n    let bColor = 250 ,triangleColor = 0;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        bColor = p5.color(200,230,222);\n        triangleColor = p5.color(100,130,122,150);\n        upperLeft = p5.createVector(left,topp);\n        upperRight = p5.createVector(right,topp);\n        lower =  p5.createVector(mid,bottom);\n    };\n\n    const draw = p5 => {\n        p5.background(bColor);\n\n        p5.strokeWeight(1);\n        p5.stroke(0,0,0,80);\n        p5.fill(triangleColor);\n\n        switch (triangleMode) {\n            case triangleModes.CENTER:\n                centerPyramid(p5);\n                break;\n            case triangleModes.AROUND:\n                aroundPyramid(p5);\n                break;\n            case triangleModes.TWIRL:\n                twirlPyramid(p5);\n                break;\n            default:\n                centerPyramid(p5);\n        }\n        //Final frame\n        frame(p5,bColor,triangleColor,padding,wWidth,wHeight);\n    };\n\n    const centerPyramid = (p5) => {\n        let stepsLeft = lower.copy(), stepsRight =upperRight.copy(), stepsTop =upperLeft.copy();\n        stepsLeft.sub(upperLeft).div(lineCount);\n        stepsRight.sub(lower).div(lineCount);\n        stepsTop.sub(upperRight).div(lineCount);\n        let nextLeftStart = upperLeft.copy(),nextRightStart = lower.copy(), nextTopStart = upperRight.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.line(nextLeftStart.x,nextLeftStart.y,p5.mouseX,p5.mouseY);\n            nextLeftStart = nextLeftStart.add(stepsLeft);\n            p5.line(nextRightStart.x,nextRightStart.y,p5.mouseX,p5.mouseY);\n            nextRightStart = nextRightStart.add(stepsRight);\n            p5.line(nextTopStart.x,nextTopStart.y,p5.mouseX,p5.mouseY);\n            nextTopStart = nextTopStart.add(stepsTop);\n        }\n    };\n\n    const aroundPyramid = (p5) => {\n        let mouseVector = p5.createVector(p5.mouseX,p5.mouseY);\n        let stepsLower = mouseVector.copy(), stepsRight =mouseVector.copy(), stepsLeft =mouseVector.copy();\n\n        stepsLeft.sub(upperLeft).div(lineCount);\n        stepsRight.sub(upperRight).div(lineCount);\n        stepsLower.sub(lower).div(lineCount);\n        let nextLeftStart = upperLeft.copy(),nextRightStart = upperRight.copy(), nextLowerStart = lower.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.triangle(nextRightStart.x,nextRightStart.y,nextLeftStart.x,nextLeftStart.y,nextLowerStart.x,nextLowerStart.y);\n            nextLeftStart = nextLeftStart.add(stepsLeft);\n            nextRightStart = nextRightStart.add(stepsRight);\n            nextLowerStart = nextLowerStart.add(stepsLower);\n        }\n    };\n\n    const twirlPyramid = (p5) => {\n        let mouseVector = p5.createVector(p5.mouseX,p5.mouseY);\n        let stepsLowerToM = lower.copy(), stepsRightToM = upperRight.copy(), stepsLeftToM =upperLeft.copy();\n        let stepsLowerToR = lower.copy(), stepsUpperToR = upperRight.copy(), stepsLeftToL =upperLeft.copy();\n\n        stepsLowerToM.sub(mouseVector).div(lineCount);\n        stepsLowerToR.sub(upperRight).div(lineCount);\n\n        stepsRightToM.sub(mouseVector).div(lineCount);\n        stepsUpperToR.sub(upperLeft).div(lineCount);\n\n        stepsLeftToM.sub(mouseVector).div(lineCount);\n        stepsLeftToL.sub(lower).div(lineCount);\n\n        //første punkt er en prikk.\n        //andre punkt fra midten av bakken til midten av hjørnet til mousepoint.\n\n        let nextRightSideStart = lower.copy(), nextLowerToMouseStart = lower.copy();\n        let nextUpperSideStart = upperRight.copy(), nextRightToMouseStart = upperRight.copy();\n        let nextLeftSideStart = upperLeft.copy(), nextLeftToMouseStart = upperLeft.copy();\n\n        for( let i = 0; i<lineCount;i++){\n            p5.line(nextRightSideStart.x,nextRightSideStart.y,nextLowerToMouseStart.x,nextLowerToMouseStart.y);\n            nextRightSideStart.sub(stepsLowerToR);\n            nextLowerToMouseStart.sub(stepsLowerToM);\n\n            p5.line(nextUpperSideStart.x,nextUpperSideStart.y,nextRightToMouseStart.x,nextRightToMouseStart.y);\n            nextUpperSideStart.sub(stepsUpperToR);\n            nextRightToMouseStart.sub(stepsRightToM);\n\n            p5.line(nextLeftSideStart.x,nextLeftSideStart.y,nextLeftToMouseStart.x,nextLeftToMouseStart.y);\n            nextLeftSideStart.sub(stepsLeftToL);\n            nextLeftToMouseStart.sub(stepsLeftToM);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(pointInFrame(wWidth,wHeight,padding,p5.mouseX,p5.mouseY)){\n            lineCount++;\n        } else {\n            lineCount = 3;\n            switch (triangleMode) {\n                case triangleModes.CENTER:\n                    triangleMode = triangleModes.AROUND;\n                    break;\n                case triangleModes.AROUND:\n                    triangleMode = triangleModes.TWIRL;\n                    break;\n                case triangleModes.TWIRL:\n                    triangleMode = triangleModes.CENTER;\n                    break;\n                default:\n                    triangleMode = triangleModes.CENTER;\n            }\n        }\n    };\n\n    return <PyramidSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass PyramidSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function techdiff(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let points = [];\n    let rotation = 5;\n    let ellipseaddon = 80;\n    let betweenfocals;\n    let length;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        betweenfocals = Math.sqrt(Math.pow(wWidth/2,2)+Math.pow(wHeight/2,2));\n        length = (wWidth/2)+ellipseaddon;\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        //rotating lines\n        p5.line(wWidth/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        p5.line(wWidth*3/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        let i = 1;\n        let sum = 0;\n        let a = 0;\n        let b = 0;\n        while(sum<length){\n            //for(i = 1; i<100; i++){\n            //a = Math.sqrt(Math.pow(i*cos(rotation),2)+Math.pow(i*sin(rotation),2));\n            a = Math.sqrt(Math.pow(i*p5.cos(rotation),2)+Math.pow(i*p5.sin(rotation),2));\n            b = Math.sqrt(Math.pow((i+betweenfocals)*p5.cos(rotation),2)+Math.pow((i+betweenfocals)*p5.sin(rotation),2));\n            sum = a+b;\n            i++;\n            p5.line(10,10*i,i*p5.cos(rotation),10*i);\n            p5.line(10,5+(10*i),i*p5.sin(rotation),5+10*i);\n        }\n\n        p5.text(sum,10,40);\n        p5.text(length,10,50);\n        let x = (wWidth/4)+(a*p5.cos(rotation+45));\n        let y = (wHeight*3/4)+(b*p5.sin(rotation+45));\n        p5.stroke(50,150,50);\n        p5.line(wWidth/4,wHeight/2,x,y);\n        p5.stroke(150,50,50);\n        p5.line(wWidth*3/4,wHeight/2,x,y);\n        p5.line(wWidth/4,wHeight/2,p5.mouseX,p5.mouseY);\n        p5.line(wWidth*3/4,wHeight/2,p5.mouseX,p5.mouseY);\n        points.push([(wWidth/4)-(a*p5.sin(rotation+45)),(wHeight*3/4)+b*p5.cos(rotation+45)]);\n\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        points.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(50*p5.sin(rotation)),(wHeight/2)+(50*p5.cos(rotation)));\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(100*p5.cos(rotation)),(wHeight/2)+(100*p5.sin(rotation)));\n        for (let j = 0;j<20;j++){\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)-(25*p5.sin((180/20)*j)));\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)+(25*p5.sin((180/20)*j)));\n\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)-50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)+50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n        }\n\n        rotation = (rotation%360)+1;\n    };\n\n    function backing(p5) {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(10);\n        p5.strokeWeight(10);\n        p5.point(wWidth/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.point(wWidth*3/4,wHeight/2);  //point(width/4,height*3/4);\n        p5.strokeWeight(1);\n        p5.stroke(150,50,50);\n    }\n\n    return <TechdiffSketch setup={setup} draw={draw} />;\n}\n\nclass TechdiffSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function splat(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let splat = [];\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(135,206,235,50);\n        for (let i = 1; i < splat.length; i++) {    //drawing all circles\n            p5.ellipse(splat[i][0], splat[i][1], splat[i][2], splat[i][3]);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        for (let i= 1; i < 20; i++){    //making 20 circles\n            let numX = p5.randomGaussian(0,1);\n            let numY = p5.randomGaussian(0,1);   //20 gaussian spread numbers\n            let meanX = p5.mouseX;\n            let meanY = p5.mouseY;//not actually needed in this code atm, but for future ideas\n            let standardDeviation = 50;\n            let x = standardDeviation * numX + meanX;\n            let y = standardDeviation * numY + meanY;\n            splat.push([x, y, 10/numX, 10/numX]); //only numX because numX with numY makes very long ellipses,could be fun though, try it yourself.\n        }\n    };\n\n    return <SplatSketch  className={\"sketchy2\"}  setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass SplatSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function spins(){\n    const wWidth = 400, wHeight = 400;\n    const transparency = 200;\n    let points = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n\n\n    const setups = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n===1){\n                    //points.push([(width/2)+((x-(width/2))*cos(rotation)),(height/2)+((y-(height/2))*sin(rotation))]);\n                    points.push([x,y]);\n                }\n            }\n        }\n        //console.log(\"start window \" + canvasParentRef);\n        //console.log(\"start window \" + p5.canvas.parentElement.toString());\n        //console.log(\"   -> \" + p5.canvas.width + \",,,\" + p5.canvas.height);\n        //console.log(\"start spins \"+points.length);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100,transparency);\n        let spin = rotatePoints(p5,points,rotation);\n        spin.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        //console.log(\"spinnys \"+spin.length);\n        p5.stroke(250,100,100,transparency);\n        let spinoff = rotatePoints(p5,points,-rotation);\n\n        spinoff.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        rotation = (rotation%360)+1;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.stroke(240,110,110,transparency);\n        p5.strokeWeight(10);\n        p5.point(wWidth*2/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.strokeWeight(1);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        p5.stroke(150,50,50,transparency);\n    };\n\n    const rotatePoints = (p5, pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    return <SpinsSketch className={\"sketchy\"} setup={setups} draw={draw} />;\n}\n\nclass SpinsSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function colorSqrs(){\n    const wWidth = 400, wHeight = 400;\n    let corners = [[0,0]];\n    let widthSpace = 0;\n    let heightSpace = 0;\n    let numX = 13;\n    let numY = 13;\n    let blocked = [];\n\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        //regn ut coordinater, width,height\n        corners = findCorners(numX,numY,wWidth-10,wHeight-10);\n        corners = corners.map (x => [x[0]+10,x[1]+10]);\n        blocked = [false*corners.length];\n        widthSpace = corners[1][0]-corners[0][0];\n        heightSpace = corners[numX][1]-corners[0][1];\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(255);\n        if (corners.length>= numX) {\n            for(let x = 0; x<numX; x++){\n                for(let y = 0; y<numY; y++){\n                    //avgjør farge\n                    if (blocked[(x*numX)+y]){\n                        p5.fill(255);\n                    } else {\n                        p5.fill(x*255/numX,y*255/numY,p5.cos(((x*numX)+y)/corners.length)*255);\n                    }\n\n                    //tegn rute.\n                    p5.rect(corners[(x*numX)+y][0],corners[(x*numX)+y][1],widthSpace-10,heightSpace-10);\n                }\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        //finner hvilken rute vi er i nå.\n        if (p5.mouseX < wWidth && p5.mouseX > 0 && p5.mouseY < wHeight && p5.mouseY > 0){\n            let i = 0;\n            while (corners[i][1] < p5.mouseY && i<corners.length-1){\n                i++;\n            }\n            if (i !== corners.length-1){\n                i--;\n            }\n            while (corners[i][0] > p5.mouseX &&  i>0){\n                i--;\n            }\n            //endre farge\n            blocked[i] = !blocked[i];\n        }\n    };\n\n    const findCorners = (antX, antY, maxX,maxY) => {\n        let x = maxX/antX;\n        let y = maxY/antY;\n        let corns = [];\n        for(let j = 0; j+y<=maxY;j+=y){\n            for(let i = 0; i+x<=maxX;i+=x){\n                corns.push([i,j]);\n            }\n        }\n        return corns;\n    };\n\n    return <ColorSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass ColorSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function sortyBoy(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const positionStyle = 'fixed';\n    //it can be static, fixed, relative, sticky, initial or inherit\n    let sortButton, shuffleBottton, toSortIndex = 0, toShuffleIndex = 0;\n    let numOfStones = 12, circleRadius = wWidth*0.3, stoneRadius = 20;\n    let isSorting = false, isShuffled = false;\n    class StonePosition {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class StoneColor {\n        constructor(i,c) {\n            this.nr = i;\n            this.color = c;\n        }\n    }\n    let stonePositions = [new StonePosition(0,0)],stoneColors = [new StoneColor(0,0)];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.frameRate(4);\n        p5.colorMode(p5.HSB, wHeight, wHeight, wHeight);\n        initArrays(p5);\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n\n        //sort knapp\n        sortButton = p5.createButton('insertion sort');\n        sortButton.position(buttonBaseX+30, buttonBaseY+55, positionStyle);\n        sortButton.mousePressed(sortStones);\n\n        //shuffleknapp\n        shuffleBottton = p5.createButton('shuffle');\n        shuffleBottton.position(buttonBaseX+130, buttonBaseY+55, positionStyle);\n        shuffleBottton.mousePressed(shuffleStones);\n    };\n\n    const draw = p5 => {\n        p5.background(80);\n        p5.noStroke();\n        p5.fill(255);\n\n\n        for (let i = 0; i<stoneColors.length; i++){\n            let pos = stonePositions[i];\n            let col = stoneColors[i];\n            p5.fill(col.color);\n            p5.ellipse(pos.x,pos.y,stoneRadius,stoneRadius);\n            p5.text(col.nr,pos.x-10,pos.y-10);\n        }\n        if(isShuffled){\n            shufflingStep();\n        }\n        if(isSorting){\n            sortingStep();\n        }\n    };\n\n    const initArrays = (p5) => {\n        stoneColors = [];\n        stonePositions = [];\n        for (let i = 0; i<numOfStones; i++){\n            stoneColors.push(new StoneColor(i, p5.color(i*(360/numOfStones),wHeight,wHeight)));\n            let x = (wWidth/2)+p5.cos((i/numOfStones)*360)*circleRadius;\n            let y = (wHeight/2)+p5.sin((i/numOfStones)*360)*circleRadius;\n            stonePositions.push(new StonePosition(x,y));\n        }\n    };\n\n    const sortingStep = () => {\n        let smallest = stoneColors.filter(it => it.nr === toSortIndex)[0];\n        let smallestIndex = stoneColors.indexOf(smallest);\n        [stoneColors[smallestIndex], stoneColors[toSortIndex]] = [stoneColors[toSortIndex], stoneColors[smallestIndex]];\n        toSortIndex+=1;\n        if (toSortIndex === numOfStones){\n          isSorting = false;\n        }\n    };\n\n    const shufflingStep = () => {\n        let randomIndex = Math.floor(Math.random() * toShuffleIndex);\n        // And swap it with the current element.\n        [stoneColors[randomIndex], stoneColors[toShuffleIndex]] = [stoneColors[toShuffleIndex], stoneColors[randomIndex]];\n        toShuffleIndex++;\n        if (toShuffleIndex === numOfStones){\n            isShuffled = false;\n        }\n    };\n\n    const sortStones = () => {\n        //console.log(\"insertion sort\");\n        isSorting = true;\n        isShuffled = false;\n        toSortIndex = 0;\n    };\n\n    const shuffleStones = () => {\n        //console.log(\"shuffle\");\n        isShuffled = true;\n        isSorting = false;\n        toShuffleIndex = 0;\n    };\n\n  return <SortyBoySketch setup={setup} draw={draw} />;\n}\n\nclass SortyBoySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function pinkfloyd(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let midtX = 0;\n    let midtY = 0;\n    let colors = [];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        midtX = wWidth/2;\n        midtY = wHeight/3;\n        colors = [\n            p5.color(255,110,100),\n            p5.color(240,200,10),\n            p5.color(255,255,100),\n            p5.color(100,255,100),\n            p5.color(50,50,250),\n            p5.color(50,10,255),\n            p5.color(185,10,235)\n        ]\n    };\n\n    const draw = p5 => {\n        p5.background(0);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.line(p5.mouseX,p5.mouseY,midtX,midtY);\n        lightTriangel(p5);\n        p5.strokeWeight(3);\n        p5.stroke(255,255,255);\n        p5.fill(0);\n        p5.triangle(midtX,midtY*4/5,wWidth/3,midtY*2,wWidth*2/3,midtY*2);\n    };\n\n    const lightTriangel = (p5) => {\n        p5.strokeWeight(1);\n        let offSet = 30;\n        for (const col of colors) {\n            p5.fill(col);\n            p5.stroke(col);\n            let horisontal = (wWidth-p5.mouseX)-midtX;\n            let vert1 = (p5.mouseY-offSet)-midtY;\n            let vert2 = (p5.mouseY-offSet-7)-midtY;\n            let ratio1 = vert1/horisontal;\n            let ratio2 = vert2/horisontal;\n            p5.triangle(midtX,midtY,wWidth,midtY+(wWidth*ratio1),wWidth,midtY+(wWidth*ratio2));\n            offSet -= 7;\n        }\n    };\n\n    return <PinkfloydSketch setup={setup} draw={draw} />;\n}\n\nclass PinkfloydSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, drawLine, inputField} from \"./utils\";\n\n//TODO ved oppdatering legg tidligere linjer i en ny liste, som fader 33% ved hver nye liste i bakgrunnen.\nexport default function spirograph(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let degree = 0;\n    let points = [], spiroP2 = [];\n    //let  spiroP1 = [],\n    let legacy = [];\n    let bigRad = 67, tinyRad = 50, shortRad = 45;\n    let totalRad = bigRad+tinyRad;\n    let inputTiny, inputShort;\n    let centerV, bigV,shortV;\n    //let smallV;\n    let bigCirc, smallCirc, smallSpeed;\n    let colors = [];\n\n    const resetVectors = (p5) => {\n        if (spiroP2.length > 0) {\n            legacy.push(spiroP2);\n        }\n\n        points = [];\n        //spiroP1 = [];\n        spiroP2 = [];\n\n        //smallV = radiusVector(p5,120,tinyRad);\n        shortV = radiusVector(p5,40,shortRad);\n\n        smallCirc = p5.PI*2*tinyRad;\n        bigCirc = p5.PI*2*totalRad;\n        totalRad = bigRad+parseInt(tinyRad);\n        smallSpeed = bigCirc/smallCirc;\n    };\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //p5.frameRate(1);\n        //regn ut coordinater, width,height\n\n        //input\n        inputTiny = inputField(p5,canvasParentRef,tinyRad,20,65,30);\n        inputShort = inputField(p5,canvasParentRef,shortRad,20,95,30);\n\n        resetVectors(p5);\n        centerV = p5.createVector(wWidth/2,wHeight/2);\n        bigV = radiusVector(p5,degree,bigRad);\n\n        //console.log(\" \"+smallCirc+\", \"+bigCirc+\", \"+smallSpeed);\n        //console.log(\" \"+spiroP1+\", \"+smallV+\", \");\n        colors = [p5.color(139,157,235,0),p5.color(135,235,152),p5.color(94,164,107)]\n    };\n\n    const draw = p5 => {\n        if (inputTiny.value() !== tinyRad || inputShort.value() !== shortRad){\n            tinyRad = inputTiny.value();\n            shortRad = inputShort.value();\n            resetVectors(p5);\n        }\n\n        p5.background(135, 206, 235);\n        degree=(degree+2)%360;\n\n        p5.fill(250);\n        p5.noStroke();\n        p5.ellipse(wWidth/2,(wHeight/2),totalRad*2,totalRad*2);\n        p5.noFill();\n\n        let orbitCenter = spiro(p5,centerV,bigV,1,points,colors[0]);\n        p5.stroke(135, 206, 235);\n        p5.ellipse(orbitCenter.x,orbitCenter.y,tinyRad*2,tinyRad*2);\n        //let nextEnd =\n        spiro(p5,orbitCenter,shortV,-smallSpeed,spiroP2,colors[2]);\n        //let nextyEnd = spiro(p5,nextEnd,smallV,-smallSpeed,spiroP1,colors[1]);\n\n        drawLegacy(p5);\n\n        //regner ut ny posisjon for dot.\n        //tegner en liste av tidligere og den nye dotten\n    };\n\n    const radiusVector = (p5,degrees,radius) => {\n        return p5.createVector(p5.cos(degrees)*radius,p5.sin(degrees)*radius);\n    };\n\n    const spiro = (p5,centralV,spinV,speed,thesePoints,thisColor) => {\n        let current = centralV.copy();\n        spinV.rotate(speed);\n        current.add(spinV);\n        p5.stroke(135, 206, 235);\n        p5.line(centralV.x,centralV.y,current.x,current.y);\n        thesePoints.push([current.x,current.y]);\n        p5.stroke(thisColor);\n        drawLine(p5,thesePoints);\n        return current;\n    };\n\n    const drawLegacy = (p5) => {\n        let i = 3+legacy.length;\n        let transparent = 1/i;\n        legacy.forEach(pointRow =>\n        {\n            p5.stroke(139,157,235,255*transparent);\n            i--;\n            transparent += 1/i;\n            drawLine(p5,pointRow);\n\n        })\n    };\n\n    return <SpirographSketch setup={setup} draw={draw} />;\n}\n\nclass SpirographSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame} from \"./utils\";\n\nexport default function sunny(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const paddingToFrame = 30;\n    let mouseWeight = 0.06; //lineart\n    let mouseWeightY = -0.11; //background\n    let toCenter = wWidth/2;\n    let sunW = (wWidth/2)+9, sunH = sunW-52;\n    let backgroundColor,frameColor,waveColors;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        backgroundColor = p5.color(250,245,245);\n        frameColor = p5.color(0);\n        waveColors = [p5.color(0,250,270),p5.color(0,225,245),p5.color(0,240,260)];\n    };\n\n    const notInitialiced = () => {\n        return backgroundColor === undefined &&\n            frameColor === undefined &&\n            waveColors === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        p5.background(backgroundColor);\n        p5.noStroke();\n        p5.fill(252,232,190);\n        p5.ellipse(sunW+(mouseWeightY*(p5.mouseX-toCenter)),sunH+(mouseWeightY*(p5.mouseY-toCenter)),70,70);\n        p5.noFill();\n        p5.strokeWeight(20);\n        let xOff = 0, yOff = 0;\n\n        /*\n        let waveOffset = [[30,0],[12,15],[-6,30]];\n        for (let i = 0; i< waveColors.length;i++){\n            wave(p5,waveColors[i],xOff+waveOffset[i]+(mouseWeightY*(p5.mouseX-toCenter)),yOff+waveOffset[i]+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        }\n        */\n        wave(p5,waveColors[0],xOff+30+(mouseWeightY*(p5.mouseX-toCenter)),yOff+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[1],xOff+12+(mouseWeightY*(p5.mouseX-toCenter)),yOff+15+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[2],xOff-6+(mouseWeightY*(p5.mouseX-toCenter)),yOff+30+(mouseWeightY*(p5.mouseY-toCenter)),40);\n\n        //v lineart background v\n        lineart(p5,backgroundColor,mouseWeightY,xOff,yOff);\n\n        //v lineart v\n        lineart(p5,frameColor,mouseWeight,xOff,yOff);\n\n        //Final frame\n        frame(p5,backgroundColor,frameColor,paddingToFrame,wWidth,wHeight);\n    };\n\n    const wave = (p5,color,xOff,yOff,wavesize) => {\n        p5.stroke(color);\n        for (let i = 0; i < 11; i++) {\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*i),wavesize,wavesize,p5.HALF_PI, p5.PI);//wave*3\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*(i+1)),wavesize,wavesize,p5.HALF_PI+p5.PI,0);//wave*3\n        }\n    };\n\n    const lineart = (p5,color,movement,xOff,yOff) => {\n        p5.strokeWeight(4);\n        p5.noFill();\n        let mX = (movement*(p5.mouseX-toCenter));\n        let mY = (movement*(p5.mouseY-toCenter));\n        p5.stroke(color);\n        p5.arc(sunW+mX,sunH+mY,70,70, p5.PI+0.14,p5.HALF_PI-0.1);//wave*3\n        wave(p5,color,xOff+38+mX,yOff-9+mY,40);\n        wave(p5,color,xOff+21+mX,yOff+7+mY,40);\n        wave(p5,color,xOff+4+mX,yOff+23+mY,40);\n        wave(p5,color,xOff-13+mX,yOff+39+mY,40);\n    };\n\n    return <SunnySketch setup={setup} draw={draw} />;\n}\n\nclass SunnySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils.js\";\nimport {inputField} from \"./utils\";\n\n//TODO correct lines for a to b and b to a.\nexport default function twisty(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let dots = [], lines = [];\n    let dotR = 20, circleR = 100, numOfDots = 12;\n    let lastDot,startDot,endDot,dotDiff,locked, animate;\n    let inputD, inputC;\n    class Dot {\n        constructor(i,x,y){\n            this.nr = i;\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class Line {\n        constructor(i,x1,y1,x2,y2){\n            this.nr = i;\n            this.x1 = x1;\n            this.x2 = x2;\n            this.y1 = y1;\n            this.y2 = y2;\n        }\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        resetDots(p5);\n\n        inputD = inputField(p5,canvasParentRef,numOfDots,60,65,30);\n        inputC = inputField(p5,canvasParentRef,circleR,60,95,30);\n\n        p5.fill(20);\n        p5.stroke(20);\n        p5.textSize(12);\n        p5.text(\"dots\",10, 65);\n        p5.text(\"radius\",10, 95);\n    };\n\n    const notInitialiced = () => {\n        return lastDot === undefined && startDot === undefined && endDot === undefined && dotDiff === undefined &&\n            locked === undefined && animate === undefined && inputD === undefined && inputC === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        if (inputD.value() !== numOfDots || inputC.value() !== circleR){\n            numOfDots = inputD.value();\n            circleR = inputC.value();\n            resetDots(p5);\n        }\n        p5.background(135,206,235);\n        p5.noStroke();\n        for (const d of dots){\n            //center  = height/2, cos((i/12)*360)*200 = x\n            p5.fill(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.ellipse(d.x,d.y,dotR,dotR);\n        }\n        for (const l of lines){\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(l.nr*4),200+(l.nr*2),200-(l.nr*10));\n            p5.line(l.x1,l.y1,l.x2,l.y2)\n        }\n        if (locked) {\n            let d = dots[startDot];\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.line(p5.mouseX,p5.mouseY,d.x,d.y);\n        }\n        if (animate){\n            let nextDot = (endDot+dotDiff)%numOfDots;\n            ////console.log(\"yo\"+nextDot+\",start:\"+startDot+\",end:\"+endDot);\n            lines.push(new Line(endDot,dots[endDot].x,dots[endDot].y,dots[nextDot].x,dots[nextDot].y));\n            endDot = (endDot+1)%numOfDots;\n            if (startDot === endDot){\n                animate = false;\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(mouseInDots(p5)){\n            locked = true;\n            startDot = lastDot;\n        }\n        lines = [];\n    };\n\n    const mouseReleased = (p5) => {\n        locked = false;\n        if(mouseInDots(p5)) {\n            endDot = lastDot;\n            animate = true;\n            dotDiff = Math.abs((startDot-endDot));//(endDot-startDot)%12;\n            //console.log(endDot+\",\"+startDot+\",\"+dotDiff);\n        }\n    };\n\n    const mouseInDots = (p5) => {\n        let inDot = false;\n        for (const d of dots){\n            const myDist = p5.dist(d.x, d.y, p5.mouseX, p5.mouseY);\n            if( myDist<dotR){\n                inDot = true;\n                lastDot = d.nr;\n            }\n        }\n        return inDot;\n    };\n\n    const resetDots = (p5) => {\n        dots = [];\n        lines = [];\n        lastDot = 0;\n        startDot = 0;\n        endDot = 0;\n        dotDiff = 0;\n        locked = false;\n        animate = false;\n        for (let i = 0; i < numOfDots; i++) {\n            let x = (wWidth/2)+p5.cos((i/numOfDots)*360)*circleR;\n            let y = (wHeight/2)+p5.sin((i/numOfDots)*360)*circleR;\n            dots.push(new Dot(i,x,y));\n        }\n    };\n\n    return <TwistySketch setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased} />;\n}\n\nclass TwistySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO replace boxes and checks with\n//circles of variating fill and some strokes\n//moving fan-like\nexport default function moenster(){\n    let moves = 0;\n    const triangleSides = 50, triangleHeight = triangleSides*0.866;\n\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.RADIANS);\n    };\n\n    const draw = p5 => {\n        //background still\n        p5.background(255);\n        back(p5);\n\n        //pattern1 horisontal\n        lines(p5);\n\n        //pattern2 diagonal\n        squares(p5);\n\n        moves = (moves%40)+1;\n    };\n\n    const back = (p5) => {\n        p5.noStroke();\n        p5.randomSeed(100);\n        for (let down = 0; down<wHeight; down+=2*triangleHeight){\n            const top = down,  mid = top + triangleHeight, bot = mid + triangleHeight;\n            const ts = triangleSides, ts2 = triangleSides/2;\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,top,0,mid,ts2,mid);\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,bot,0,mid,ts2,mid);\n            for (let x = 0; x< wWidth; x+=ts){\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,top,x+ts,top,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,top,x+ts2*3,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,bot,x+ts,bot,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,bot,x+ts2*3,mid);\n            }\n        }\n    };\n\n    const lines = (p5) => {\n        p5.strokeWeight(10);\n        p5.stroke(250,200,250,200);\n        for (let x = -20; x< wWidth; x+=40){\n            p5.line(20+x+moves,0,x+moves,wHeight);\n        }\n        p5.strokeWeight(10);\n        p5.stroke(255,255,200,200);\n        for (let x = -30; x< wWidth; x+=40){\n            p5.line(0,30+x+moves,wWidth,x+moves);\n        }\n    };\n\n    const squares = (p5) => {\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(100,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(240,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(142,wHeight-25-(moves*9),30,30);\n\n    };\n\n    return <MoensterSketch setup={setup} draw={draw} />;\n}\n\nclass MoensterSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\n\n//TODO noise for smoothe kanter\nexport default function tumble(){\n    const wWidth = 400, wHeight = 400;\n    let moves = 30;\n    let stubs = [0,39,54,123,129,290,300,40];\n    let cFrom, cTo;\n    let randomStart=119;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        cFrom = p5.color(251,252,229,0.4*255);\n        cTo = p5.color(126,100,24,0.4*255);\n\n    };\n\n    const draw = p5 => {\n        p5.background(227,220,180);\n        p5.stroke(215,200,160);\n        p5.fill(215,200,160,180);\n        p5.rect(0,(wHeight-40)/2,wWidth,(wHeight+40)/2);\n        stubs.forEach(stub => {\n            p5.rect((stub+moves*0.7)%wWidth,(wHeight-50)/2,4,8);\n        });\n        p5.translate(moves,165);\n        p5.rotate(2*moves);\n        //0,0 er senter for rotasjon og forflytting\n        tumbleWeed(p5);\n\n        moves=(moves+1)%(wWidth+30);\n    };\n\n    const tumbleWeed = (p5) => {\n        if(moves===0){\n            randomStart++;\n        }\n        p5.randomSeed(randomStart);\n        //tegn tumbpleweedet her\n        p5.stroke(215,200,160);\n        p5.fill(250,240,230);\n        for (let i = 0.1;i<=1;i+=0.1){\n            weed(p5,i);\n        }\n    };\n\n    const weed = (p5,scale) => {\n        if(p5.random(0,1)>0.5){\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.stroke(c);\n            p5.noFill();\n        } else {\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.noStroke();\n            p5.fill(c);\n        }\n\n        p5.beginShape();\n        p5.vertex(p5.random(-40, 0)*scale, p5.random(-40, 0)*scale,);\n        p5.vertex(p5.random(-40, 5)*scale, p5.random(40,60)*scale);\n        p5.vertex(p5.random(50, 10)*scale, p5.random(40,60)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-40, 0)*scale);\n        p5.vertex(p5.random(50, 40)*scale, p5.random(-40, 0)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-20, 0)*scale);\n        p5.vertex(p5.random(60, 10)*scale, p5.random(-5, 0)*scale);\n        p5.endShape(p5.CLOSE);\n    };\n\n    return <TumbleSketch setup={setup} draw={draw} />;\n}\n\nclass TumbleSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function glitchy(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const text = 'Glitchy';\n    const offset = 4;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(10,10,10);\n        p5.noStroke();\n        p5.textSize(90);\n        p5.textStyle(p5.BOLD);\n        p5.fill(255, 26, 64, 250);\n        p5.text(text,(wWidth/6)-offset,wHeight/2);\n        p5.fill(26, 130, 255, 250);\n        p5.text(text,(wWidth/6)+offset,wHeight/2);\n        p5.fill(255);\n        p5.text(text,(wWidth/6),wHeight/2);\n        //TODO add lines of offset image\n        //maybe use https://www.npmjs.com/package/p5.glitch\n    };\n\n    return <GlitchySketch setup={setup} draw={draw} />;\n}\n\nclass GlitchySketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function threadEllipse(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    //const dist = (wWidth/3)*1.2;\n    let c1,c2;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        c1 = p5.createVector(wWidth/3,wHeight/2);\n        c2 = p5.createVector(wWidth*2/3,wHeight/2);\n        //console.log(dist);\n    };\n\n    const draw = p5 => {\n        p5.background(231, 70, 69);\n        //p5.background(251, 119, 86);\n\n        //p5.stroke(250,205,96);\n        p5.stroke(251, 119, 86);\n        p5.strokeWeight(4);\n        p5.line(c1.x,c1.y,p5.mouseX,p5.mouseY);\n        p5.line(c2.x,c2.y,p5.mouseX,p5.mouseY);\n        p5.stroke(251, 119, 86, 200);\n        p5.line(wWidth/2,wHeight/2,p5.mouseX,p5.mouseY);\n\n        //define\n        let mouseV = p5.createVector(p5.mouseX,p5.mouseY);\n        let dist1 =  c1.dist(mouseV);\n        let dist2 =  c2.dist(mouseV);\n        let rel = dist1+dist2;\n        p5.text(rel,20,20);\n\n        //\n\n\n        p5.noStroke();\n        p5.fill(253, 250, 102);\n        p5.ellipse(c1.x,c1.y,10,10);\n        p5.ellipse(c2.x,c2.y,10,10);\n        p5.ellipse(p5.mouseX,p5.mouseY,10,10);\n\n        p5.noFill();\n        p5.stroke(253, 250, 102,50);\n        p5.ellipse(wWidth/2,wHeight/2,(wWidth/3)*1.4,wHeight*0.2)\n    };\n\n    return <ThreadEllipseSketch setup={setup} draw={draw} />;\n}\n\nclass ThreadEllipseSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, drawLine, inputField} from \"./utils\";\n\nexport default function sinuswave(){\n    let degrees = 0;\n    let degreeInc = 1;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const radius = wWidth/8;\n    let center;\n    const xedge = wWidth*2/3, yedge = wHeight/3;\n    let xpoints = [], ypoints = [], tanPoints = [];\n    let inputDegrees;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        //p5.frameRate(1);\n        center = p5.createVector(wWidth*5/6,wHeight/6);\n        inputDegrees = inputField(p5, canvasParentRef, degreeInc, 60, 65, 30);\n    };\n\n    const draw = p5 => {\n        p5.background(69, 77, 102);\n        if (inputDegrees.value() !== degreeInc && inputDegrees.value()!== ''){\n            degreeInc = inputDegrees.value();\n        }\n\n        let xcoor = center.y+radius*p5.cos(degrees);\n        let ycoor = center.x+radius*p5.sin(degrees);\n\n        xpoints.push(p5.createVector(xedge,xcoor));\n        ypoints.push(p5.createVector(ycoor,yedge));\n\n        circling(p5,xcoor,ycoor);\n        p5.stroke(218, 216, 115);\n        drawPoints(p5,xpoints,p5.createVector(-1,0));\n        drawPoints(p5,ypoints,p5.createVector(0,1));\n\n        let tanEnd = p5.createVector(xedge,yedge+radius);\n        let tanStart = p5.createVector(xedge-radius,yedge);\n        let tanStrength = tanEnd.copy().sub(tanStart).mult(p5.tan(degrees));\n        tanPoints.push(p5.createVector(tanStart.x+tanStrength.x,tanStart.y+tanStrength.y));\n        p5.stroke(218, 216, 115,100);\n        drawPoints(p5,tanPoints,p5.createVector(-1,1));\n\n        degrees = (degrees+parseInt(degreeInc))%360;\n    };\n\n    const circling = (p5,xline,yline) => {\n        p5.noStroke();\n        p5.fill(48, 153, 117);\n        p5.ellipse(center.x,center.y,radius*2,radius*2);\n        p5.stroke(88, 179, 104);\n        p5.line(center.x,center.y,yline,xline);\n\n        p5.strokeWeight(2);\n        p5.stroke(218, 216, 115);\n        p5.line(xedge,xline,yline,xline);\n        p5.line(yline,yedge,yline,xline);\n    };\n\n    const drawPoints = (p5, pointArray, direction) => {\n        //delete outside points\n        pointArray = pointArray.filter(point => {\n            return point.x < wWidth+5 &&\n                point.x > -5 &&\n                point.y < wHeight+5 &&\n                point.y > -5\n\n        });\n        //move points\n        pointArray.forEach(point => {\n            point.x += direction.x;\n            point.y += direction.y;\n            //p5.point(point.x,point.y);\n        });\n        //draw line between points\n        drawLine(p5,pointArray);\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function falling(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let moves = 0;\n    let distance, force;\n    let ellipseX, ellipseY;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        let v1 = p5.createVector(150,300);\n        let v2 = p5.createVector(300,400);\n        distance = v1.dist(v2);\n        force = v2.sub(v1).div(distance);\n        console.log(\" \"+wWidth+\", \"+wHeight);\n        console.log(force);\n        ellipseX = 200;\n        ellipseY = -10;\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.noStroke();\n        p5.fill(255, 217, 2, 170);\n        p5.ellipse(300, 120, 100);\n        moves++;\n        if(moves>wWidth*1.5){\n            moves = -10;\n            ellipseX = 200;\n            ellipseY = -10;\n        }\n        if(ellipseY>305 && ellipseY<390){\n            ellipseX += force.x;\n            ellipseY += force.y;\n        } else {\n            ellipseY += 1;\n        }\n        p5.ellipse(ellipseX, ellipseY, 50);\n\n\n        p5.quad(150,300,100,350,300,500,300,400);\n    };\n\n    return <FallingSketch setup={setup} draw={draw} />;\n}\n\nclass FallingSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO make colours change across spring\nexport default function findMe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let startColor, endColor, centerV, upperV, lowerV;\n    const radius = 300;\n    let detailMode = 0;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.colorMode(p5.HSB,100);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(5);\n        p5.stroke(255, 217, 2, 170);\n        p5.strokeWeight(5);\n        p5.noFill();\n        startColor = p5.color(2,100,100);\n        endColor = p5.color(20,100,100);\n        centerV = p5.createVector(-100,-10);\n        upperV = p5.createVector(0,-10);\n        lowerV = p5.createVector(-180,30);\n\n        switch (detailMode) {\n            case 0:\n                lowSpring(p5,centerV,95,10);\n                break;\n            case 1:\n                mediumSpring(p5,centerV,95,10, 12);\n                break;\n            default:\n                highSpring(p5,centerV,95,10, 12,upperV,lowerV);\n        }\n\n        startColor = p5.color(35,100,100);\n        endColor = p5.color(71,100,100);\n        centerV = p5.createVector(wWidth+100,-10);\n        upperV = p5.createVector(wWidth,-10);\n        lowerV = p5.createVector(wWidth+180,30);\n        switch (detailMode) {\n            case 0:\n                lowSpring(p5,centerV,-98,-2);\n                lowText(p5);\n                break;\n            case 1:\n                mediumSpring(p5,centerV,-98,-2, 15);\n                mediumText(p5);\n                break;\n            default:\n                highSpring(p5,centerV,-98,-2, 15,upperV,lowerV);\n                highText(p5);\n        }\n    };\n\n    const lowSpring = (p5,center,start,end) => {\n        mediumSpring(p5,center,start,end,300);\n    };\n\n    const lowText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.fill(255);\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"#### ##\",wWidth/2,wHeight*3/4);\n    };\n\n    const mediumSpring = (p5,center,start,end,steps) => {\n        //calc last lines\n        let inc = (end-start)/steps;\n        let colorInc = 1/steps;\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n            p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n        }\n    };\n\n    const mediumText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(2);\n        p5.fill(255);\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"Find me\",wWidth/2,wHeight*3/4);\n    };\n\n    const highSpring = (p5,center,start,end,steps,upperFocal,lowerFocal) => {\n        //calc last lines\n        let inc = (end-start)/steps;\n        let colorInc = 1/steps;\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n            //p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n            p5.curve(upperFocal.x,upperFocal.y,center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle),upperFocal.x,upperFocal.y);\n            p5.stroke(p5.lerpColor(startColor,endColor, colorInc*i));\n        }\n        for (let i = 0;i<steps;i++){\n            let angle = start+i*inc;\n            let c = p5.lerpColor(startColor,endColor, colorInc*i);\n            c.setAlpha(60);\n            //p5.line(center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle));\n            p5.stroke(c);\n            p5.curve(lowerFocal.x,lowerFocal.y,center.x,center.y,center.x+radius*p5.sin(angle),center.y+radius*p5.cos(angle),lowerFocal.x,lowerFocal.y);\n        }\n        //first draw bottom curves, then draw uppercurves.\n        //maybe use rotate? and push/pop\n    };\n\n    const highText = (p5) => {\n        p5.stroke(255);\n        p5.strokeWeight(1);\n        p5.noFill();\n        p5.textSize(56);\n        p5.textAlign(p5.CENTER);\n        p5.text(\"Find me\",wWidth/2,wHeight*3/4);\n    };\n\n    const mousePressed = () => {\n        detailMode = (detailMode+1)%3;\n    };\n\n    return <FindMeSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass FindMeSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\n//TODO more pointy when moving from focal corner\nexport default function vulfPeck(){\n    let heights = 10, steps = 20;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const yStart = 10, yMid = wWidth*0.77, yEnd = wWidth-10;\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.stroke(255, 167, 2, 170);\n        let centerH = heights;\n        let mouseDim = 1+(p5.mouseY/wHeight);\n        for (let i = 1; i<steps;i++){\n            p5.line(yStart,wHeight-heights*i,yMid,wHeight-centerH);\n            p5.line(yMid,wHeight-centerH,yEnd,wHeight-heights*i);\n            centerH+=heights*(2-(1/i)*mouseDim);\n        }\n    };\n\n    return <VulfPeckSketch setup={setup} draw={draw} />;\n}\n\nclass VulfPeckSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function tallyHall(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const squareSide = wWidth/2;\n    const turns = 12;\n    let tile, tiles;\n    let degrees = 45;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.frameRate(30);\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        p5.imageMode(p5.CENTER);\n\n        tile = newTile(p5);\n        tiles = tileCovering(p5);\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.translate(wWidth/2, wHeight/2);\n        let shorterSides = p5.dist(squareSide,0,0,squareSide);\n        let rel = shorterSides/wWidth;\n        p5.image(tiles,0,0);\n        for (let turn = 0; turn < turns; turn++){\n            p5.rotate(degrees);\n            p5.image(tiles,0,0,shorterSides,shorterSides);\n            shorterSides*=rel;\n        }\n        if(!p5.mouseIsPressed){\n            degrees = (degrees+1)%360;\n        }\n    };\n\n    const newTile = (p5) => {\n        let newtile = p5.createGraphics(squareSide,squareSide);\n        newtile.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        newtile.background(255);\n        newtile.fill(0);\n        newtile.noStroke();\n        newtile.textSize(42);\n\n        newtile.triangle(0,0,0,squareSide,squareSide,squareSide);\n        newtile.textAlign(p5.CENTER, p5.TOP);\n        newtile.text('TALLY',squareSide*0.5,squareSide*0.05);\n        newtile.fill(255);\n        newtile.rotate(90);\n        newtile.textAlign(p5.CENTER, p5.BOTTOM);\n        newtile.text('HALL',squareSide*0.5,squareSide*-0.05);\n        return newtile;\n    };\n\n    const tileCovering = (p5) => {\n        let tileRotations = p5.createGraphics(wWidth,wHeight);\n        tileRotations.noStroke();\n        tileRotations.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        tileRotations.image(tile,0,0);\n        tileRotations.push();\n        tileRotations.rotate(90);\n        tileRotations.image(tile,0,-wHeight,squareSide,squareSide);\n        tileRotations.pop();\n        tileRotations.filter(p5.INVERT);\n        tileRotations.scale(1,-1);\n        tileRotations.image(tile,0,-wHeight);\n        tileRotations.rotate(90);\n        tileRotations.image(tile,-wWidth,-wHeight);\n        return tileRotations\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function classixx(){\n    //let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const unit = 20;\n    let runner1,runner2;\n    let colors;\n    let degrees = 0, offsetX = 3, offsetY = 10;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.imageMode(p5.CENTER);\n        p5.colorMode(p5.HSB,255);\n        colors = pickColors(p5,19);\n        runner1 = drawRunner(p5);\n        colors = pickColors(p5,36); //19,20\n        runner2 = drawRunner2(p5);\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.translate(wWidth/2, wHeight/2);\n        p5.rotate(45);\n        let xOff = offsetX*p5.sin(-degrees);\n        let yOff = offsetY*p5.cos(-degrees);\n        p5.image(runner1,xOff,yOff);\n        xOff = offsetX*p5.sin(-degrees+30);\n        yOff = offsetY*p5.cos(-degrees+30);\n        p5.image(runner2,unit+xOff,(unit*3)+yOff);\n\n        degrees = (degrees+3)%360;\n    };\n\n    const pickColors = (p5,seed) => {\n        p5.randomSeed(seed);\n        return {\n            head: p5.color(p5.random(0,255),255,255),\n            leftLowerArm: p5.color(p5.random(0,255),255,255),\n            leftUpperArm: p5.color(p5.random(0,255),255,255),\n            shoulder: p5.color(p5.random(0,255),255,255),\n            rightUpperArm: p5.color(p5.random(0,255),255,255),\n            rightLowerArm: p5.color(p5.random(0,255),255,255),\n            rightUpperLeg: p5.color(p5.random(0,255),255,255),\n            leftLeg: p5.color(p5.random(0,255),255,255),\n            rightLowerLeg: p5.color(p5.random(0,255),255,255),\n        }\n\n    };\n\n    const paper = (p5) => {\n        let paper = p5.createGraphics(unit*8,unit*11);\n        paper.angleMode(p5.DEGREES);\n        paper.background(0,0);\n        paper.stroke(250);\n        paper.strokeWeight(5);\n        paper.strokeJoin(p5.ROUND);\n        paper.fill(0);\n        paper.translate(2.5,2.5);\n        return paper\n    };\n\n    const upperBody = (graphic) => {\n        graphic.fill(colors.shoulder);\n        graphic.triangle(unit*4,0,                       //sholder\n            unit*4,unit*2,\n            unit*2,unit*2);\n        graphic.fill(colors.head);\n        graphic.ellipse(unit*5, unit*0.8, unit*1.5);         //head\n        graphic.fill(colors.rightUpperArm);\n        graphic.quad(unit*2,unit*2,                  //right UpperArm\n            unit*6,unit*2,\n            unit*6,unit*3,\n            unit,unit*3);\n        graphic.fill(colors.rightLowerArm);\n        graphic.rect(unit*6, unit*3, unit, -unit*2.5,0,0,unit,unit); //right lowerarm\n    };\n\n    const drawRunner = (p5) => {\n        let runny = paper(p5);\n\n        runny.fill(colors.leftLowerArm);\n        runny.rect(0, 0, unit, unit*2.5,0,0,unit,unit);//left lowerarm\n        runny.fill(colors.leftUpperArm);\n        runny.quad(unit,0,unit*4,0,unit*3,unit,unit,unit); //left upperarm\n        upperBody(runny);\n        runny.fill(colors.rightUpperLeg);\n        runny.rect(unit,unit*3,unit*4,unit,unit,0,0,unit);  //right upperLeg\n        runny.fill(colors.leftLeg);\n        runny.rect(unit, unit*4, unit, unit*6, 0,0,unit,unit);  //left leg\n        runny.fill(colors.rightLowerLeg);\n        runny.rect(unit*4, unit*4, unit, unit*2.5, 0,0,unit,unit);  //right lowerleg\n        return runny;\n    };\n\n    const drawRunner2 = (p5) => {\n        let runny = paper(p5);\n\n        runny.fill(colors.leftLeg);\n        runny.rect(unit*2,unit*3,unit*3.5,unit);  //left upperLeg\n        runny.fill(colors.leftUpperArm);\n        runny.rect(unit*4.5, unit*4, unit, unit*2.5, 0,0,unit,unit);  //left lowerleg\n        runny.push();\n        runny.translate(unit*2.5,-unit*1.5);//7runny.width/8);\n        runny.rotate(45);\n        runny.fill(colors.rightUpperLeg);\n        runny.rect(unit*2,unit*3,unit*3.5,unit);  //right upperLeg\n        runny.fill(colors.rightLowerLeg);\n        runny.rect(unit*4.5, unit*4, unit, unit*2.5, 0,0,unit,unit);  //right lowerleg\n        runny.pop();\n        runny.fill(colors.rightUpperArm);\n        upperBody(runny);\n\n        return runny;\n    };\n\n    return <ClassixxSketch setup={setup} draw={draw}/>;\n}\n\nclass ClassixxSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function tree(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const leaf = 4;\n    let moves = 0, starting = 20;\n    let allLines = [], activepoints= [], newActives = [];\n    let grayGreen,beigeGreen,lightGreen,leafGreen,darkGreen;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        grayGreen = p5.color(154, 167, 153);\n        beigeGreen = p5.color(172, 179, 135);\n        lightGreen = p5.color(192, 206, 149);\n        leafGreen =  p5.color(97, 113, 59);\n        darkGreen =  p5.color(70, 79, 41);\n\n        for(let i = 0; i<starting; i++) {\n            activepoints.push([p5.random(wWidth/3,wWidth*2/3),wHeight])\n        }\n        console.log(activepoints);\n    };\n\n    const draw = p5 => {\n        if(moves>=50){\n            foreground(p5,0.4,40);\n            return\n        }\n        background(p5);\n        foreground(p5,0.5,80);\n        //foreground(p5,0.5,50);\n\n        p5.strokeWeight(1);\n        p5.stroke(29, 33, 14);\n\n        //lines\n        allLines.forEach(li => {\n            p5.line(li[0],li[1],li[2],li[3])\n        });\n\n        //leaves\n        allLines.forEach(li => {\n            if (li[3] < wHeight / 2 && p5.random(0, 1) > 0.6) {\n                p5.stroke(leafGreen);\n                p5.strokeWeight(3);\n                let degree = p5.random(0, 360);\n                p5.line(li[2], li[3], li[2] + p5.sin(degree) * leaf, li[3] + p5.cos(degree) * leaf);\n                degree = p5.random(0, 360);\n                p5.line(li[2], li[3], li[2] + p5.sin(degree) * leaf, li[3] + p5.cos(degree) * leaf);\n            }\n        });\n\n        activepoints.forEach( p => {\n            //calculate branching\n            if(p5.random(0,1) === 0) {\n                calculateNext(p5,p);\n            }\n            //calculate next active point\n            calculateNext(p5,p);\n        });\n        activepoints = newActives;\n        newActives = [];\n        moves++;\n\n        foreground(p5,0.01,40);\n    };\n\n    const background = (p5) => {\n        p5.noStroke();\n\n        p5.background(154, 167, 153);\n\n        for(let i = 0;i<wHeight*0.6;i++){\n            let lerpStep = 1/(wHeight*0.3);\n            let ellipseColor = grayGreen;\n            if(i<wHeight*0.3){\n                ellipseColor = p5.lerpColor(grayGreen,beigeGreen,lerpStep*i);\n            } else {\n                ellipseColor = p5.lerpColor(beigeGreen,lightGreen,lerpStep*(i-(wHeight*0.3)));\n            }\n            p5.fill(ellipseColor);\n            p5.ellipse((wWidth/3),wHeight*0.1,(wWidth*1.8)-(i*3));\n\n            //p5.stroke(0);\n            //p5.strokeWeight(0.5);\n            //p5.line(0,wHeight/2,wWidth,wHeight/2);\n            //p5.line(wWidth/2,0,wWidth/2,wHeight);\n        }\n    };\n\n    const foreground = (p5,offset,grassHeight) => {\n        /*p5.background(91, 174, 222);\n        p5.background(192, 206, 149);\n        p5.background(172, 179, 135);\n        p5.background(154, 167, 153);*/\n        p5.noStroke();\n        let noiseScale=0.02;\n        let grassColor;\n        for (let x=0; x < wWidth; x++) {\n            let noiseVal = p5.noise((p5.mouseX+x)*noiseScale+offset, p5.mouseY*noiseScale);\n            console.log(noiseVal);\n            grassColor = p5.lerpColor(darkGreen,leafGreen,noiseVal);\n            p5.stroke(grassColor);\n            p5.line(x, wHeight-noiseVal*grassHeight, x, wHeight);\n        }\n        //p5.quad(wWidth/3,wHeight-20,wWidth*2/3,wHeight-20,wWidth*2/3,wHeight,wWidth/3,wHeight);\n    };\n\n    const calculateNext = (p5,p) => {\n        if(p[1]>wHeight/2){ //stamme\n            let p2;\n            if(p[0]>wWidth/2){\n                p2 = [p[0]+p5.random(-20,5),p[1]+p5.random(-20,0)];\n            } else {\n                p2 = [p[0]+p5.random(-5,20),p[1]+p5.random(-20,0)];\n            }\n            allLines.push([p[0],p[1],p2[0],p2[1]]);\n            newActives.push(p2);\n        } else { //korne\n            let p2 = [p[0]+p5.random(-30,+30),p[1]+p5.random(-30,20)];\n            allLines.push([p[0],p[1],p2[0],p2[1]]);\n            newActives.push(p2);\n        }\n    };\n\n    return <TreeSketch setup={setup} draw={draw} />;\n}\n\nclass TreeSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function jerryFolk(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const l = wWidth/6;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.frameRate(7);\n        p5.angleMode(p5.DEGREES);\n        p5.textAlign(p5.CENTER,p5.CENTER);\n        p5.background(13, 247, 216);\n    };\n\n    const draw = p5 => {\n        p5.background(13, 247, 216,1);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.fill(255, 30, 211);\n        p5.textSize(50);\n        displayF(p5,moves);\n        /*let l = wWidth/6;\n        let x = l*0.6;//+10*p5.sin((backMoves(moves))*2);\n        let y = (wHeight/2)+(wHeight*0.4)*p5.cos(moves);\n        p5.push();\n        p5.translate(0,p5.cos(moves)*5);\n        p5.rotate(p5.cos(moves)*5);\n        p5.text(\"F\",x,y);\n        p5.pop();*/\n        p5.stroke(255);\n        for (let xl = 0; xl<wWidth; xl+=l){\n            p5.line(xl,0,xl,wHeight);\n        }\n\n        /*x = l*1.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"U\",x,y);\n        x = l*2.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"T\",x,y);\n        x = l*3.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"U\",x,y);\n        x = l*4.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"R\",x,y);\n        x = l*5.25+10*p5.sin(moves);\n        y = (wHeight/2)+(wHeight/2)*p5.cos(moves);\n        p5.text(\"E\",x,y);\n\n        if(!p5.mouseIsPressed){\n            moves=(moves+0.1)%360;\n        }*/\n\n        if(moves<(360)){\n            moves=(moves+5)%360;\n        }\n    };\n\n    const displayF = (p5, degree) => {\n        let x = -(wWidth/2)+(l*0.6);//+10*p5.sin((backMoves(moves))*2);\n        let y = (wHeight*0.35)*p5.cos(moves);\n\n        //let x and y be center of paper and move entire paper.\n        p5.imageMode(p5.CENTER);\n        p5.push();\n        p5.translate(x,y);\n        p5.rotate(p5.cos(degree*2)*5);\n        p5.text(\"F\",wWidth/2,wHeight/2);\n        p5.pop();\n    };\n\n    /*const backMoves = (degree) => {\n        if ((degree%360)>180) {\n            return 180-(degree%180)\n        } else {\n            return (degree%180)\n        }\n    }\n\n    const xRot = (p5,l,a) => {\n        return l+10*p5.sin(moves+a)\n    };\n\n    const yRot = (p5,a) => {\n        return (wHeight/2)+(wHeight/2)*p5.cos(moves+a)\n    };*/\n\n    return <JerryFolkSketch setup={setup} draw={draw} />;\n}\n\nclass JerryFolkSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function wavey(){\n    //let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const xSteps = 12;\n    const stripeL = 6;\n    const stripeW = 7;\n    //const framePadding = 130;\n    const modes = ['checkerd', 'simple romb', 's-rombs', 'pleats', 'bezier pleats', 's-checks','s-bezier', 'bezier'];\n    //const ellWit = 8;\n    let patternMode = 7;\n    let squareSide = wWidth/7;\n    //let squareUtils = [];\n\n    /*const getSquareVectors = (p5) => {\n        let upperLeft = p5.createVector((wWidth-squareSide)/2,(wHeight-squareSide)/2);\n        let upperRight = p5.createVector((wWidth+squareSide)/2,(wHeight-squareSide)/2);\n        let lowerLeft = p5.createVector((wWidth-squareSide)/2,(wHeight+squareSide)/2);\n        let lowerRight = p5.createVector((wWidth+squareSide)/2,(wHeight+squareSide)/2);\n        return [upperLeft,upperRight,lowerLeft,lowerRight,squareSide,squareSide];\n    };*/\n\n    const colorTheme = (p5,primary,secondary,number) => {\n        switch (number) {\n            case 0:\n                secondary(255,255,255,255);\n                primary(255, 217, 2,50);\n                break;\n            case 1:\n                secondary(255,255,255,255);\n                primary(255, 207, 100,255);\n                break;\n            case 2:\n                secondary(255,255,255,255);\n                primary(255, 217, 2,150);\n                break;\n            case 3:\n                secondary(255,255,255,255);\n                primary(255, 207, 100,255);\n                break;\n            case 0.5:\n                secondary(255,255,255,255);\n                primary(255,255,255,255);\n                break;\n            case 1.5:\n                secondary(255,255,255,255);\n                primary(255, 207, 100,150);\n                break;\n            case 2.5:\n                secondary(255,255,255,255);\n                primary(255, 217, 2,50);\n                break;\n            case 3.5:\n                secondary(255,255,255,255);\n                primary(255, 207, 100,100);\n                break;\n            default:\n                secondary(255,255,255,255);\n                primary(255, 217, 2,100);\n        }\n    };\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        //squareUtils = getSquareVectors(p5);\n    };\n\n    //TODO click and drag checks\n    //TODO click and drag rombe\n    //TODO click and drag bezier\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.stroke(255, 217, 2, 50);\n        p5.fill(255, 217, 2);//, 50);\n        //p5.noFill();\n\n        switch (modes[patternMode]) {\n            case 'checkerd':\n                check(p5);\n                //forgeCheck(p5);\n                break;\n            case 'simple romb':\n                romb(p5,simpleRomb);\n                break;\n            case 's-rombs':\n                romb(p5,sFigure);\n                break;\n            case 'pleats':\n                rombPattern(p5,rombulus);\n                break;\n            case 'bezier pleats':\n                //rombPattern(p5,rombulus);\n                rombPattern(p5,bezierus);\n                break;\n            case 's-checks':\n                p5.stroke(50);\n                p5.fill(255, 217, 2, 150);\n                sChecks(p5);\n                p5.push();\n                p5.scale(1,-1);\n                p5.translate(squareSide,-wHeight+squareSide*0.5);\n                p5.fill(255, 207, 100);\n                sChecks(p5);\n                p5.pop();\n                break;\n            case 's-bezier':\n                p5.stroke(50);\n                p5.fill(255, 217, 2, 150);\n                sBezier(p5,0,0);\n                p5.push();\n                p5.scale(1,-1);\n                p5.translate(squareSide,-wHeight+squareSide*0.5);\n                p5.fill(255, 207, 100,150);\n                sBezier(p5,0,0);\n                p5.pop();\n                break;\n            case 'bezier':\n                /*p5.stroke(50);\n                p5.fill(255, 217, 2, 150);\n                sBezier(p5,(p5.mouseX-wWidth)/2,(p5.mouseY-wHeight)/2);\n                p5.push();\n                p5.scale(1,-1);\n                p5.translate(squareSide,-wHeight+squareSide*0.5);\n                p5.fill(255, 207, 100,150);\n                sBezier(p5,0,0);\n                p5.pop();*/\n                bez(p5);\n                break;\n            default:\n                console.log('d');\n                break;\n        }\n        /*\n        p5.ellipse(squareUtils[0].x+squareUtils[1], squareUtils[0].y, ellWit);\n        p5.ellipse(squareUtils[0].x, squareUtils[0].y+squareUtils[2], ellWit);\n        p5.ellipse(squareUtils[0].x+squareUtils[1], squareUtils[0].y+squareUtils[2], ellWit);\n        */\n    };\n\n    const check = (p5) => {\n        for(let j = 0; j*squareSide<wHeight;j++){\n            for(let i = 0; i*squareSide*2<wWidth;i++){\n                p5.rect(i*squareSide*2+((j%2)*squareSide),j*squareSide,squareSide,squareSide);\n            }\n        }\n        //p5.filter(p5.BLUR,10);\n    };\n\n    /*const forgeCheck = (p5) => {\n        p5.fill(255, 130, 20,200);\n        p5.stroke(0);\n        p5.square(framePadding,framePadding,wWidth-(framePadding*2));\n        p5.noStroke();\n        p5.fill(255, 207, 100);\n        p5.rect(squareUtils[0].x,squareUtils[0].y,squareUtils[4],squareUtils[5]);\n        p5.fill(255,200);\n        p5.ellipse(squareUtils[0].x, squareUtils[0].y, ellWit);\n        p5.ellipse(squareUtils[1].x, squareUtils[1].y, ellWit);\n        p5.ellipse(squareUtils[2].x, squareUtils[2].y, ellWit);\n        p5.ellipse(squareUtils[3].x, squareUtils[3].y, ellWit);\n    };*/\n\n    const romb = (p5,rombType) => {\n        let height = p5.sin(60)*squareSide;\n        let xOff = -p5.cos(60)*squareSide;\n        for(let j = 0; j*height<wHeight;j++){\n            for(let i = 0; (i*squareSide*2)<(wWidth+(-3*xOff));i++){\n                let x = i*squareSide*2+((j%4)*xOff);\n                let y = j*height;\n                rombType(p5,x,y,height);\n            }\n        }\n    };\n\n    const simpleRomb = (p5,x,y,height) => {\n        p5.fill(255, 207, 100);\n        p5.stroke(0);\n        p5.quad(x,y,\n            x+squareSide,y,\n            x+squareSide*1.5,y+height,\n            x+squareSide*0.5,y+height);\n    };\n\n    const sFigure = (p5,x,y,height) => {\n        p5.fill(255, 217, 2);\n        p5.noStroke();\n        let firstAngle = 30+45;\n        let firstX = (squareSide/4)*p5.sin(firstAngle);\n        let firstY = (squareSide/2)*p5.cos(firstAngle);\n        p5.beginShape();\n        p5.vertex(x,y);\n        p5.vertex(x+squareSide, y);\n        p5.vertex(x+squareSide+firstX, y+firstY);\n        p5.vertex(x+squareSide+firstX, y+height-firstY);\n        p5.vertex(x+squareSide*1.5, y+height);\n        p5.vertex(x+squareSide*0.5, y+height);\n\n        p5.vertex(x+squareSide*0.5-firstX, y+height-firstY);\n        p5.vertex(x+squareSide*0.5-firstX, y+firstY);\n        p5.endShape(p5.CLOSE);\n    };\n\n    const rombPattern = (p5,pattern) => {\n        let xJump = (squareSide*0.53)+(squareSide/2*p5.sin(60));//(squareSide/2*p5.cos(60))+(squareSide/2);\n        for(let xs = -4*xJump; xs-xJump<wWidth; xs+= xJump){\n            //let mx = ((xs/xJump));//%2); // +((xs%(2*xJump))/xJump*squareSide/4)\n            let ystart = -0.5*((xs/xJump)%2); // +(xs%(2*xJump))/xJump*squareSide/2\n            for(let ys = ystart; ((ys-1)*squareSide)<wHeight; ys++){\n                pattern(p5,xs,ys);\n            }\n        }\n    };\n\n    const rombulus = (p5,xs,ys) => {\n        //horisontal\n        let x = xs+(ys/2)*squareSide;\n        let y = ys*squareSide;\n        colorTheme(p5,(r,g,b,a) => p5.fill(r,g,b,a),(r,g,b,a) => p5.stroke(r,g,b,a),(ys)%4);\n        para(p5,x,y);\n        colorTheme(p5, (r,g,b,a) => p5.fill(r,g,b,a),(r,g,b,a) => p5.stroke(r,g,b,a),(ys+1)%4);\n        //angled\n        angledRomb(p5,x+(squareSide*0.25),y-(squareSide/2));\n    };\n\n    const para = (p5,x,y) => {\n        p5.quad(x,y,\n            x+squareSide/2,y,\n            x+squareSide,y+squareSide,\n            x+squareSide/2,y+squareSide);\n    };\n\n    const angledRomb = (p5,x,y) => {\n        let xoff = squareSide/2*p5.cos(60);\n        let yoff = squareSide/2*p5.sin(60);\n        p5.quad(x,y,\n            x+xoff,y-yoff,\n            x+xoff+(squareSide/2),y+squareSide-yoff,\n            x+squareSide/2,y+squareSide);\n    };\n\n    const bezierus = (p5,xs,ys) => {\n        let x = xs+(ys/2)*squareSide;\n        let y = ys*squareSide;\n        p5.noFill();\n        colorTheme(p5,(r,g,b,a) => p5.stroke(r,g,b,a),() => {},(ys)%4);\n        bezius(p5, x,y);\n        colorTheme(p5,(r,g,b,a) => p5.stroke(r,g,b,a),() => {},(ys+1)%4);\n        angledBezius(p5, x+(squareSide * 0.25), y-(squareSide / 2));\n    };\n\n    const bezius = (p5,x,y) => {\n        let steps = (squareSide/2)/6;\n        for (let i = 0; i< 6; i++) {\n            x += steps;\n            //p5.stroke(50);\n            //p5.noFill();\n            p5.bezier(x,y,\n                x+squareSide,y,\n                x-squareSide/2,y+squareSide,\n                x+squareSide/2,y+squareSide);\n        }\n    };\n\n    const angledBezius = (p5,x,y) => {\n        //romby(p5,x,y);\n\n        let xoff = squareSide/2*p5.cos(60);\n        let yoff = squareSide/2*p5.sin(60);\n        let stepsX = ((squareSide/2)/6)*p5.cos(60);\n        let stepsY = ((squareSide/2)/6)*p5.sin(60);\n        //x += stepsX*0.5;\n        //y -= stepsY*0.5;\n        for (let i = 0; i< 6; i++) {\n            x += stepsX;\n            y -= stepsY;\n            let start = [x,y];\n            let startWeight = [x-xoff*2,y+yoff*2];\n            let end = [x+squareSide/2,y+squareSide];\n            let endWeight = [x+(xoff*2)+(squareSide/2),y+squareSide-(yoff*2)];\n\n            //p5.stroke(255);\n            /*p5.line(x,y,\n                x-xoff*2,y+yoff*2);\n            p5.stroke(50);\n            p5.line(x+squareSide/2,y+squareSide,\n                x+(xoff*2)+(squareSide/2),y+squareSide-(yoff*2));*/\n            //p5.noFill();\n            p5.bezier(start[0],start[1],\n                startWeight[0],startWeight[1],\n                endWeight[0],endWeight[1],\n                end[0],end[1]);\n        }\n    };\n\n    const sChecks = (p5) => {\n        for(let j = -2; j*squareSide<wHeight;j++){\n            for(let i = -2; i*squareSide*2<wWidth;i++){\n                sCheckFigure(p5,i*squareSide*2,j*squareSide);\n            }\n        }\n    };\n\n    const sCheckFigure = (p5,x,y) => {\n        //p5.noStroke();\n        //p5.fill(255, 217, 2); //let angle = 45;\n        let firstX = (squareSide/4);//p5.sin(angle);\n        let firstY = (squareSide/4);//p5.cos(angle);\n        p5.beginShape();\n        p5.vertex(x,y);\n        p5.vertex(x+squareSide, y);\n        p5.vertex(x+squareSide+firstX, y+firstY);\n        p5.vertex(x+squareSide-firstX, y+squareSide-firstY);\n        p5.vertex(x+squareSide, y+squareSide);\n        p5.vertex(x, y+squareSide);\n        p5.vertex(x-firstX, y+squareSide-firstY);\n        p5.vertex(x+firstX, y+firstY);\n        p5.endShape(p5.CLOSE);\n    };\n\n    const sBezier = (p5,x,y) => {\n        for(let j = y-2; j*squareSide<wHeight;j++){\n            for(let i = x-2; i*squareSide*2<wWidth;i++){\n                sBezFigure(p5,i*squareSide*2,j*squareSide);\n            }\n        }\n    };\n\n    const sBezFigure = (p5,x,y) => {\n        let firstX = (squareSide/2);\n        let firstY = (squareSide/2);\n        //p5.ellipse(x+squareSide+firstX, y+firstY,5);\n        //p5.ellipse(x+squareSide,y+squareSide,5);\n        p5.beginShape(x-firstX, y+squareSide-firstY);\n        p5.vertex(x+squareSide, y);\n        p5.bezierVertex(x+squareSide+firstX, y+firstY, x+squareSide-firstX, y+squareSide-firstY, x+squareSide,y+squareSide);\n\n        p5.vertex(x+squareSide, y+squareSide);\n        p5.vertex(x, y+squareSide);\n        p5.bezierVertex(x-firstX, y+squareSide-firstY,x+firstX, y+firstY,x,y);\n        p5.vertex(x,y);\n        p5.endShape(p5.CLOSE);\n\n        oneSWave(p5,x,y);\n    };\n\n    const oneSWave = (p5,x,y) => {\n        let offsetty = squareSide/7;\n        for (let i = offsetty; i<squareSide; i+=offsetty){\n            oneStrip(p5,x+i,y,x+i,y+squareSide);\n        }\n        /*let offsetty = squareSide/7;\n        for (let i = offsetty*1; i<squareSide; i+=offsetty){\n            oneStrip(p5,x+i,y,x+i,y+squareSide);\n        }*/\n    };\n\n    const oneStrip = (p5,x1,y1,x2,y2) => {\n        let outerCurve = -((squareSide/2)*1.05);//*0.8);\n        let innerCurve = -((squareSide/2)*0.95);//*0.8);\n\n\n        p5.beginShape();\n        p5.vertex(x2, y1);\n        p5.bezierVertex(x2-innerCurve, y1-innerCurve, x1+outerCurve, y2+outerCurve, x1, y2);\n        p5.bezierVertex(x1+innerCurve, y2+innerCurve, x2-outerCurve, y1-outerCurve, x2, y1);\n\n        p5.endShape();\n        /*\n        let outerCurve = -((squareSide/2)*1.05);//*0.8);\n        let innerCurve = -((squareSide/2)*0.95);//*0.8);\n        //p5.stroke(255);\n        //p5.line(x2, y1-2,x2-(wit*1.1), y1-2);\n        //p5.line(x1+(wit*1), y2-2,x1, y2-2);\n        //p5.stroke(0, 0, 0);\n\n        //p5.stroke(255/2);\n        //p5.line(x1, y2+2,x1+(wit*1.1), y2+2);\n        //p5.line(x2-(wit*1), y1+2, x2, y1+2);\n\n        p5.beginShape();\n        p5.vertex(x2, y1);\n        p5.bezierVertex(x2-innerCurve, y1-innerCurve, x1+outerCurve, y2+outerCurve, x1, y2);\n        p5.bezierVertex(x1+innerCurve, y2+innerCurve, x2-outerCurve, y1-outerCurve, x2, y1);\n\n        p5.endShape();*/\n    };\n\n\n\n\n\n    const bez = (p5) => {\n        stripes(p5,-xSteps*30+p5.mouseX,0+p5.mouseY);\n        p5.fill(255, 207, 100);//, 50);\n        p5.push();\n        p5.scale(1,-1);\n        p5.translate(xSteps*30,-xSteps*stripeL*6);\n        p5.rotate(90);\n        stripes(p5,-xSteps*30,0);\n        p5.pop();\n    };\n\n    const mousePressed = () => {\n        patternMode = (patternMode+1)%modes.length;\n\n        //if outside frame: change mode, else: move square.\n        /*if(pointInFrame(wWidth,wHeight,framePadding,p5.mouseX,p5.mouseY)){\n            editSquare(p5);\n        } else {\n            patternMode = (patternMode+1)%modes.length;\n        }*/\n    };\n\n    /*const editSquare = (p5) => {\n        //if inside a point, move that point ans square.\n        let mouse = p5.createVector(p5.mouseX,p5.mouseY);\n        p5.dist(mouse,squareUtils[0]);\n        console.log(\"yoo\");\n        if (p5.dist(mouse,squareUtils[0])<ellWit){\n            squareUtils[0] = mouse;\n            console.log(\"yoo\");\n        }\n    };\n\n    const mouseReleased = (p5) => {\n        //TODO sjekk etter hvilken prikk som skal \"slippes\" og slipp den.\n        p5.ellipse(20,20,20);\n    };\n    */\n\n    const stripes = (p5,x,y) => {\n        for(let j = 0; j<stripeW;j++){\n            //let endPoint = {x:x+(xSteps*12)*j,y:y};\n            for (let i = 0; i<stripeL;i++) {\n                p5.noFill();\n                p5.stroke(255,207,100);\n                //endPoint = oneWave(p5,endPoint.x-(xSteps*6),endPoint.y);\n                //p5.ellipse(endPoint.x-(xSteps*6),endPoint.y,5);\n                colorTheme(p5,(r,g,b,a) => p5.stroke(r,g,b,a),() => {},(i+j)%4);\n                bezius(p5,x+(squareSide*j),y+squareSide*i)\n            }\n        }\n    };\n\n    /*const oneWave = (p5,x,y) => {\n        let offsetty = squareSide/7;\n        for(let i = 0; i<6;i++){\n            oneStreak(p5,x+(i*offsetty),y,x+(offsetty*(6+i)),y+offsetty*6);\n            //oneWave(p5,13+(i*8),10,83+(i*8),80);\n        }\n        return {x:x+(offsetty*(5+5)),y:y+offsetty*6}\n        /*for(let i = 0; i<6;i++){\n            oneStreak(p5,x+(i*xSteps),y,x+(xSteps*(6+i)),y+xSteps*6);\n            //oneWave(p5,13+(i*8),10,83+(i*8),80);\n        }\n        return {x:x+(xSteps*(5+5)),y:y+xSteps*6}*\n    };*/\n\n    /*const oneStreak = (p5,x1,y1,x2,y2) => {\n        let wit = x2-x1;\n        let outerCurve = (wit*1.07);//*0.8);\n        let innerCurve = (wit*0.92);//*0.8);\n\n        p5.beginShape();\n        p5.vertex(x2, y1);\n        p5.bezierVertex(x2-outerCurve, y1, x1+innerCurve, y2, x1, y2);\n        p5.bezierVertex(x1+outerCurve, y2, x2-innerCurve, y1, x2, y1);\n        p5.endShape();\n        /*let wit = x2-x1;\n        let outerCurve = (wit*1.07);//*0.8);\n        let innerCurve = (wit*0.92);//*0.8);\n        //p5.stroke(255);\n        //p5.line(x2, y1-2,x2-(wit*1.1), y1-2);\n        //p5.line(x1+(wit*1), y2-2,x1, y2-2);\n        //p5.stroke(0, 0, 0);\n\n        //p5.stroke(255/2);\n        //p5.line(x1, y2+2,x1+(wit*1.1), y2+2);\n        //p5.line(x2-(wit*1), y1+2, x2, y1+2);\n\n        p5.beginShape();\n        p5.vertex(x2, y1);\n        p5.bezierVertex(x2-outerCurve, y1, x1+innerCurve, y2, x1, y2);\n        p5.bezierVertex(x1+outerCurve, y2, x2-innerCurve, y1, x2, y1);\n        p5.endShape();*\n    };*/\n\n    /*const rotatesRomby = (p5,x,y) => {\n        p5.stroke(255);\n        p5.fill(255, 217, 2,50);\n        let xoff = squareSide/2*p5.cos(60);\n        let yoff = squareSide/2*p5.sin(60);\n        p5.quad(x,y,\n            x+xoff,y-yoff,\n            x+xoff+(squareSide/2),y+squareSide-yoff,\n            x+squareSide/2,y+squareSide);\n\n\n        //romby(p5,x,y);\n        let stepsX = ((squareSide/2)/6)*p5.cos(60);\n        let stepsY = ((squareSide/2)/6)*p5.sin(60);\n        //x += stepsX*0.5;\n        //y -= stepsY*0.5;\n        for (let i = 0; i< 6; i++) {\n            x += stepsX;\n            y -= stepsY;\n            let start = [x,y];\n            let startWeight = [x-xoff*2,y+yoff*2];\n            let end = [x+squareSide/2,y+squareSide];\n            let endWeight = [x+(xoff*2)+(squareSide/2),y+squareSide-(yoff*2)];\n\n            p5.stroke(255);\n        }\n    };*/\n\n    /*const romby = (p5,x,y) => {\n        p5.stroke(255);\n        p5.fill(255, 207, 100);\n        p5.quad(x,y,\n            x+squareSide/2,y,\n            x+squareSide,y+squareSide,\n            x+squareSide/2,y+squareSide);\n\n        let steps = (squareSide/2)/6;\n        for (let i = 0; i< 6; i++) {\n            x += steps;\n            p5.stroke(255);\n            p5.line(x,y,\n                x+squareSide,y,);\n            p5.stroke(50);\n            p5.line(x-squareSide/2,y+squareSide,\n                x+squareSide/2,y+squareSide);\n            //p5.fill(255, 217, 2, 150);\n            p5.noFill();\n            p5.bezier(x,y,\n                x+squareSide,y,\n                x-squareSide/2,y+squareSide,\n                x+squareSide/2,y+squareSide);\n        }\n    };*/\n\n    /*const rombyPattern = (p5) => {\n        for(let ys = 0; ys<wHeight; ys++){\n            romby(p5,(ys/2)*squareSide,ys*squareSide);\n        }\n    };*/\n\n    //return <WaveySketch setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased}/>;\n    return <WaveySketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass WaveySketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"./utils\";\n\nexport default function water(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let noiseScale =0.005;\n    let noiseVal;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.noStroke();\n        p5.fill(255, 217, 2, 170);\n        //p5.ellipse(100+moves, 100+moves, 100+moves);\n        //p5.ellipse(300, 120, 100);\n        moves+=5;\n        if(moves >= 180){\n            moves = 0;\n        }\n\n        for (let y = 0; y < wHeight; y++) {\n            for (let x = 0; x < wWidth; x++) {\n                // noiseDetail of the pixels octave count and falloff value\n                p5.noiseDetail(5, 0.5);\n                noiseVal = p5.noise( x * noiseScale, y * noiseScale);\n                if(noiseVal>p5.sin(moves)){\n                    p5.stroke(42,111,219);\n                } else if(noiseVal>p5.sin(moves-20)){\n                    p5.stroke(129,233,230);\n                } else {\n                    p5.stroke(255);\n                }\n                //p5.stroke(noiseVal*255);\n                p5.point(x, y);\n            }\n        }\n\n\n    };\n\n    return <WaterSketch setup={setup} draw={draw} />;\n}\n\nclass WaterSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, inputField} from \"./utils\";\n\nexport default function unitCircle(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const radius = wWidth*0.35;\n    let degree = 0;\n    let inputDegrees = 0;\n    let centerV;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        inputDegrees = inputField(p5, canvasParentRef, degree, 50, 50, 30);\n        centerV = p5.createVector(wWidth/2,wHeight/2);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        calculations(p5);\n        if(p5.mouseIsPressed){\n            //degrefrom mouse\n            let mouseV = p5.createVector(p5.mouseX,p5.mouseY);\n            let hyp = centerV.dist(mouseV);\n            let dir = -(centerV.y-mouseV.y)/p5.abs(centerV.y-mouseV.y);\n            degree = (dir * p5.acos((mouseV.x-centerV.x)/hyp))%360;\n            inputDegrees.value(degree);\n        } else if (degree !== parseInt(inputDegrees.value()) && inputDegrees.value() !== \"\"){\n            degree = parseInt(inputDegrees.value());\n        }\n    };\n\n    const calculations = (p5) => {\n        let xEnd = centerV.x+(radius*p5.cos(degree));\n        let yEnd = centerV.y+(radius*p5.sin(degree));\n        p5.strokeWeight(3);\n        p5.stroke(88, 179, 104);\n        p5.line(centerV.x,centerV.y,xEnd,yEnd);\n        p5.strokeWeight(1);\n        p5.text(\" cosinus:\"+p5.cos(degree) +\"\\n    sinus:\"+p5.sin(degree), wWidth-100, wHeight-50);\n    };\n\n    const backing = (p5) => {\n        p5.background(218, 216, 115);\n        p5.noStroke();\n        p5.fill(239, 238, 180, 170);\n        p5.ellipse(wWidth/2, wHeight/2, wWidth*0.7);\n\n        p5.stroke(69,77,102,50);\n        p5.strokeWeight(1);\n        p5.noFill();\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import simple from '../sketches/simple.js';\nimport rays from '../sketches/rays.js';\nimport fan from '../sketches/fan.js';\nimport heart from '../sketches/heart.js';\nimport breathe from '../sketches/breathe.js';\nimport pyramid from '../sketches/pyramid.js';\nimport techdiff from '../sketches/techdiff.js';\nimport splat from '../sketches/splat.js';\nimport spins from '../sketches/spins.js';\nimport colorSqrs from \"../sketches/colorSqrs\";\nimport sortyBoy from \"../sketches/sortyBoy\";\nimport pinkfloyd from \"../sketches/pinkfloyd\";\nimport spirograph from \"../sketches/spirograph\";\nimport sunny from \"../sketches/sunny\";\nimport twisty from \"../sketches/twisty\";\nimport moenster from \"../sketches/moenster\";\nimport tumble from \"../sketches/tumble\";\nimport glitchy from \"../sketches/glitchy\";\nimport threadEllipse from \"../sketches/threadEllipse\";\nimport sinuswave from \"../sketches/sinuswave\";\nimport falling from \"../sketches/falling\";\nimport findMe from \"../sketches/findMe\";\nimport vulfPeck from \"../sketches/vulfPeck\";\nimport tallyHall from \"../sketches/tallyHall\";\nimport classixx from \"../sketches/classixx\";\nimport tree from \"../sketches/tree\";\nimport jerryFolk from \"../sketches/jerryFolk\";\nimport wavey from \"../sketches/wavey\";\nimport water from \"../sketches/water\";\nimport unitCircle from \"../sketches/unitCircle\";\n\nlet id = 0;\nconst getId = () => {\n    let nowId = id.toString();\n    id++;\n    return nowId;\n};\n\nexport const categories = [\n    \"interaktivt\",\"inputfelt\",\"enkelt\",\"album\",\"noise/random\"\n];\n\n//TODO lag et filter med tags, interaktivt, inputfelt, enkelt, album, noise/random\nexport const drawings = [\n    {\n        id: getId(),\n        description: 'en enkel animasjon',\n        sketch: simple,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'Sol i svart-hvit',\n        sketch: rays,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'vifte',\n        sketch: fan,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'hjerte',\n        sketch: heart,\n        categories: [categories[0], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'pust',\n        sketch: breathe,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'pyramide',\n        sketch: pyramid,\n        categories: [categories[0]]\n    },\n    {\n        id: getId(),\n        description: 'tekniske problemer',\n        sketch: techdiff,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'splat',\n        sketch: splat,\n        categories: [categories[0], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'spinny boi',\n        sketch: spins,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'fargeruter',\n        sketch: colorSqrs,\n        categories: [categories[0], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'Insert sortering',\n        sketch: sortyBoy,\n        categories: [categories[0], categories[1], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'Pinkfloyd - the dark side of the moon',\n        sketch: pinkfloyd,\n        categories: [categories[0], categories[2],categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'spirograph',\n        sketch: spirograph,\n        categories: [categories[0], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'sol og strand',\n        sketch: sunny,\n        categories: [categories[0], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'string-art',\n        sketch: twisty,\n        categories: [categories[0], categories[1], categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'mønstermonster',\n        sketch: moenster,\n        categories: [categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'tumbleweed',\n        sketch: tumble,\n        categories: [categories[4]]\n    },\n    {\n        id: getId(),\n        description: 'glitchy',\n        sketch: glitchy,\n        categories: [ categories[2]]\n    },\n    {\n        id: getId(),\n        description: 'thread-figures',\n        sketch: threadEllipse,\n        categories: [categories[0]]\n    },\n    {\n        id: getId(),\n        description: 'sinus-wave',\n        sketch: sinuswave,\n        categories: [categories[0]]\n    },\n    {\n        id: getId(),\n        description: 'falling',\n        sketch: falling,\n        categories: [categories[0]]\n    },\n    {\n        id: getId(),\n        description: 'Sigma - find me, but colour updates.',\n        sketch: findMe,\n        categories: [categories[2], categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'Tally hall - turn of the lights, but spinning',\n        sketch: tallyHall,\n        categories: [categories[0], categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'A tree',\n        sketch: tree,\n        categories: [categories[4]]\n    },\n    {\n        id: getId(),\n        description: 'Vulfpeck - thrill of the arts, but mouse reactive',\n        sketch: vulfPeck,\n        categories: [categories[0], categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'Classixx - all your waiting for, but arms and legs moving',\n        sketch: classixx,\n        categories: [categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'wavey pattern',\n        sketch: wavey,\n        categories: [categories[0]]\n    },\n    {\n        id: getId(),\n        description: 'TODO: jerry folk - futura, but moving into place',\n        sketch: jerryFolk,\n        categories: [categories[0], categories[3]]\n    },\n    {\n        id: getId(),\n        description: 'TODO: water',\n        sketch: water,\n        categories: [categories[4]]\n    },\n    {\n        id: getId(),\n        description: 'Enhetssirkel',\n        sketch: unitCircle,\n        categories: [categories[0]]\n    },\n    /*{\n        id: getId(),\n        description: 'TODO: a rope, move up and down',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: blobs, either rows or floating around',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: mytype, but jumping off it',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: olaska loop line, but colors translating from orange/blue to pink/green',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO: honningbarna opp de nye blanke, en prikk om gangen uten bakgrunn så tekst',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'TODO:',\n        sketch: simple\n    },*/\n];\n\n//TODO add new favicon\n//TODO ball som faller nedover, ymse figurer går oppover, ball triller av.\n//TODO tegne elipse ved å ha en \"tråd\" mellom to punkter og nærmeste punktet mot musetasten. tegne punkter når en holder inne musa\n//TODO demonstrate that curved triangles roll as smooth as circles.","import React, { useEffect } from 'react';\nimport SketchFrame from './SketchFrame';\nimport { drawings } from './drawings.js';\nimport { useParams } from 'react-router';\n\nfunction ArtPage() {\n    let { id }  = useParams();\n    //const []\n    let drawing = {description: \" \"};\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `You clicked ${id} times`;\n    });\n\n    let nextId = 0,prevId = drawings.length-1;\n    if (id === undefined || id < 0 || id >= drawings.length) {\n        id = 0;\n        drawing = drawings[0];\n        nextId = 1;\n    } else {\n        drawing = drawings[parseInt(id)];\n        nextId = 1 + parseInt(id);\n        if (id !== \"0\"){\n            prevId = parseInt(drawing.id)-1\n        }\n    }\n    if (nextId === drawings.length){\n        nextId = 0;\n    }\n    let sketchy = drawing.sketch();\n\n    return <div className={\"ArtPage\"}>\n        <SketchFrame nextId={nextId} prevId={prevId} description={drawing.description} drawId={drawing.id}>\n            {sketchy}\n        </SketchFrame>\n    </div>;\n}\n\nexport default ArtPage;","import React, { useEffect, useState } from 'react';\n//import SketchFrame from './SketchFrame';\nimport { drawings,categories } from './drawings.js';\n//import { useParams } from 'react-router';\nimport DescriptionCard from \"./DescriptionCard\";\n\nfunction FilterPage() {\n    //let { id }  = useParams();\n    const defaultState = Object.fromEntries(categories.map(cat => {return [cat,false] }));\n    const [filterTags,setFilterTags] = useState(defaultState);\n    const [filteredDrawings,setDrawings] = useState(drawings);\n\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `This is a filtering page`;\n    });\n\n    return <div className={\"FilterPage\"}>\n        <Filter filterObject={filterTags} setFilter={setFilterTags}/>\n        <div className={\"FilterButtonsContainer\"}>\n            <button className={\"FilterButtons\"} onClick={() => {filterList(setDrawings,filterTags,anyMatch)}}>filter on any</button>\n            <button className={\"FilterButtons\"} onClick={() => {filterList(setDrawings,filterTags,allMatch)}}>filter on all</button>\n        </div>\n        <div className={\"FilteredList\"}>\n            {filteredDrawings.map(draw => {\n                return <a href={\".#/post/\"+(draw.id)} key={draw.id}>\n                    <DescriptionCard description={draw.description}/>\n                </a>\n            })}\n        </div>\n    </div>;\n}\n\nconst anyMatch = (array1, array2) => {\n    return array2.length === 0 || array1.filter(value => array2.includes(value)).length > 0;\n};\n\nconst allMatch = (array1, array2) => {\n    return array2.length === 0 || array2.filter(value => array1.includes(value)).length === array2.length;\n};\n\nconst filterList = (setting, tags, matching) => {\n    const activeTags = Object.keys(tags).filter(t => tags[t]);\n    console.log(activeTags);\n    const l = drawings.filter(d => matching(d.categories,activeTags));\n    setting(l);\n    console.log(tags);\n};\n\nfunction Filter({filterObject,setFilter}) {\n    //useFilter(setList,filterObject);\n\n    const handleClick = (e) => {\n        let filterCopy = filterObject;\n        filterCopy[e.target.id] = e.target.checked;\n        setFilter(filterCopy);\n        //console.log(filterCopy);\n        //console.log(filterObject);\n        console.log(e.target.id + \", \" + e.target.checked);\n    };\n\n    return <div className={\"Filter\"}> {categories.map(tag => {\n        return (\n        <div className={\"FilterFelt\"} key={tag}>\n            <label htmlFor={tag}>\n                <input type=\"checkbox\" id={tag} name={tag} value={tag} onClick={(e) => {\n                    handleClick(e)\n                }}/>\n                {tag}\n            </label>\n        </div>\n        )})}\n    </div>\n}\n\nexport default FilterPage;","import React from 'react';\nimport {\n  HashRouter,\n  Route,\n} from \"react-router-dom\";\nimport ArtPage from './ArtPages/ArtPage';\nimport'./App.css';\nimport FilterPage from \"./ArtPages/FilterPage\";\n\n\nfunction App() {\n\n  return <HashRouter>\n    <Route exact path='/list'>\n      <FilterPage/>\n    </Route>\n    <Route exact path='/post/:id'>\n      <ArtPage />\n    </Route>\n    <Route exact path='/'>\n      <ArtPage />\n    </Route>\n  </HashRouter>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}