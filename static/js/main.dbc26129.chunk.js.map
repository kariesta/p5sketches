{"version":3,"sources":["ArtPages/SketchFrame.js","utils.js","sketches/simple.js","sketches/rays.js","sketches/fan.js","sketches/heart.js","sketches/breathe.js","sketches/pyramid.js","sketches/techdiff.js","sketches/splat.js","sketches/spins.js","sketches/colorSqrs.js","sketches/sortyBoy.js","sketches/pinkfloyd.js","sketches/spirograph.js","sketches/sunny.js","sketches/twisty.js","sketches/moenster.js","sketches/tumble.js","ArtPages/drawings.js","ArtPages/ArtPage.js","App.js","reportWebVitals.js","index.js"],"names":["SketchFrame","props","console","log","prevId","className","href","nextId","children","description","calulateDimentions","window","w","innerWidth","h","innerHeight","ratio","frame","p5","bColor","fColor","padding","noStroke","fill","rect","stroke","noFill","SimpleSketch","Sketch","RaysSketch","FanSketch","HeartSketch","BreatheSketch","PyramidSketch","TechdiffSketch","SplatSketch","SpinsSketch","ColorSketch","SortyBoySketch","PinkfloydSketch","SpirographSketch","SunnySketch","TwistySketch","MoensterSketch","TumbleSketch","id","getId","nowId","toString","drawings","sketch","moves","wWidth","wHeight","setup","canvasParentRef","createCanvas","parent","draw","background","ellipse","lim","innerheight","innerwidth","evenEdgeCoor","percent","angle","tan","angleMode","DEGREES","i","coor","line","arc","rotation","length","Math","sqrt","pow","sin","cos","lastCord","distance","points","tris","heartLeft","heartRight","triCount","backing","rotatePoints","pointarray","rotated","rotatedPoints","rotatedBottomPoints","forEach","p","dist","asin","nyx","nyy","push","concat","offset","xOff","yOff","map","x","generatePoints","y","slice","strokeWeight","point","poinatos","triangle","mousePressed","mw","mh","rotneg","increase","j","lineCount","sideLength","triangleColor","color","unitDistance","xOffset","yOffset","triangleCornerX","triangleCornerY","mouseX","mouseY","width","height","pointInFrame","betweenfocals","sum","a","b","text","splat","numX","randomGaussian","numY","transparency","corners","widthSpace","heightSpace","blocked","findCorners","antX","antY","maxX","maxY","corns","sortButton","shuffleBottton","positionStyle","toSortIndex","toShuffleIndex","numOfStones","circleRadius","isSorting","isShuffled","StonePosition","this","StoneColor","c","nr","stonePositions","stoneColors","initArrays","sortingStep","smallest","filter","it","smallestIndex","indexOf","shufflingStep","randomIndex","floor","random","sortStones","shuffleStones","frameRate","colorMode","HSB","getBoundingClientRect","buttonBaseX","buttonBaseY","createButton","position","pos","col","midtX","midtY","colors","lightTriangel","offSet","horisontal","vert1","vert2","ratio1","ratio2","degree","orbitPos","radius","tinyXY","dotXY","tinyRad","backgroundColor","frameColor","waveColors","mouseWeightY","toCenter","sunW","sunH","wave","wavesize","HALF_PI","PI","lineart","movement","mX","mY","undefined","lastDot","startDot","endDot","dotDiff","locked","animate","inputD","inputC","dots","lines","circleR","numOfDots","Dot","Line","x1","y1","x2","y2","mouseInDots","inDot","d","resetDots","createInput","value","textSize","l","nextDot","mouseReleased","abs","triangleHeight","triangleSides","back","randomSeed","down","top","mid","bot","ts2","squares","RADIANS","cFrom","cTo","stubs","tumbleWeed","weed","scale","lerpColor","quad","stub","translate","rotate","ArtPage","useParams","drawing","useEffect","document","title","parseInt","sketchy","drawId","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbc26129.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SketchFrame(props) {\n    console.log(props.prevId);\n    return <div className={\"SketchFrame\"}>\n        <div className={\"SketchNav\"}>\n            <a href={\".#/\"+(props.prevId)}><h2>Prev</h2></a>\n            <a href={\".#/\"+(props.nextId)}><h2>Next</h2></a>\n        </div>\n        <div className={\"SketchWall\"}>\n            {props.children}\n            <div className={\"descriptionCard\"}>\n                <p>{props.description}</p>\n            </div>\n        </div>\n    </div>;\n}\n/*        <a href={\".#/\"+(props.nextId)} onClick={forceUpdate}><h2>Next</h2></a>\n*/\n\nexport default SketchFrame;","export const calulateDimentions = (window) => {\n    const { innerWidth: w, innerHeight: h } = window;\n    const ratio = 3/5;\n    if(w >= h){\n        return [h*ratio ,h*ratio];\n    } else {\n        return [w*ratio ,w*ratio];\n    }\n};\n\nexport const frame = (p5,bColor,fColor,padding,w,h) => {\n    p5.noStroke();\n    p5.fill(bColor);\n    p5.rect(0,0,padding,h);\n    p5.rect(0,0,w,padding);\n    p5.rect(0,h-padding,w,padding);\n    p5.rect(w-padding,0,padding,h);\n    p5.stroke(fColor);\n    p5.noFill();\n    p5.rect(padding,padding,w-(padding*2),h-(padding*2));\n};\n\nexport const pointInFrame = (width,height,padding,x,y) => {\n  let xInFrame = x>padding && x<(width-padding);\n  let yInFrame = y>padding && y<(height-padding);\n  return xInFrame && yInFrame;\n};\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    let moves = 0;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n    };\n\n    const draw = p5 => {\n        p5.background(255, 130, 20);\n        p5.fill(255, 130, 20);\n        p5.ellipse(100+moves, 100+moves, 100+moves);\n        p5.ellipse(300, 100, 100);\n        moves++;\n    };\n\n    return <SimpleSketch setup={setup} draw={draw} />;\n}\n\nclass SimpleSketch extends Sketch {}\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\n/*function rays(){\n    let lim;\n    let innerheight;\n    let innerwidth;\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n    let wWidth = 400, wHeight = 400;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(innerwidth, wHeight).parent(canvasParentRef);\n\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        //p5.rect(0,0,innerwidth,innerheight/2);\n        //p5.noFill();\n\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(innerwidth/2,innerheight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(innerwidth/2,innerheight/2,100,100,180,0);\n    };\n\n    return <Sketch setup={setup} draw={draw}/>;\n}*/\n\nexport default function rays() {\n    let maxLim = 200;\n\n    let lim;\n    let innerheight;\n    let innerwidth;\n    const [wWidth,wHeight] = calulateDimentions(window);\n    //const { innerWidth: wWidth, innerHeight: wHeight } = window;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        lim=0;\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        innerheight = wHeight-10;\n        innerwidth = wWidth-10;\n    };\n\n    const draw = p5 => {\n        p5.background(25, 10, 20);\n        p5.ellipse(100, 100, 100);\n        // Set the background to black and turn off the fill color\n        p5.background(0);\n        p5.fill(255);\n        p5.stroke(255);\n        p5.rect(0,0,wWidth,wHeight/2);\n        p5.noFill();\n\n        for(let i = 0; i<=lim; i++) {\n            p5.stroke(0);\n            let coor = evenEdgeCoor(p5,i / lim);\n            p5.stroke(0);\n            p5.line(innerwidth/2,innerheight/2,coor[0],coor[1]);\n            p5.stroke(255);\n            p5.line(innerwidth/2,innerheight/2,coor[0],innerheight-coor[1]);\n        }\n        if (lim<maxLim){\n            lim++;\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.arc(wWidth/2,wHeight/2,100,100,0,180);\n        p5.fill(0);\n        p5.arc(wWidth/2,wHeight/2,100,100,180,0);\n    };\n\n    const evenEdgeCoor = (p5,percent) => {\n        let angle = percent*180;\n        if (angle<45){\n            return[(wWidth-innerwidth)/2,(innerheight/2)*(p5.tan(angle))]\n        } else if (angle<90){\n            return[(innerwidth/2)*(p5.tan(90-angle)),(wHeight-innerheight)/2];\n        } else if (angle<(90+45)){\n            return[(innerwidth/2)+((innerwidth/2)*(p5.tan(135-angle))),(wHeight-innerheight)/2];\n            //x =0;\n        } else{\n            return[innerwidth+((wWidth-innerwidth)/2),((innerheight/2)*(p5.tan((180-angle))))];\n        }\n    };\n\n    return <RaysSketch setup={setup} draw={draw} />;\n}\n\nclass RaysSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function simple(){\n    let rotation = 5;\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n    };\n\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(240,100,100);\n        let w = 180;\n        let h = 100;\n        for (let i = 0; i<360;i+=5){\n            let length = Math.sqrt(Math.pow(w*p5.sin(i),2)+Math.pow(h*p5.cos(i),2));\n            let lastCord = (wHeight/2);\n            let distance = (length*p5.sin(i+rotation));\n            if(i<90){\n                lastCord += distance;\n            } else if(i<180){\n                lastCord -= distance;\n            } else if(i<270){\n                lastCord += distance;\n            } else {\n                lastCord -= distance;\n            }\n            p5.line((wWidth/2),(wHeight/2),(wWidth/2)+((length*p5.cos(i+rotation))),lastCord);\n        }\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n\n        rotation += 0.2;\n    };\n\n    return <FanSketch setup={setup} draw={draw} />;\n}\n\nclass FanSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function heart(){\n    const wWidth = 400, wHeight = 400;\n    let points = [];\n    let tris = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n    let heartLeft = [[0,0]*12];\n    let heartRight = [[0,0]*12];\n    let triCount = 2;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        generatePoints();\n\n        heartLeft = offset(rotatePoints(p5, points,45,0),14,0);\n        heartLeft = heartLeft.slice(25,40).concat(heartLeft.slice(0,9));\n        heartRight = offset(rotatePoints(p5, points,135,0),-14,0);\n        heartRight = heartRight.slice(12,34);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100);\n        heartLeft.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.stroke(250,100,100);\n        heartRight.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        p5.line(heartRight[0][0],heartRight[0][1],heartRight[heartRight.length-1][0],heartRight[heartRight.length-1][1]);\n\n        //draw triangles\n        p5.noStroke();\n        if (tris.length>0){\n            tris.forEach((poinatos) => {\n                p5.fill(250,100,100);\n                p5.triangle(poinatos[0][0],poinatos[0][1],poinatos[1][0],poinatos[1][1],poinatos[2][0],poinatos[2][1]);\n            });\n        }\n\n        rotation = (rotation%360)+5;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n    };\n\n    const rotatePoints = (p5,pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            //line(width/2,height/2,nyx,nyy);//points[k][0],points[k][1]);\n            //stroke(255);\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    const offset = (pointarray,xOff,yOff) => {\n        return pointarray.map(x => [x[0]+xOff,x[1]+yOff]);\n    };\n\n    const mousePressed = () => {\n        //add triangle\n        if (triCount<heartRight.length-1){\n            tris.push([heartRight[0],heartRight[heartRight.length-1],heartRight[triCount++]]);\n            tris.push([heartLeft[0],heartLeft[heartLeft.length-1],heartLeft[triCount++]]);\n        } else {\n            triCount = 1;\n            tris = [];\n        }\n    };\n\n    //alt for treigt, regn ut fra sentrum & vinkler.\n    const generatePoints = () => {\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n === 1){\n                    points.push([x,y]);\n                }\n            }\n        }\n    };\n\n    return <HeartSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass HeartSketch extends Sketch {}\n\n\n\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function breathe(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const mw = wWidth/2, mh = wHeight/2;\n    let rotation = 5;\n    let rotneg = false;\n    let offset=100-45;\n    let increase = 2*(rotation%90/90);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        p5.stroke(150,50,50);\n        p5.line(mw,mh,mw+(50*p5.sin(rotation)),mh+(50*p5.cos(rotation)));\n        p5.line(mw,mh,mw+(100*p5.cos(rotation)),mh+(100*p5.sin(rotation)));\n        \n        p5.stroke(50);\n        for (let j = 0;j<20;j++){\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw-(50*p5.sin((180/20)*j)));\n            p5.line(mw-offset+(j*10),wHeight/2,mw-100+(j*10),mw+(50*p5.sin((180/20)*j)));\n        }\n\n        if (rotneg){\n            offset -= increase;\n        } else {\n            offset += increase;\n        }\n\n        if (rotation%90 === 0){\n            rotneg = !rotneg;\n        }\n        rotation = (rotation%360)+1;\n        increase = 2*(rotation%90/90);\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n    };\n\n    return <BreatheSketch setup={setup} draw={draw} />;\n}\n\nclass BreatheSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame, pointInFrame} from \"../utils\";\n\n//TODO utvide med vertikale trekanter istede for horisontale streker.\nexport default function pyramid(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const padding = 40;\n    let lineCount = 9; //linenumber\n    let sideLength = 280;\n    let bColor = 250 ,triangleColor = 0;\n    //let topp;let left;let right;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        bColor = p5.color(200,230,222);\n        triangleColor = p5.color(100,130,122);\n    };\n\n    const draw = p5 => {\n        p5.background(bColor);\n\n        p5.strokeWeight(1);\n        p5.stroke(0,0,0,80);\n        p5.fill(triangleColor);\n        //offset of coorinates\n        let unitDistance = (sideLength/lineCount);\n        let xOffset = unitDistance*0.5;\n        let yOffset = xOffset*Math.sqrt(3);\n        let triangleCornerX = (wWidth-sideLength)/2;\n        let triangleCornerY = (wHeight-(sideLength-20))/2;\n\n        //3 arrays of coordinates, one for each side.\n        //draw the lines from line coordinates to x\n        for (let i = 0; i < lineCount; i++) {\n            p5.line(triangleCornerX+(unitDistance*i),triangleCornerY,p5.mouseX,p5.mouseY); //top\n            p5.line(triangleCornerX+(xOffset*i),triangleCornerY+(yOffset*i),p5.mouseX,p5.mouseY); //left\n            p5.line(triangleCornerX+sideLength-(xOffset*i),triangleCornerY+(yOffset*i),p5.mouseX,p5.mouseY); //right\n        }\n        //Final frame\n        frame(p5,bColor,triangleColor,padding,wWidth,wHeight);\n    };\n\n    const mousePressed = (p5) => {\n        if(pointInFrame(wWidth,wHeight,padding,p5.mouseX,p5.mouseY)){\n            lineCount++;\n        } else {\n            lineCount = 1;\n        }\n    };\n\n    return <PyramidSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass PyramidSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function techdiff(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let points = [];\n    let rotation = 5;\n    let ellipseaddon = 80;\n    let betweenfocals;\n    let length;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        // Sets the screen to be 720 pixels wide and 400 pixels high\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        betweenfocals = Math.sqrt(Math.pow(wWidth/2,2)+Math.pow(wHeight/2,2));\n        length = (wWidth/2)+ellipseaddon;\n    };\n\n    const draw = p5 => {\n        backing(p5);\n\n        //rotating lines\n        p5.line(wWidth/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        p5.line(wWidth*3/4,wHeight/2,(wWidth*3/4)+Math.sqrt(800)*p5.cos(rotation),(wHeight/2)-Math.sqrt(800)*p5.sin(rotation));\n        let i = 1;\n        let sum = 0;\n        let a = 0;\n        let b = 0;\n        while(sum<length){\n            //for(i = 1; i<100; i++){\n            //a = Math.sqrt(Math.pow(i*cos(rotation),2)+Math.pow(i*sin(rotation),2));\n            a = Math.sqrt(Math.pow(i*p5.cos(rotation),2)+Math.pow(i*p5.sin(rotation),2));\n            b = Math.sqrt(Math.pow((i+betweenfocals)*p5.cos(rotation),2)+Math.pow((i+betweenfocals)*p5.sin(rotation),2));\n            sum = a+b;\n            i++;\n            p5.line(10,10*i,i*p5.cos(rotation),10*i);\n            p5.line(10,5+(10*i),i*p5.sin(rotation),5+10*i);\n        }\n\n        p5.text(sum,10,40);\n        p5.text(length,10,50);\n        let x = (wWidth/4)+(a*p5.cos(rotation+45));\n        let y = (wHeight*3/4)+(b*p5.sin(rotation+45));\n        p5.stroke(50,150,50);\n        p5.line(wWidth/4,wHeight/2,x,y);\n        p5.stroke(150,50,50);\n        p5.line(wWidth*3/4,wHeight/2,x,y);\n        p5.line(wWidth/4,wHeight/2,p5.mouseX,p5.mouseY);\n        p5.line(wWidth*3/4,wHeight/2,p5.mouseX,p5.mouseY);\n        points.push([(wWidth/4)-(a*p5.sin(rotation+45)),(wHeight*3/4)+b*p5.cos(rotation+45)]);\n\n        p5.stroke(50);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        points.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(50*p5.sin(rotation)),(wHeight/2)+(50*p5.cos(rotation)));\n        p5.line(wWidth/2,wHeight/2,(wWidth/2)+(100*p5.cos(rotation)),(wHeight/2)+(100*p5.sin(rotation)));\n        for (let j = 0;j<20;j++){\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)-(25*p5.sin((180/20)*j)));\n            p5.line((wWidth/2)-50+(j*5),wHeight/2,(wWidth/2)-50+(j*5),(wHeight/2)+(25*p5.sin((180/20)*j)));\n\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)-50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n            p5.line(wWidth/2,  (wHeight/2)-25+(j*2.5), (wWidth/2)+50*p5.cos((180/20)*j), (wHeight/2)-25+(j*2.5));\n        }\n\n        rotation = (rotation%360)+1;\n    };\n\n    function backing(p5) {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.ellipse(wWidth/2,wHeight/2,100,50,150);\n        p5.stroke(10);\n        p5.strokeWeight(10);\n        p5.point(wWidth/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.point(wWidth*3/4,wHeight/2);  //point(width/4,height*3/4);\n        p5.strokeWeight(1);\n        p5.stroke(150,50,50);\n    }\n\n    return <TechdiffSketch setup={setup} draw={draw} />;\n}\n\nclass TechdiffSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function splat(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let splat = [];\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(135,206,235,50);\n        for (let i = 1; i < splat.length; i++) {    //drawing all circles\n            p5.ellipse(splat[i][0], splat[i][1], splat[i][2], splat[i][3]);\n        }\n    };\n\n    const mousePressed = (p5) => {\n        for (let i= 1; i < 20; i++){    //making 20 circles\n            let numX = p5.randomGaussian(0,1);\n            let numY = p5.randomGaussian(0,1);   //20 gaussian spread numbers\n            let meanX = p5.mouseX;\n            let meanY = p5.mouseY;//not actually needed in this code atm, but for future ideas\n            let standardDeviation = 50;\n            let x = standardDeviation * numX + meanX;\n            let y = standardDeviation * numY + meanY;\n            splat.push([x, y, 10/numX, 10/numX]); //only numX because numX with numY makes very long ellipses,could be fun though, try it yourself.\n        }\n    };\n\n    return <SplatSketch  className={\"sketchy2\"}  setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass SplatSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function spins(){\n    const wWidth = 400, wHeight = 400;\n    const transparency = 200;\n    let points = [];\n    let rotation = 5;\n    let w = 200;\n    let h = 100;\n\n\n    const setups = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        for (let x = 0; x<wWidth;x++){\n            for(let y = 0; y<wHeight;y++){\n                let m = Math.pow(x-(wWidth/2),2)/Math.pow(w/2,2);\n                let n = Math.pow(y-(wHeight/2),2)/Math.pow(h/2,2);\n                if(m+n===1){\n                    //points.push([(width/2)+((x-(width/2))*cos(rotation)),(height/2)+((y-(height/2))*sin(rotation))]);\n                    points.push([x,y]);\n                }\n            }\n        }\n        //console.log(\"start window \" + canvasParentRef);\n        //console.log(\"start window \" + p5.canvas.parentElement.toString());\n        //console.log(\"   -> \" + p5.canvas.width + \",,,\" + p5.canvas.height);\n        //console.log(\"start spins \"+points.length);\n    };\n\n    const draw = p5 => {\n        backing(p5);\n        p5.strokeWeight(5);\n        p5.stroke(200,100,100,transparency);\n        let spin = rotatePoints(p5,points,rotation);\n        spin.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n        //console.log(\"spinnys \"+spin.length);\n        p5.stroke(250,100,100,transparency);\n        let spinoff = rotatePoints(p5,points,-rotation);\n\n        spinoff.forEach((p) => {\n            p5.point(p[0],p[1]);\n        });\n\n        rotation = (rotation%360)+1;\n    };\n\n    const backing = (p5) => {\n        p5.background(135, 206, 235);\n        p5.noStroke();\n        p5.fill(255);\n        p5.stroke(240,110,110,transparency);\n        p5.strokeWeight(10);\n        p5.point(wWidth*2/4,wHeight/2);  //point(width*3/4,height/4);\n        p5.strokeWeight(1);\n        p5.line(wWidth/2,0,wWidth/2,wHeight);\n        p5.line(0,wHeight/2,wWidth,wHeight/2);\n        p5.stroke(150,50,50,transparency);\n    };\n\n    const rotatePoints = (p5, pointarray,rotated) => {\n        let rotatedPoints = [];\n        let rotatedBottomPoints = [];\n        pointarray.forEach((p) => {\n            //roter punktene\n            let dist = Math.sqrt(Math.pow(wWidth/2-p[0],2)+Math.pow(wHeight/2-p[1],2));\n            let angle = p5.asin((wWidth/2-p[0])/dist);\n            let nyx = (dist*p5.cos(rotated+angle));\n            let nyy = (dist*p5.sin(rotated+angle));\n            let xc = wWidth/2;\n            let yc = wHeight/2;\n            rotatedPoints.push([xc-nyx,yc-nyy]);\n            rotatedBottomPoints.push([xc+nyx,yc+nyy]);\n        });\n\n        return rotatedPoints.concat(rotatedBottomPoints);\n    };\n\n    return <SpinsSketch className={\"sketchy\"} setup={setups} draw={draw} />;\n}\n\nclass SpinsSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function colorSqrs(){\n    const wWidth = 400, wHeight = 400;\n    let corners = [[0,0]];\n    let widthSpace = 0;\n    let heightSpace = 0;\n    let numX = 13;\n    let numY = 13;\n    let blocked = [];\n\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n\n        //regn ut coordinater, width,height\n        corners = findCorners(numX,numY,wWidth-10,wHeight-10);\n        corners = corners.map (x => [x[0]+10,x[1]+10]);\n        blocked = [false*corners.length];\n        widthSpace = corners[1][0]-corners[0][0];\n        heightSpace = corners[numX][1]-corners[0][1];\n    };\n\n    const draw = p5 => {\n        p5.background(255);\n        p5.noStroke();\n        p5.fill(255);\n        if (corners.length>= numX) {\n            for(let x = 0; x<numX; x++){\n                for(let y = 0; y<numY; y++){\n                    //avgjør farge\n                    if (blocked[(x*numX)+y]){\n                        p5.fill(255);\n                    } else {\n                        p5.fill(x*255/numX,y*255/numY,p5.cos(((x*numX)+y)/corners.length)*255);\n                    }\n\n                    //tegn rute.\n                    p5.rect(corners[(x*numX)+y][0],corners[(x*numX)+y][1],widthSpace-10,heightSpace-10);\n                }\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        //finner hvilken rute vi er i nå.\n        if (p5.mouseX < wWidth && p5.mouseX > 0 && p5.mouseY < wHeight && p5.mouseY > 0){\n            let i = 0;\n            while (corners[i][1] < p5.mouseY && i<corners.length-1){\n                i++;\n            }\n            if (i !== corners.length-1){\n                i--;\n            }\n            while (corners[i][0] > p5.mouseX &&  i>0){\n                i--;\n            }\n            //endre farge\n            blocked[i] = !blocked[i];\n        }\n    };\n\n    const findCorners = (antX, antY, maxX,maxY) => {\n        let x = maxX/antX;\n        let y = maxY/antY;\n        let corns = [];\n        for(let j = 0; j+y<=maxY;j+=y){\n            for(let i = 0; i+x<=maxX;i+=x){\n                corns.push([i,j]);\n            }\n        }\n        return corns;\n    };\n\n    return <ColorSketch setup={setup} draw={draw} mousePressed={mousePressed}/>;\n}\n\nclass ColorSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function sortyBoy(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const positionStyle = 'fixed';\n    //it can be static, fixed, relative, sticky, initial or inherit\n    let sortButton, shuffleBottton, toSortIndex = 0, toShuffleIndex = 0;\n    let numOfStones = 12, circleRadius = wWidth*0.3, stoneRadius = 20;\n    let isSorting = false, isShuffled = false;\n    class StonePosition {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class StoneColor {\n        constructor(i,c) {\n            this.nr = i;\n            this.color = c;\n        }\n    }\n    let stonePositions = [new StonePosition(0,0)],stoneColors = [new StoneColor(0,0)];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES);\n        p5.frameRate(4);\n        p5.colorMode(p5.HSB, wHeight, wHeight, wHeight);\n        initArrays(p5);\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n\n        //sort knapp\n        sortButton = p5.createButton('insertion sort');\n        sortButton.position(buttonBaseX+30, buttonBaseY+55, positionStyle);\n        sortButton.mousePressed(sortStones);\n\n        //shuffleknapp\n        shuffleBottton = p5.createButton('shuffle');\n        shuffleBottton.position(buttonBaseX+130, buttonBaseY+55, positionStyle);\n        shuffleBottton.mousePressed(shuffleStones);\n    };\n\n    const draw = p5 => {\n        p5.background(80);\n        p5.noStroke();\n        p5.fill(255);\n\n\n        for (let i = 0; i<stoneColors.length; i++){\n            let pos = stonePositions[i];\n            let col = stoneColors[i];\n            p5.fill(col.color);\n            p5.ellipse(pos.x,pos.y,stoneRadius,stoneRadius);\n            p5.text(col.nr,pos.x-10,pos.y-10);\n        }\n        if(isShuffled){\n            shufflingStep();\n        }\n        if(isSorting){\n            sortingStep();\n        }\n    };\n\n    const initArrays = (p5) => {\n        stoneColors = [];\n        stonePositions = [];\n        for (let i = 0; i<numOfStones; i++){\n            stoneColors.push(new StoneColor(i, p5.color(i*(360/numOfStones),wHeight,wHeight)));\n            let x = (wWidth/2)+p5.cos((i/numOfStones)*360)*circleRadius;\n            let y = (wHeight/2)+p5.sin((i/numOfStones)*360)*circleRadius;\n            stonePositions.push(new StonePosition(x,y));\n        }\n    };\n\n    const sortingStep = () => {\n        let smallest = stoneColors.filter(it => it.nr === toSortIndex)[0];\n        let smallestIndex = stoneColors.indexOf(smallest);\n        [stoneColors[smallestIndex], stoneColors[toSortIndex]] = [stoneColors[toSortIndex], stoneColors[smallestIndex]];\n        toSortIndex+=1;\n        if (toSortIndex === numOfStones){\n          isSorting = false;\n        }\n    };\n\n    const shufflingStep = () => {\n        let randomIndex = Math.floor(Math.random() * toShuffleIndex);\n        // And swap it with the current element.\n        [stoneColors[randomIndex], stoneColors[toShuffleIndex]] = [stoneColors[toShuffleIndex], stoneColors[randomIndex]];\n        toShuffleIndex++;\n        if (toShuffleIndex === numOfStones){\n            isShuffled = false;\n        }\n    };\n\n    const sortStones = () => {\n        //console.log(\"insertion sort\");\n        isSorting = true;\n        isShuffled = false;\n        toSortIndex = 0;\n    };\n\n    const shuffleStones = () => {\n        //console.log(\"shuffle\");\n        isShuffled = true;\n        isSorting = false;\n        toShuffleIndex = 0;\n    };\n\n  return <SortyBoySketch setup={setup} draw={draw} />;\n}\n\nclass SortyBoySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function pinkfloyd(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let midtX = 0;\n    let midtY = 0;\n    let colors = [];\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //angleMode(DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        midtX = wWidth/2;\n        midtY = wHeight/3;\n        colors = [\n            p5.color(255,110,100),\n            p5.color(240,200,10),\n            p5.color(255,255,100),\n            p5.color(100,255,100),\n            p5.color(50,50,250),\n            p5.color(50,10,255),\n            p5.color(185,10,235)\n        ]\n    };\n\n    const draw = p5 => {\n        p5.background(0);\n        p5.stroke(255);\n        p5.strokeWeight(5);\n        p5.line(p5.mouseX,p5.mouseY,midtX,midtY);\n        lightTriangel(p5);\n        p5.strokeWeight(3);\n        p5.stroke(255,255,255);\n        p5.fill(0);\n        p5.triangle(midtX,midtY*4/5,wWidth/3,midtY*2,wWidth*2/3,midtY*2);\n    };\n\n    const lightTriangel = (p5) => {\n        p5.strokeWeight(1);\n        let offSet = 30;\n        for (const col of colors) {\n            p5.fill(col);\n            p5.stroke(col);\n            let horisontal = (wWidth-p5.mouseX)-midtX;\n            let vert1 = (p5.mouseY-offSet)-midtY;\n            let vert2 = (p5.mouseY-offSet-7)-midtY;\n            let ratio1 = vert1/horisontal;\n            let ratio2 = vert2/horisontal;\n            p5.triangle(midtX,midtY,wWidth,midtY+(wWidth*ratio1),wWidth,midtY+(wWidth*ratio2));\n            offSet -= 7;\n        }\n    };\n\n    return <PinkfloydSketch setup={setup} draw={draw} />;\n}\n\nclass PinkfloydSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function spirograph(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let degree = 0;\n    let points = [];\n    const bigRad = 150;\n    const tinyRad = 35;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //p5.frameRate(1);\n        //regn ut coordinater, width,height\n    };\n\n    //Ta noen kule farger da vell\n    // TODO tegn ringer\n    // liten ring beveger seg inni stor ring, omkretsen av liten ring og stor ring skal forholde seg likt.\n    const draw = p5 => {\n        p5.background(135, 206, 235);\n        degree=(degree+1)%360;\n\n        p5.fill(250);\n        p5.noStroke();\n        let tinyXY= orbitPos(p5, (bigRad-tinyRad)/2, degree);\n        p5.ellipse(wWidth/2+tinyXY[0],(wHeight/2)+tinyXY[1],tinyRad,tinyRad);\n        p5.noFill();\n        p5.stroke(0);\n        p5.strokeWeight(1);\n        p5.ellipse(wWidth/2,(wHeight/2),bigRad,bigRad);\n\n\n        //loop through list of dots.\n        let dotXY=orbitPos(p5,tinyRad/2,360-degree);\n        points.push([wWidth/2+tinyXY[0]+dotXY[0],(wHeight/2)+tinyXY[1]+dotXY[1]]);\n\n        for (let i = 0; i<points.length; i++){\n            p5.point(points[i][0],points[i][1]);\n        }\n\n        //regner ut ny posisjon for dot.\n        //tegner en liste av tidligere og den nye dotten\n    };\n\n    //degree range from 0 to 359.\n    const orbitPos = (p5,radius, degree) => {\n        return [radius*p5.sin(degree),radius*p5.cos(degree)];\n    };\n\n    return <SpirographSketch setup={setup} draw={draw} />;\n}\n\nclass SpirographSketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions, frame} from \"../utils\";\n\nexport default function sunny(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    const paddingToFrame = 30;\n    let mouseWeight = 0.06; //lineart\n    let mouseWeightY = -0.11; //background\n    let toCenter = wWidth/2;\n    let sunW = (wWidth/2)+9, sunH = sunW-52;\n    let backgroundColor,frameColor,waveColors;\n\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        //p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        backgroundColor = p5.color(250,245,245);\n        frameColor = p5.color(0);\n        waveColors = [p5.color(0,250,270),p5.color(0,225,245),p5.color(0,240,260)];\n    };\n\n    const notInitialiced = () => {\n        return backgroundColor === undefined &&\n            frameColor === undefined &&\n            waveColors === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        p5.background(backgroundColor);\n        p5.noStroke();\n        p5.fill(252,232,190);\n        p5.ellipse(sunW+(mouseWeightY*(p5.mouseX-toCenter)),sunH+(mouseWeightY*(p5.mouseY-toCenter)),70,70);\n        p5.noFill();\n        p5.strokeWeight(20);\n        let xOff = 0, yOff = 0;\n\n        /*\n        let waveOffset = [[30,0],[12,15],[-6,30]];\n        for (let i = 0; i< waveColors.length;i++){\n            wave(p5,waveColors[i],xOff+waveOffset[i]+(mouseWeightY*(p5.mouseX-toCenter)),yOff+waveOffset[i]+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        }\n        */\n        wave(p5,waveColors[0],xOff+30+(mouseWeightY*(p5.mouseX-toCenter)),yOff+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[1],xOff+12+(mouseWeightY*(p5.mouseX-toCenter)),yOff+15+(mouseWeightY*(p5.mouseY-toCenter)),40);\n        wave(p5,waveColors[2],xOff-6+(mouseWeightY*(p5.mouseX-toCenter)),yOff+30+(mouseWeightY*(p5.mouseY-toCenter)),40);\n\n        //v lineart background v\n        lineart(p5,backgroundColor,mouseWeightY,xOff,yOff);\n\n        //v lineart v\n        lineart(p5,frameColor,mouseWeight,xOff,yOff);\n\n        //Final frame\n        frame(p5,backgroundColor,frameColor,paddingToFrame,wWidth,wHeight);\n    };\n\n    const wave = (p5,color,xOff,yOff,wavesize) => {\n        p5.stroke(color);\n        for (let i = 0; i < 11; i++) {\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*i),wavesize,wavesize,p5.HALF_PI, p5.PI);//wave*3\n            p5.arc(xOff+(wavesize*i),yOff+(wavesize*(i+1)),wavesize,wavesize,p5.HALF_PI+p5.PI,0);//wave*3\n        }\n    };\n\n    const lineart = (p5,color,movement,xOff,yOff) => {\n        p5.strokeWeight(4);\n        p5.noFill();\n        let mX = (movement*(p5.mouseX-toCenter));\n        let mY = (movement*(p5.mouseY-toCenter));\n        p5.stroke(color);\n        p5.arc(sunW+mX,sunH+mY,70,70, p5.PI+0.14,p5.HALF_PI-0.1);//wave*3\n        wave(p5,color,xOff+38+mX,yOff-9+mY,40);\n        wave(p5,color,xOff+21+mX,yOff+7+mY,40);\n        wave(p5,color,xOff+4+mX,yOff+23+mY,40);\n        wave(p5,color,xOff-13+mX,yOff+39+mY,40);\n    };\n\n    return <SunnySketch setup={setup} draw={draw} />;\n}\n\nclass SunnySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils.js\";\n\nexport default function twisty(){\n    const [wWidth,wHeight] = calulateDimentions(window);\n    let dots = [], lines = [];\n    let dotR = 20, circleR = 100, numOfDots = 12;\n    let lastDot,startDot,endDot,dotDiff,locked, animate;\n    let inputD, inputC;\n    class Dot {\n        constructor(i,x,y){\n            this.nr = i;\n            this.x = x;\n            this.y = y;\n        }\n    }\n    class Line {\n        constructor(i,x1,y1,x2,y2){\n            this.nr = i;\n            this.x1 = x1;\n            this.x2 = x2;\n            this.y1 = y1;\n            this.y2 = y2;\n        }\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        resetDots(p5);\n\n        inputD = p5.createInput();\n        inputC = p5.createInput();\n        inputD.value(numOfDots);\n        inputC.value(circleR);\n        p5.fill(20);\n        p5.stroke(20);\n        p5.textSize(12);\n        p5.text(\"dots\",10, 65);\n        p5.text(\"radius\",10, 95);\n\n        const {x: buttonBaseX, y: buttonBaseY} = canvasParentRef.getBoundingClientRect();\n        inputD.position(buttonBaseX+80, buttonBaseY+65);\n        inputC.position(buttonBaseX+80, buttonBaseY+95);\n    };\n\n    const notInitialiced = () => {\n        return lastDot === undefined && startDot === undefined && endDot === undefined && dotDiff === undefined &&\n            locked === undefined && animate === undefined && inputD === undefined && inputC === undefined\n    };\n\n    const draw = p5 => {\n        if (notInitialiced()) return;\n        if (inputD.value() !== numOfDots || inputC.value() !== circleR){\n            numOfDots = inputD.value();\n            circleR = inputC.value();\n            resetDots(p5);\n        }\n        p5.background(135,206,235);\n        p5.noStroke();\n        for (const d of dots){\n            //center  = height/2, cos((i/12)*360)*200 = x\n            p5.fill(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.ellipse(d.x,d.y,dotR,dotR);\n        }\n        for (const l of lines){\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(l.nr*4),200+(l.nr*2),200-(l.nr*10));\n            p5.line(l.x1,l.y1,l.x2,l.y2)\n        }\n        if (locked) {\n            let d = dots[startDot];\n            p5.strokeWeight(dotR);\n            p5.stroke(220+(d.nr*4),200+(d.nr*2),200-(d.nr*10));\n            p5.line(p5.mouseX,p5.mouseY,d.x,d.y);\n        }\n        if (animate){\n            let nextDot = (endDot+dotDiff)%numOfDots;\n            ////console.log(\"yo\"+nextDot+\",start:\"+startDot+\",end:\"+endDot);\n            lines.push(new Line(endDot,dots[endDot].x,dots[endDot].y,dots[nextDot].x,dots[nextDot].y));\n            endDot = (endDot+1)%numOfDots;\n            if (startDot === endDot){\n                animate = false;\n            }\n        }\n    };\n\n    const mousePressed = (p5) => {\n        if(mouseInDots(p5)){\n            locked = true;\n            startDot = lastDot;\n        }\n        lines = [];\n    };\n\n    const mouseReleased = (p5) => {\n        locked = false;\n        if(mouseInDots(p5)) {\n            endDot = lastDot;\n            animate = true;\n            dotDiff = Math.abs((startDot-endDot));//(endDot-startDot)%12;\n            //console.log(endDot+\",\"+startDot+\",\"+dotDiff);\n        }\n    };\n\n    const mouseInDots = (p5) => {\n        let inDot = false;\n        for (const d of dots){\n            const myDist = p5.dist(d.x, d.y, p5.mouseX, p5.mouseY);\n            if( myDist<dotR){\n                inDot = true;\n                lastDot = d.nr;\n            }\n        }\n        return inDot;\n    };\n\n    const resetDots = (p5) => {\n        dots = [];\n        lines = [];\n        lastDot = 0;\n        startDot = 0;\n        endDot = 0;\n        dotDiff = 0;\n        locked = false;\n        animate = false;\n        for (let i = 0; i < numOfDots; i++) {\n            let x = (wWidth/2)+p5.cos((i/numOfDots)*360)*circleR;\n            let y = (wHeight/2)+p5.sin((i/numOfDots)*360)*circleR;\n            dots.push(new Dot(i,x,y));\n        }\n    };\n\n    return <TwistySketch setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased} />;\n}\n\nclass TwistySketch extends Sketch {}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport {calulateDimentions} from \"../utils\";\n\nexport default function moenster(){\n    let moves = 0;\n    const triangleSides = 50, triangleHeight = triangleSides*0.866;\n\n    const [wWidth,wHeight] = calulateDimentions(window);\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef)\n        p5.angleMode(p5.RADIANS);\n    };\n\n    const draw = p5 => {\n        //background still\n        p5.background(255);\n        back(p5);\n\n        //pattern1 horisontal\n        lines(p5);\n\n        //pattern2 diagonal\n        squares(p5);\n\n        moves = (moves%40)+1;\n    };\n\n    const back = (p5) => {\n        p5.noStroke();\n        p5.randomSeed(100);\n        for (let down = 0; down<wHeight; down+=2*triangleHeight){\n            const top = down,  mid = top + triangleHeight, bot = mid + triangleHeight;\n            const ts = triangleSides, ts2 = triangleSides/2;\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,top,0,mid,ts2,mid);\n            p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n            p5.triangle(0,bot,0,mid,ts2,mid);\n            for (let x = 0; x< wWidth; x+=ts){\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,top,x+ts,top,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,top,x+ts2*3,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x,bot,x+ts,bot,x+ts2,mid);\n                p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n                p5.triangle(x+ts2,mid,x+ts,bot,x+ts2*3,mid);\n            }\n        }\n    };\n\n    const lines = (p5) => {\n        p5.strokeWeight(10);\n        p5.stroke(250,200,250,200);\n        for (let x = -20; x< wWidth; x+=40){\n            p5.line(20+x+moves,0,x+moves,wHeight);\n        }\n        p5.strokeWeight(10);\n        p5.stroke(255,255,200,200);\n        for (let x = -30; x< wWidth; x+=40){\n            p5.line(0,30+x+moves,wWidth,x+moves);\n        }\n    };\n\n    const squares = (p5) => {\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(100,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(240,wHeight-30-(moves*9),30,30);\n        p5.stroke(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.fill(p5.random(255),p5.random(255),p5.random(255),p5.random(160,250));\n        p5.rect(142,wHeight-25-(moves*9),30,30);\n\n    };\n\n    return <MoensterSketch setup={setup} draw={draw} />;\n}\n\nclass MoensterSketch extends Sketch {}\n","import React from 'react';\nimport Sketch from \"react-p5\";\n\nexport default function tumble(){\n    const wWidth = 400, wHeight = 400;\n    let moves = 30;\n    let stubs = [0,39,54,123,129,290,300,40];\n    let cFrom, cTo;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(wWidth, wHeight).parent(canvasParentRef);\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n        //frameRate(1);\n        cFrom = p5.color(251,252,229,0.4*255);\n        cTo = p5.color(126,100,24,0.4*255);\n\n    };\n\n    const draw = p5 => {\n        p5.background(227,220,180);\n        p5.stroke(215,200,160);\n        p5.fill(215,200,160,180);\n        p5.rect(0,(wHeight-40)/2,wWidth,(wHeight+40)/2);\n        stubs.forEach(stub => {\n            p5.rect((stub+moves*0.7)%wWidth,(wHeight-50)/2,4,8);\n        });\n        p5.translate(moves,165);\n        p5.rotate(2*moves);\n        //0,0 er senter for rotasjon og forflytting\n        tumbleWeed(p5);\n\n        moves=(moves+1)%wWidth;\n    };\n\n    const tumbleWeed = (p5) => {\n        p5.randomSeed(119);\n        //tegn tumbpleweedet her\n        p5.stroke(215,200,160);\n        p5.fill(250,240,230);\n        for (let i = 0.1;i<=1;i+=0.1){\n            weed(p5,i);\n        }\n    };\n\n    const weed = (p5,scale) => {\n        if(p5.random(0,1)!==0){\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.stroke(c);\n        } else {\n            p5.noStroke();\n        }\n        if(p5.random(0,1)!==0){\n            let c = p5.lerpColor(cFrom,cTo,p5.random(0,1));\n            p5.fill(c);\n        } else {\n            p5.noFill();\n        }\n        p5.quad(\n            p5.random(-40, 0)*scale, p5.random(-40, 10)*scale,\n            p5.random(-60, 10)*scale, p5.random(-40, 10)*scale,\n            p5.random(-40, 50)*scale, p5.random(0,60)*scale,\n            p5.random(-40, 50)*scale, p5.random(0,60)*scale\n        )\n    };\n\n    return <TumbleSketch setup={setup} draw={draw} />;\n}\n\nclass TumbleSketch extends Sketch {}","import simple from '../sketches/simple.js';\nimport rays from '../sketches/rays.js';\nimport fan from '../sketches/fan.js';\nimport heart from '../sketches/heart.js';\nimport breathe from '../sketches/breathe.js';\nimport pyramid from '../sketches/pyramid.js';\nimport techdiff from '../sketches/techdiff.js';\nimport splat from '../sketches/splat.js';\nimport spins from '../sketches/spins.js';\nimport colorSqrs from \"../sketches/colorSqrs\";\nimport sortyBoy from \"../sketches/sortyBoy\";\nimport pinkfloyd from \"../sketches/pinkfloyd\";\nimport spirograph from \"../sketches/spirograph\";\nimport sunny from \"../sketches/sunny\";\nimport twisty from \"../sketches/twisty\";\nimport moenster from \"../sketches/moenster\";\nimport tumble from \"../sketches/tumble\";\n\nlet id = 0;\nconst getId = () => {\n    let nowId = id.toString();\n    id++;\n    return nowId;\n};\n\nconst drawings = [\n    {\n        id: getId(),\n        description: 'en enkel animasjon',\n        sketch: simple\n    },\n    {\n        id: getId(),\n        description: 'Sol i svart-hvit',\n        sketch: rays\n    },\n    {\n        id: getId(),\n        description: 'vifte',\n        sketch: fan\n    },\n    {\n        id: getId(),\n        description: 'hjerte',\n        sketch: heart\n    },\n    {\n        id: getId(),\n        description: 'pust',\n        sketch: breathe\n    },\n    {\n        id: getId(),\n        description: 'pyramide',\n        sketch: pyramid\n    },\n    {\n        id: getId(),\n        description: 'tekniske problemer',\n        sketch: techdiff\n    },\n    {\n        id: getId(),\n        description: 'splat',\n        sketch: splat\n    },\n    {\n        id: getId(),\n        description: 'spinny boi',\n        sketch: spins\n    },\n    {\n        id: getId(),\n        description: 'fargeruter',\n        sketch: colorSqrs\n    },\n    {\n        id: getId(),\n        description: 'Insert sortering',\n        sketch: sortyBoy\n    },\n    {\n        id: getId(),\n        description: 'pinkfloyd - the dark side of the moon',\n        sketch: pinkfloyd\n    },\n    {\n        id: getId(),\n        description: 'spirograph',\n        sketch: spirograph\n    },\n    {\n        id: getId(),\n        description: 'sol og strand',\n        sketch: sunny\n    },\n    {\n        id: getId(),\n        description: 'string-art',\n        sketch: twisty\n    },\n    {\n        id: getId(),\n        description: 'mønstermonster',\n        sketch: moenster\n    },\n    {\n        id: getId(),\n        description: 'tumbleweed',\n        sketch: tumble\n    }\n];\n\n//TODO ball som faller nedover, ymse figurer går oppover, ball triller av.\n//TODO glitchy text\n//TODO sinuswave from ball demo.\nexport default drawings;","import React, { useEffect } from 'react';\nimport SketchFrame from './SketchFrame';\nimport drawings from './drawings.js';\nimport { useParams } from 'react-router';\n\nfunction ArtPage() {\n    let { id }  = useParams();\n    //const []\n    let drawing = {description: \" \"};\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `You clicked ${id} times`;\n    });\n\n    let nextId = 0,prevId = drawings.length-1;\n    if (id === undefined || id < 0 || id >= drawings.length) {\n        drawing = drawings[0];\n        nextId = 1;\n        console.log(drawing);\n    } else {\n        drawing = drawings[parseInt(id)];\n        nextId = 1 + parseInt(id);\n        console.log(drawing);\n        if (id !== 0){\n            prevId = parseInt(drawing.id)-1\n        }\n    }\n    if (nextId === drawings.length){\n        nextId = 0;\n    }\n    let sketchy = drawing.sketch();\n    console.log(prevId);\n\n    return <div className={\"ArtPage\"}>\n        <SketchFrame nextId={nextId} prevId={prevId} description={drawing.description} drawId={drawing.id}>\n            {sketchy}\n        </SketchFrame>\n    </div>;\n}\n\nexport default ArtPage;","import React from 'react';\nimport {\n  HashRouter,\n  Route,\n} from \"react-router-dom\";\nimport ArtPage from './ArtPages/ArtPage';\nimport'./App.css';\n\n\nfunction App() {\n\n  return <HashRouter>\n    <Route exact path='/:id'>\n      <ArtPage />\n    </Route>\n    <Route exact path='/'>\n      <ArtPage/>\n    </Route>\n  </HashRouter>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}